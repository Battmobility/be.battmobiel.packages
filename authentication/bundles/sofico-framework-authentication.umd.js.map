{"version":3,"file":"sofico-framework-authentication.umd.js","sources":["../../../../projects/sofico-framework/authentication/src/lib/services/authenticated-result.service.ts","../../../../projects/sofico-framework/authentication/src/lib/services/authentication.service.ts","../../../../projects/sofico-framework/authentication/src/lib/guards/authenticated.guard.ts","../../../../projects/sofico-framework/authentication/src/lib/guards/guest.guard.ts","../../../../projects/sofico-framework/authentication/src/lib/interceptors/custom-oauth.interceptor.ts","../../../../projects/sofico-framework/authentication/src/lib/interceptors/resource-server-auto-logout-error-handler.ts","../../../../projects/sofico-framework/authentication/src/lib/stores/session-storage-oauth.store.ts","../../../../projects/sofico-framework/authentication/src/lib/authentication.module.ts","../../../../projects/sofico-framework/authentication/src/public-api.ts","../../../../projects/sofico-framework/authentication/src/sofico-framework-authentication.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthenticatedResultService {\n  private _authenticatedResult$ = new ReplaySubject<boolean>(1);\n\n  get authenticatedResult$(): Observable<boolean> {\n    return this._authenticatedResult$\n      .asObservable()\n      .pipe(distinctUntilChanged());\n  }\n\n  setAuthenticatedResult(value: boolean): void {\n    this._authenticatedResult$.next(value);\n  }\n}\n","import { PlatformLocation } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Config, ConfigService } from '@sofico-framework/app-config';\nimport { WindowRefService } from '@sofico-framework/utils';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\nimport { filter, take } from 'rxjs/operators';\nimport { AuthenticatedResultService } from './authenticated-result.service';\n\n@Injectable()\nexport class AuthenticationService {\n  private readonly location: Location = this.windowRefService.nativeWindow\n    .location;\n  private readonly baseHref =\n    this.location.origin + this.platformLocation.getBaseHrefFromDOM();\n\n  constructor(\n    private httpClient: HttpClient,\n    private windowRefService: WindowRefService,\n    private oauthService: OAuthService,\n    private router: Router,\n    private configService: ConfigService,\n    private authenticatedResultService: AuthenticatedResultService,\n    private platformLocation: PlatformLocation\n  ) {\n    if (this.configService.config.auth.grant === 'implicit') {\n      this.configureLoginWithSSO();\n      this.listenOnErrorReceivedAndLogout();\n    } else {\n      throw new Error('unsupported authentication grant');\n    }\n  }\n\n  loginWithSingleSignOn(): void {\n    this.oauthService.initImplicitFlow();\n  }\n\n  logout(pathBasedRedirectUri: boolean = false): void {\n    this.oauthService.redirectUri = this.calculateRedirectUri(\n      pathBasedRedirectUri\n    );\n    this.oauthService.logOut();\n  }\n\n  logoutWithoutRedirect(): void {\n    this.oauthService.logOut(true);\n  }\n\n  setPostLogoutRedirectUri(uri: string): void {\n    this.oauthService.postLogoutRedirectUri = uri;\n  }\n\n  private configureLoginWithSSO(): void {\n    const languageParam = this.getLanguageParam();\n\n    const authConfig = {\n      clientId: this.configService.config.auth.clientId,\n      issuer: this.calculateIssuer(this.configService.config),\n      redirectUri: this.calculateRedirectUri(true),\n      silentRefreshRedirectUri: this.baseHref + 'silent-refresh.html',\n      postLogoutRedirectUri: this.baseHref\n    };\n    this.oauthService.configure(authConfig);\n\n    if (languageParam) {\n      this.oauthService.customQueryParams = {\n        // kc_locale because it set a cookie automatically\n        // that contains the language parameter so it's saved\n        // when you refresh and wait to long before you take an action\n        kc_locale: languageParam\n      };\n    }\n\n    this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n    this.oauthService\n      .loadDiscoveryDocumentAndTryLogin()\n      .then(() =>\n        this.authenticatedResultService.setAuthenticatedResult(\n          this.oauthService.hasValidIdToken()\n        )\n      )\n      .catch(() =>\n        this.authenticatedResultService.setAuthenticatedResult(false)\n      );\n    this.oauthService.setupAutomaticSilentRefresh();\n  }\n\n  private calculateRedirectUri(pathBasedRedirectUri: boolean): string {\n    const { protocol, host, pathname, search } = this.location;\n    return `${protocol}//${host}${\n      pathBasedRedirectUri ? pathname + search : ''\n    }`;\n  }\n\n  private calculateIssuer(config: Config): string {\n    return config.auth.baseUrl + config.auth.realm;\n  }\n\n  private listenOnErrorReceivedAndLogout(): void {\n    this.oauthService.events\n      .pipe(\n        filter(\n          event =>\n            event.type === 'silent_refresh_error' ||\n            event.type === 'token_error'\n        ),\n        take(1)\n      )\n      .subscribe(() => this.logout(true));\n  }\n\n  private getLanguageParam(): string {\n    // the reason why we're using windowRefService instead of activatedRouter\n    // to get the router params is because activatedRouter params has no value.\n    // This is because there is no NavigationEnd event on Router\n    const queryString = this.windowRefService.nativeWindow.location.search;\n    const urlParams = new URLSearchParams(queryString);\n\n    return urlParams.get('ui_locales');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthenticatedResultService } from '../services/authenticated-result.service';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable()\nexport class AuthenticatedGuard implements CanActivate {\n  constructor(\n    private authenticationService: AuthenticationService,\n    private authenticatedResultService: AuthenticatedResultService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.authenticatedResultService.authenticatedResult$.pipe(\n      tap((authenticated: boolean) => {\n        if (!authenticated) {\n          this.authenticationService.loginWithSingleSignOn();\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ConfigService } from '@sofico-framework/app-config';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthenticatedResultService } from '../services/authenticated-result.service';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable()\nexport class GuestGuard implements CanActivate {\n  constructor(\n    private authenticationService: AuthenticationService,\n    private authenticatedResultService: AuthenticatedResultService,\n    private configService: ConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.authenticatedResultService.authenticatedResult$.pipe(\n      map((authenticated: boolean) => {\n        if (authenticated) {\n          this.router.navigate(['/']);\n          return false;\n        } else {\n          if (this.configService.config.auth.grant === 'implicit') {\n            this.authenticationService.loginWithSingleSignOn();\n            return false;\n          }\n        }\n        return !authenticated;\n      })\n    );\n  }\n}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '@sofico-framework/app-config';\nimport {\n  OAuthResourceServerErrorHandler,\n  OAuthStorage\n} from 'angular-oauth2-oidc';\nimport { Observable } from 'rxjs';\nimport { catchError, filter, mergeMap, take } from 'rxjs/operators';\nimport { AuthenticatedResultService } from '../services/authenticated-result.service';\n\n@Injectable()\nexport class CustomOAuthInterceptor implements HttpInterceptor {\n  constructor(\n    private authStorage: OAuthStorage,\n    private errorHandler: OAuthResourceServerErrorHandler,\n    private configService: ConfigService,\n    private authenticatedResultService: AuthenticatedResultService\n  ) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const url = req.url.toLowerCase();\n\n    if (!this.configService.config) {\n      return next.handle(req);\n    }\n\n    if (!this.configService.config.auth) {\n      return next.handle(req);\n    }\n\n    if (!this.configService.config.auth.allowedUrls) {\n      return next.handle(req);\n    }\n\n    if (!this.checkUrl(url, this.configService.config.auth.allowedUrls)) {\n      return next.handle(req);\n    }\n\n    return this.authenticatedResultService.authenticatedResult$.pipe(\n      take(1),\n      filter(v => !!v),\n      mergeMap(() => {\n        const token = this.authStorage.getItem('access_token');\n        const header = 'Bearer ' + token;\n        const headers = req.headers.set('Authorization', header);\n        req = req.clone({ headers });\n        return next.handle(req);\n      }),\n      catchError(err => this.errorHandler.handleError(err)) as any\n    );\n  }\n\n  private checkUrl(url: string, allowedUrls: string[]): boolean {\n    const found = allowedUrls.find(u => url.startsWith(u));\n    return !!found;\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { WindowRefService } from '@sofico-framework/utils';\nimport {\n  OAuthResourceServerErrorHandler,\n  OAuthService\n} from 'angular-oauth2-oidc';\nimport { EMPTY, Observable, throwError } from 'rxjs';\n\n@Injectable()\nexport class ResourceServerAutoLogoutErrorHandler\n  implements OAuthResourceServerErrorHandler {\n  private readonly location: Location = this.windowRefService.nativeWindow\n    .location;\n\n  constructor(\n    private oauthService: OAuthService,\n    private windowRefService: WindowRefService\n  ) {}\n\n  handleError(err: HttpResponse<any>): Observable<any> {\n    if (err.status === 401) {\n      this.logout(true);\n      return EMPTY;\n    } else {\n      return throwError(err);\n    }\n  }\n\n  private logout(pathBasedRedirectUri: boolean): void {\n    this.oauthService.redirectUri = this.calculateRedirectUri(\n      pathBasedRedirectUri\n    );\n    this.oauthService.logOut();\n  }\n\n  private calculateRedirectUri(pathBasedRedirectUri: boolean): string {\n    const { protocol, host, pathname, search } = this.location;\n    return `${protocol}//${host}${\n      pathBasedRedirectUri ? pathname + search : ''\n    }`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ConfigService } from '@sofico-framework/app-config';\nimport { WindowRefService } from '@sofico-framework/utils';\nimport { OAuthStorage } from 'angular-oauth2-oidc';\n\n@Injectable()\nexport class SessionStorageOAuthStore implements OAuthStorage {\n  private readonly prefix = this.configService.config.auth.clientId;\n  private readonly storage = this.windowRefService.nativeWindow.sessionStorage;\n\n  constructor(\n    private configService: ConfigService,\n    private windowRefService: WindowRefService\n  ) {}\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(this.calculateKey(key));\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(this.calculateKey(key));\n  }\n\n  setItem(key: string, data: string): void {\n    this.storage.setItem(this.calculateKey(key), data);\n  }\n\n  private calculateKey(key: string): string {\n    return `${this.prefix}_${key}`;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ConfigService } from '@sofico-framework/app-config';\nimport { WindowRefService } from '@sofico-framework/utils';\nimport {\n  OAuthModule,\n  OAuthResourceServerErrorHandler,\n  OAuthStorage\n} from 'angular-oauth2-oidc';\nimport { AuthenticatedGuard } from './guards/authenticated.guard';\nimport { GuestGuard } from './guards/guest.guard';\nimport { CustomOAuthInterceptor } from './interceptors/custom-oauth.interceptor';\nimport { ResourceServerAutoLogoutErrorHandler } from './interceptors/resource-server-auto-logout-error-handler';\nimport { AuthenticatedResultService } from './services/authenticated-result.service';\n\nimport { AuthenticationService } from './services/authentication.service';\nimport { SessionStorageOAuthStore } from './stores/session-storage-oauth.store';\n\n@NgModule({\n  imports: [CommonModule, OAuthModule.forRoot()],\n  declarations: [],\n  providers: [\n    AuthenticationService,\n    AuthenticatedResultService,\n    AuthenticatedGuard,\n    GuestGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CustomOAuthInterceptor,\n      multi: true\n    },\n    {\n      provide: OAuthStorage,\n      useClass: SessionStorageOAuthStore\n    },\n    {\n      provide: OAuthResourceServerErrorHandler,\n      useClass: ResourceServerAutoLogoutErrorHandler\n    }\n  ]\n})\nexport class AuthenticationModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule: AuthenticationModule,\n    @Optional() windowRefService: WindowRefService,\n    @Optional() httpClient: HttpClientModule,\n    @Optional() configService: ConfigService\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'AuthenticationModule is already loaded. Import in your base AppModule only.'\n      );\n    }\n    if (!windowRefService) {\n      throw new Error(\n        'You need to import the UtilServicesModule in your AppModule!'\n      );\n    }\n    if (!httpClient) {\n      throw new Error(\n        'You need to import the HttpClientModule in your AppModule!'\n      );\n    }\n    if (!configService) {\n      throw new Error(\n        'You need to import the AppConfigModule in your AppModule!'\n      );\n    }\n  }\n}\n","/*\n * Public API Surface of authentication\n */\n\n// guards\nexport * from './lib/guards/authenticated.guard';\nexport * from './lib/guards/guest.guard';\n\n// interceptors\nexport * from './lib/interceptors/custom-oauth.interceptor';\nexport * from './lib/interceptors/resource-server-auto-logout-error-handler';\n\n// services\nexport * from './lib/services/authenticated-result.service';\nexport * from './lib/services/authentication.service';\n\n// stores\nexport * from './lib/stores/session-storage-oauth.store';\n\n// types\nexport * from './lib/types/activation-code.type';\nexport * from './lib/types/activation-code-request.type';\nexport * from './lib/types/activation-code-result.type';\nexport * from './lib/types/authentication-result.type';\nexport * from './lib/types/authentication-config.type';\n\n// modules\nexport * from './lib/authentication.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ReplaySubject","distinctUntilChanged","Injectable","JwksValidationHandler","filter","take","HttpClient","WindowRefService","OAuthService","Router","ConfigService","PlatformLocation","tap","map","mergeMap","catchError","OAuthStorage","OAuthResourceServerErrorHandler","EMPTY","throwError","NgModule","CommonModule","OAuthModule","HTTP_INTERCEPTORS","Optional","SkipSelf","HttpClientModule"],"mappings":"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"}