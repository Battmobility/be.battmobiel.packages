{"version":3,"file":"authentication.service.d.ts","sources":["authentication.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { PlatformLocation } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '@sofico-framework/app-config';\nimport { WindowRefService } from '@sofico-framework/utils';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { AuthenticatedResultService } from './authenticated-result.service';\nexport declare class AuthenticationService {\n    private httpClient;\n    private windowRefService;\n    private oauthService;\n    private router;\n    private configService;\n    private authenticatedResultService;\n    private platformLocation;\n    private readonly location;\n    private readonly baseHref;\n    constructor(httpClient: HttpClient, windowRefService: WindowRefService, oauthService: OAuthService, router: Router, configService: ConfigService, authenticatedResultService: AuthenticatedResultService, platformLocation: PlatformLocation);\n    loginWithSingleSignOn(): void;\n    logout(pathBasedRedirectUri?: boolean): void;\n    logoutWithoutRedirect(): void;\n    setPostLogoutRedirectUri(uri: string): void;\n    private configureLoginWithSSO;\n    private calculateRedirectUri;\n    private calculateIssuer;\n    private listenOnErrorReceivedAndLogout;\n    private getLanguageParam;\n}\n"]}