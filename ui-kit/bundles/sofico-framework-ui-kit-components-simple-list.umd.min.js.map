{"version":3,"sources":["../../../../projects/sofico-framework/ui-kit/components/simple-list/simple-list.component.ts","../../../../projects/sofico-framework/ui-kit/components/simple-list/simple-list.module.ts","../../../../projects/sofico-framework/ui-kit/components/simple-list/classes/simple-list-config.class.ts","../../../../projects/sofico-framework/ui-kit/components/simple-list/services/simple-list-config-builder.service.ts"],"names":["SimpleListComponent","this","entities$","ReplaySubject","config$","sorting$","trackByFn","i","Object","defineProperty","prototype","config","next","initialSorting","entities","Component","args","selector","changeDetection","ChangeDetectionStrategy","OnPush","template","Input","NgModule","declarations","exports","imports","CommonModule","OverviewListItemModule","LoadingModule","TranslateModule","UtilsPipesModule","SimpleListConfig","prop","dynamicRowComponent","setSorting","order","setDynamicRowComponent","component","SimpleListConfigBuilder","createConfig","Injectable","providedIn"],"mappings":"+pCAKA,SAAAA,IAmDEC,KAAAC,UAAY,IAAIC,EAAAA,cAAmB,GACnCF,KAAAG,QAAU,IAAID,EAAAA,cAAmC,GACjDF,KAAAI,SAAiD,IAAIF,EAAAA,cAEnD,GAEFF,KAAAK,UAAY,SAAAC,GAAK,OAAAA,UAvBjBC,OAAAC,eAAaT,EAAAU,UAAA,SAAM,KAAnB,SAAoBC,GACdA,IACFV,KAAKG,QAAQQ,KAAKD,GAClBV,KAAKI,SAASO,KAAKD,EAAOE,kDAO9BL,OAAAC,eAAaT,EAAAU,UAAA,WAAQ,KAArB,SAAsBI,GAChBA,GACFb,KAAKC,UAAUU,KAAKE,6DA9CzBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kBACVC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,SAAU,mvBA0BTC,EAAAA,sBAKAA,EAAAA,wBAUAA,EAAAA,eC9BH,iCAXCC,EAAAA,SAAQP,KAAA,CAAC,CACRQ,aAAc,CAACxB,GACfyB,QAAS,CAACzB,GACV0B,QAAS,CACPC,EAAAA,aACAC,EAAAA,uBACAC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,uCCRJ,SAAAC,IACE/B,KAAAY,eAAwC,CACtCoB,KAAM,MAERhC,KAAAiC,oBAAkD,YAElDF,EAAAtB,UAAAyB,WAAA,SACElB,EACAmB,GAMA,OAJAnC,KAAKY,eAAiB,CACpBoB,KAAMhB,EACNmB,MAAKA,GAEAnC,MAGT+B,EAAAtB,UAAA2B,uBAAA,SACEC,GAGA,OADArC,KAAKiC,oBAAsBI,EACpBrC,wBCfX,SAAAsC,YACEA,EAAA7B,UAAA8B,aAAA,WACE,OAAO,IAAIR,uHALdS,EAAAA,WAAUzB,KAAA,CAAC,CACV0B,WAAY","sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SortingOrderConfig } from '@sofico-framework/utils';\nimport { ReplaySubject } from 'rxjs';\nimport { SimpleListConfig } from './classes/simple-list-config.class';\n\n@Component({\n  selector: 'sof-simple-list',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container *ngIf=\"config$ | async as config\">\n      <ng-container *ngIf=\"entities$ | async as entities\">\n        <ng-container *ngIf=\"entities && entities.length > 0; else noResults\">\n          <sof-overview-list-item\n            *ngFor=\"\n              let entity of entities | sofSort: (sorting$ | async);\n              trackBy: trackByFn\n            \"\n            [entity]=\"entity\"\n            [tc]=\"tc\"\n            [dynamicRowComponent]=\"config?.dynamicRowComponent\"\n          >\n          </sof-overview-list-item>\n        </ng-container>\n      </ng-container>\n      <ng-template #noResults>\n        {{ tc + '.' + 'NO-RESULTS' | translate }}\n      </ng-template>\n    </ng-container>\n  `\n})\nexport class SimpleListComponent<T> {\n  /**\n   * The translation context.\n   */\n  @Input() tc: string;\n\n  /**\n   * The simple list config.\n   */\n  @Input() set config(config: SimpleListConfig<T>) {\n    if (config) {\n      this.config$.next(config);\n      this.sorting$.next(config.initialSorting);\n    }\n  }\n\n  /**\n   * The entities we want to render in this list.\n   */\n  @Input() set entities(entities: T[]) {\n    if (entities) {\n      this.entities$.next(entities);\n    }\n  }\n\n  // input streams\n  entities$ = new ReplaySubject<T[]>(1);\n  config$ = new ReplaySubject<SimpleListConfig<T>>(1);\n  sorting$: ReplaySubject<SortingOrderConfig<T>> = new ReplaySubject<\n    SortingOrderConfig<T>\n  >(1);\n\n  trackByFn = i => i;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LoadingModule } from '@sofico-framework/ui-kit/components/loading';\nimport { OverviewListItemModule } from '@sofico-framework/ui-kit/components/overview-list-item';\nimport { UtilsPipesModule } from '@sofico-framework/utils';\nimport { SimpleListComponent } from './simple-list.component';\n\n@NgModule({\n  declarations: [SimpleListComponent],\n  exports: [SimpleListComponent],\n  imports: [\n    CommonModule,\n    OverviewListItemModule,\n    LoadingModule,\n    TranslateModule,\n    UtilsPipesModule\n  ]\n})\nexport class SimpleListModule {}\n","import { Type } from '@angular/core';\nimport { ListItemComponent } from '@sofico-framework/ui-kit/types';\nimport { SortingOrderConfig } from '@sofico-framework/utils';\n\n/**\n * Configuration/builder to build an simplelist config\n * This object contains configuration regarding initial sorting of an object\n */\nexport class SimpleListConfig<T> {\n  initialSorting: SortingOrderConfig<T> = {\n    prop: null\n  };\n  dynamicRowComponent: Type<ListItemComponent<T>> = null;\n\n  setSorting(\n    selector: (entity: T) => any,\n    order: 'asc' | 'desc'\n  ): SimpleListConfig<T> {\n    this.initialSorting = {\n      prop: selector,\n      order\n    } as SortingOrderConfig<T>;\n    return this;\n  }\n\n  setDynamicRowComponent(\n    component: Type<ListItemComponent<T>>\n  ): SimpleListConfig<T> {\n    this.dynamicRowComponent = component;\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SimpleListConfig } from '../classes/simple-list-config.class';\n\n/**\n * We use this builder to create an simpleListConfig\n * ```typescript\n *\n * builder.createConfig().withFunctionalProp(...)\n *\n * ```\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimpleListConfigBuilder<T> {\n  createConfig(): SimpleListConfig<T> {\n    return new SimpleListConfig<T>();\n  }\n}\n"]}