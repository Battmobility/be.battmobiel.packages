!function(e,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("@angular/core"),require("@angular/common"),require("@sofico-framework/ui-kit/components/svg-icon")):"function"==typeof define&&define.amd?define("@sofico-framework/ui-kit/components/editable-chip",["exports","@angular/core","@angular/common","@sofico-framework/ui-kit/components/svg-icon"],i):i(((e="undefined"!=typeof globalThis?globalThis:e||self)["sofico-framework"]=e["sofico-framework"]||{},e["sofico-framework"]["ui-kit"]=e["sofico-framework"]["ui-kit"]||{},e["sofico-framework"]["ui-kit"].components=e["sofico-framework"]["ui-kit"].components||{},e["sofico-framework"]["ui-kit"].components["editable-chip"]={}),e.ng.core,e.ng.common,e["sofico-framework"]["ui-kit"].components["svg-icon"])}(this,(function(e,i,t,n){"use strict";var o=function(){function e(){this.editChip=new i.EventEmitter,this.removeChip=new i.EventEmitter,this.invalidChip=new i.EventEmitter,this.wrongFormat=!1,this.editMode=!1}return Object.defineProperty(e.prototype,"label",{set:function(e){this.internalLabel=e,this.internalValidationRegex&&(this.wrongFormat=!this.internalLabel.match(this.internalValidationRegex))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"validationRegex",{set:function(e){this.internalValidationRegex=e,this.internalLabel&&(this.wrongFormat=!this.internalLabel.match(this.internalValidationRegex))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"chipEdit",{set:function(e){e&&(this.chipEditElement=e,e.nativeElement.focus())},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){},e.prototype.toggleEdit=function(){this.editMode=!0},e.prototype.onSubmit=function(e){var i,t=null===(i=this.chipEditElement.nativeElement)||void 0===i?void 0:i.innerText,n=!!t.match(this.internalValidationRegex);t&&n?(this.editChip.emit(t),this.editMode=!1,this.invalidChip.emit(!1)):this.invalidChip.emit(!0),e&&(e.preventDefault(),e.stopPropagation())},e.prototype.onCancel=function(){this.chipEditElement.nativeElement.innerText=this.label,this.editMode=!1,this.invalidChip.emit(!1)},e}();o.decorators=[{type:i.Component,args:[{selector:"sof-editable-chip",changeDetection:i.ChangeDetectionStrategy.OnPush,template:'\n    <div (click)="toggleEdit()">\n      <div\n        class="badge badge-pill d-block"\n        [class.badge-pill-valid]="!wrongFormat"\n        [class.badge-edit]="editMode"\n        [class.badge-pill-invalid]="wrongFormat"\n      >\n        <div class="badge-label" *ngIf="!editMode; else edit">\n          <span class="label-text">{{ internalLabel }}</span>\n          <sof-svg-icon\n            class="ml-1"\n            icon="icon-cross"\n            size="8"\n            (click)="removeChip.emit(internalLabel)"\n          ></sof-svg-icon>\n        </div>\n        <ng-template #edit>\n          <div\n            #chipEdit\n            class="chip-edit"\n            contenteditable="true"\n            spellcheck="false"\n            (keydown.enter)="onSubmit($event)"\n            (keydown.escape)="onCancel()"\n            (blur)="onCancel()"\n          >\n            {{ internalLabel }}\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  ',styles:[".badge{min-width:30px}.badge-pill{font-size:.75rem;border:1px solid;padding:.5rem;margin:.25rem}.badge-edit{background-color:#fff}.badge-label{display:flex;flex-wrap:nowrap;align-items:center}.label-text{text-overflow:ellipsis}.chip-edit,.label-text{overflow:hidden}.chip-edit:focus{outline:none;background-color:#fff}sof-svg-icon{cursor:pointer}"]}]}],o.propDecorators={label:[{type:i.Input}],validationRegex:[{type:i.Input}],editChip:[{type:i.Output}],removeChip:[{type:i.Output}],invalidChip:[{type:i.Output}],chipEdit:[{type:i.ViewChild,args:["chipEdit"]}]};var a=function(){};a.decorators=[{type:i.NgModule,args:[{declarations:[o],imports:[t.CommonModule,n.SvgIconModule],exports:[o]}]}],e.EditableChipComponent=o,e.EditableChipModule=a,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=sofico-framework-ui-kit-components-editable-chip.umd.min.js.map