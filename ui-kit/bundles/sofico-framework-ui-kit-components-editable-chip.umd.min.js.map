{"version":3,"sources":["../../../../projects/sofico-framework/ui-kit/components/editable-chip/editable-chip.component.ts","../../../../projects/sofico-framework/ui-kit/components/editable-chip/editable-chip.module.ts"],"names":["EditableChipComponent","this","editChip","EventEmitter","removeChip","invalidChip","wrongFormat","editMode","Object","defineProperty","prototype","label","internalLabel","internalValidationRegex","match","regex","element","chipEditElement","nativeElement","focus","ngOnInit","toggleEdit","onSubmit","event","chipValue","_a","innerText","matchesRegex","emit","preventDefault","stopPropagation","onCancel","Component","args","selector","changeDetection","ChangeDetectionStrategy","OnPush","template","Input","Output","ViewChild","NgModule","declarations","imports","CommonModule","SvgIconModule","exports"],"mappings":"s0BAWA,SAAAA,IA0DYC,KAAAC,SAAW,IAAIC,EAAAA,aACfF,KAAAG,WAAa,IAAID,EAAAA,aACjBF,KAAAI,YAAc,IAAIF,EAAAA,aAI5BF,KAAAK,aAAc,EAUdL,KAAAM,UAAW,SAnCXC,OAAAC,eAAaT,EAAAU,UAAA,QAAK,KAAlB,SAAmBC,GACjBV,KAAKW,cAAgBD,EAEjBV,KAAKY,0BACPZ,KAAKK,aAAeL,KAAKW,cAAcE,MACrCb,KAAKY,2DAIXL,OAAAC,eAAaT,EAAAU,UAAA,kBAAe,KAA5B,SAA6BK,GAC3Bd,KAAKY,wBAA0BE,EAE3Bd,KAAKW,gBACPX,KAAKK,aAAeL,KAAKW,cAAcE,MACrCb,KAAKY,2DAaXL,OAAAC,eAA2BT,EAAAU,UAAA,WAAQ,KAAnC,SAAoCM,GAC9BA,IACFf,KAAKgB,gBAAkBD,EACvBA,EAAQE,cAAcC,0CAO1BnB,EAAAU,UAAAU,SAAA,aAEApB,EAAAU,UAAAW,WAAA,WACEpB,KAAKM,UAAW,GAGlBP,EAAAU,UAAAY,SAAA,SAASC,SACDC,EAA8C,QAArCC,EAAGxB,KAAKgB,gBAAgBC,qBAAa,IAAAO,OAAA,EAAAA,EAAEC,UAChDC,IAAiBH,EAAUV,MAAMb,KAAKY,yBAEtCW,GAAaG,GACjB1B,KAAKC,SAAS0B,KAAKJ,GACnBvB,KAAKM,UAAW,EAChBN,KAAKI,YAAYuB,MAAK,IAEtB3B,KAAKI,YAAYuB,MAAK,GAGpBL,IACFA,EAAMM,iBACNN,EAAMO,oBAIV9B,EAAAU,UAAAqB,SAAA,WACE9B,KAAKgB,gBAAgBC,cAAcQ,UAAYzB,KAAKU,MACpDV,KAAKM,UAAW,EAChBN,KAAKI,YAAYuB,MAAK,6BAvGzBI,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oBACVC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,SAAU,y1CAoCTC,EAAAA,+BASAA,EAAAA,wBAUAC,EAAAA,2BACAA,EAAAA,4BACAA,EAAAA,yBAMAC,EAAAA,UAASR,KAAA,CAAC,qBCnEb,iCALCS,EAAAA,SAAQT,KAAA,CAAC,CACRU,aAAc,CAAC3C,GACf4C,QAAS,CAACC,EAAAA,aAAcC,EAAAA,eACxBC,QAAS,CAAC/C","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\n\n@Component({\n  selector: 'sof-editable-chip',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div (click)=\"toggleEdit()\">\n      <div\n        class=\"badge badge-pill d-block\"\n        [class.badge-pill-valid]=\"!wrongFormat\"\n        [class.badge-edit]=\"editMode\"\n        [class.badge-pill-invalid]=\"wrongFormat\"\n      >\n        <div class=\"badge-label\" *ngIf=\"!editMode; else edit\">\n          <span class=\"label-text\">{{ internalLabel }}</span>\n          <sof-svg-icon\n            class=\"ml-1\"\n            icon=\"icon-cross\"\n            size=\"8\"\n            (click)=\"removeChip.emit(internalLabel)\"\n          ></sof-svg-icon>\n        </div>\n        <ng-template #edit>\n          <div\n            #chipEdit\n            class=\"chip-edit\"\n            contenteditable=\"true\"\n            spellcheck=\"false\"\n            (keydown.enter)=\"onSubmit($event)\"\n            (keydown.escape)=\"onCancel()\"\n            (blur)=\"onCancel()\"\n          >\n            {{ internalLabel }}\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./editable-chip.component.scss']\n})\nexport class EditableChipComponent implements OnInit {\n  @Input() set label(label: string) {\n    this.internalLabel = label;\n\n    if (this.internalValidationRegex) {\n      this.wrongFormat = !this.internalLabel.match(\n        this.internalValidationRegex\n      );\n    }\n  }\n  @Input() set validationRegex(regex: RegExp) {\n    this.internalValidationRegex = regex;\n\n    if (this.internalLabel) {\n      this.wrongFormat = !this.internalLabel.match(\n        this.internalValidationRegex\n      );\n    }\n  }\n\n  @Output() editChip = new EventEmitter<string>();\n  @Output() removeChip = new EventEmitter<string>();\n  @Output() invalidChip = new EventEmitter<boolean>();\n\n  internalLabel: string;\n  internalValidationRegex: RegExp;\n  wrongFormat = false;\n\n  @ViewChild('chipEdit') set chipEdit(element: ElementRef<HTMLDivElement>) {\n    if (element) {\n      this.chipEditElement = element;\n      element.nativeElement.focus();\n    }\n  }\n\n  chipEditElement: ElementRef;\n  editMode = false;\n\n  ngOnInit(): void {}\n\n  toggleEdit(): void {\n    this.editMode = true;\n  }\n\n  onSubmit(event: KeyboardEvent): void {\n    const chipValue = this.chipEditElement.nativeElement?.innerText;\n    const matchesRegex = !!chipValue.match(this.internalValidationRegex);\n\n    if (!!chipValue && matchesRegex) {\n      this.editChip.emit(chipValue);\n      this.editMode = false;\n      this.invalidChip.emit(false);\n    } else {\n      this.invalidChip.emit(true);\n    }\n\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  onCancel(): void {\n    this.chipEditElement.nativeElement.innerText = this.label;\n    this.editMode = false;\n    this.invalidChip.emit(false);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SvgIconModule } from '@sofico-framework/ui-kit/components/svg-icon';\nimport { EditableChipComponent } from './editable-chip.component';\n\n@NgModule({\n  declarations: [EditableChipComponent],\n  imports: [CommonModule, SvgIconModule],\n  exports: [EditableChipComponent]\n})\nexport class EditableChipModule {}\n"]}