{"version":3,"sources":["../../../../projects/sofico-framework/ui-kit/components/dynamic-form/dynamic-form.component.ts","../../../../projects/sofico-framework/ui-kit/components/dynamic-form/dynamic-form.module.ts"],"names":["DynamicFormComponent","componentFactoryResolver","viewContainerRef","this","Object","defineProperty","prototype","tc","localTc","componentRef","instance","data","localData","ngOnInit","factory","resolveComponentFactory","dynamicFormComponent","createComponent","Component","args","selector","template","ComponentFactoryResolver","ViewContainerRef","Input","NgModule","declarations","exports","imports","CommonModule"],"mappings":"oqBAwBE,SAAAA,EACUC,EACAC,GADAC,KAAAF,yBAAAA,EACAE,KAAAD,iBAAAA,SAMVE,OAAAC,eAAaL,EAAAM,UAAA,KAAE,KAAf,SAAgBC,GACdJ,KAAKK,QAAUD,EAEXJ,KAAKM,eACNN,KAAKM,aAAaC,SAAiBH,GAAKJ,KAAKK,0CAOlDJ,OAAAC,eAAaL,EAAAM,UAAA,OAAI,KAAjB,SAAkBK,GAChBR,KAAKS,UAAYD,EAEbR,KAAKM,eACNN,KAAKM,aAAaC,SAAiBC,KAAOR,KAAKS,4CAIpDZ,EAAAM,UAAAO,SAAA,WACE,IAAMC,EAAUX,KAAKF,yBAAyBc,wBAC5CZ,KAAKa,sBAEPb,KAAKM,aAAeN,KAAKD,iBAAiBe,gBAAgBH,GACzDX,KAAKM,aAAaC,SAAiBH,GAAKJ,KAAKK,QAC7CL,KAAKM,aAAaC,SAAiBC,KAAOR,KAAKS,oCA9CnDM,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAU,gDAXVC,EAAAA,gCAKAC,EAAAA,kEAYCC,EAAAA,kBAaAA,EAAAA,oBAWAA,EAAAA,eClCH,iCALCC,EAAAA,SAAQN,KAAA,CAAC,CACRO,aAAc,CAAC1B,GACf2B,QAAS,CAAC3B,GACV4B,QAAS,CAACC,EAAAA","sourcesContent":["import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Input,\n  OnInit,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { DynamicFormComponentType } from './types/dynamic-form-component.type';\n\n@Component({\n  selector: 'sof-dynamic-form',\n  template: ``\n})\nexport class DynamicFormComponent<T> implements OnInit {\n  /**\n   * The component that must be dynamically injected into the template\n   */\n  @Input() dynamicFormComponent: Type<DynamicFormComponentType<T>>;\n  private componentRef: ComponentRef<DynamicFormComponentType<T>>;\n  private localTc: string;\n  private localData: T;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  /**\n   * The translation context.\n   */\n  @Input() set tc(tc: string) {\n    this.localTc = tc;\n\n    if (this.componentRef) {\n      (this.componentRef.instance as any).tc = this.localTc;\n    }\n  }\n\n  /**\n   * The data we want to pass to the dynamic attribute.\n   */\n  @Input() set data(data: T) {\n    this.localData = data;\n\n    if (this.componentRef) {\n      (this.componentRef.instance as any).data = this.localData;\n    }\n  }\n\n  ngOnInit(): void {\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      this.dynamicFormComponent\n    );\n    this.componentRef = this.viewContainerRef.createComponent(factory);\n    (this.componentRef.instance as any).tc = this.localTc;\n    (this.componentRef.instance as any).data = this.localData;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicFormComponent } from './dynamic-form.component';\n\n@NgModule({\n  declarations: [DynamicFormComponent],\n  exports: [DynamicFormComponent],\n  imports: [CommonModule]\n})\nexport class DynamicFormModule {}\n"]}