{"version":3,"file":"sofico-framework-ui-kit-components-in-view.umd.js","sources":["../../../../projects/sofico-framework/ui-kit/components/in-view/in-view.component.ts","../../../../projects/sofico-framework/ui-kit/components/in-view/in-view.module.ts","../../../../projects/sofico-framework/ui-kit/components/in-view/sofico-framework-ui-kit-components-in-view.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\n\n@Component({\n  selector: 'sof-in-view',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-content></ng-content>\n    <div class=\"in-slice\">\n      <div #targetRef></div>\n    </div>\n  `,\n  styleUrls: ['./in-view.component.scss']\n})\nexport class InViewComponent implements OnInit, OnDestroy {\n  @Input() scrollableRef: any = null;\n  @Input() preloadHeight = 0;\n\n  @Output() inView = new EventEmitter<boolean>();\n\n  @ViewChild('targetRef', { read: ElementRef, static: true })\n  targetRef: ElementRef;\n\n  private intersectionObserver: IntersectionObserver;\n\n  ngOnInit(): void {\n    // We should only emit the most recent event\n    const fn = (entries: IntersectionObserverEntry[]) =>\n      this.inView.emit(\n        entries.sort((a, b) => (a.time > b.time ? -1 : 1))?.[0]?.isIntersecting\n      );\n\n    this.intersectionObserver = new IntersectionObserver(fn, {\n      root: this.scrollableRef,\n      rootMargin: `0px 0px ${this.preloadHeight}px 0px`\n    });\n\n    this.intersectionObserver.observe(this.targetRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.intersectionObserver.disconnect();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { InViewComponent } from './in-view.component';\n\n@NgModule({\n  declarations: [InViewComponent],\n  exports: [InViewComponent],\n  imports: [CommonModule]\n})\nexport class InViewModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","Component","ChangeDetectionStrategy","Input","Output","ViewChild","ElementRef","NgModule","CommonModule"],"mappings":";;;;;;;MAYA;UAYW,kBAAa,GAAQ,IAAI,CAAC;UAC1B,kBAAa,GAAG,CAAC,CAAC;UAEjB,WAAM,GAAG,IAAIA,iBAAY,EAAW,CAAC;OAyBhD;MAlBC,kCAAQ,GAAR;UAAA,iBAaC;;UAXC,IAAM,EAAE,GAAG,UAAC,OAAoC;;cAC9C,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,aACd,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAC,CAAC,0CAAG,CAAC,2CAAG,cAAc,CACxE,CAAA;WAAA,CAAC;UAEJ,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,EAAE,EAAE;cACvD,IAAI,EAAE,IAAI,CAAC,aAAa;cACxB,UAAU,EAAE,aAAW,IAAI,CAAC,aAAa,WAAQ;WAClD,CAAC,CAAC;UAEH,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;OACjE;MAED,qCAAW,GAAX;UACE,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC;OACxC;;;;cAvCFC,cAAS,SAAC;kBACT,QAAQ,EAAE,aAAa;kBACvB,eAAe,EAAEC,4BAAuB,CAAC,MAAM;kBAC/C,QAAQ,EAAE,6GAKT;;eAEF;;;8BAEEC,UAAK;8BACLA,UAAK;uBAELC,WAAM;0BAENC,cAAS,SAAC,WAAW,EAAE,EAAE,IAAI,EAAEC,eAAU,EAAE,MAAM,EAAE,IAAI,EAAE;;;;MCpB5D;;;;;cALCC,aAAQ,SAAC;kBACR,YAAY,EAAE,CAAC,eAAe,CAAC;kBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;kBAC1B,OAAO,EAAE,CAACC,mBAAY,CAAC;eACxB;;;ECRD;;;;;;;;;;;;;"}