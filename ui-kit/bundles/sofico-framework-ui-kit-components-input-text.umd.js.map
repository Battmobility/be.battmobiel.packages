{"version":3,"file":"sofico-framework-ui-kit-components-input-text.umd.js","sources":["../../../../projects/sofico-framework/ui-kit/components/input-text/input-text.component.ts","../../../../projects/sofico-framework/ui-kit/components/input-text/input-text.module.ts","../../../../projects/sofico-framework/ui-kit/components/input-text/sofico-framework-ui-kit-components-input-text.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { FormComponent } from '@sofico-framework/ui-kit/components/form';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\n\n@Component({\n  selector: 'sof-input-text',\n  template: `\n    <input\n      #htmlInputElement\n      type=\"text\"\n      [attr.id]=\"labelForId\"\n      [value]=\"internalValue\"\n      class=\"form-control\"\n      [class.is-invalid]=\"\n        invalid ||\n        (ngControl?.invalid && (ngControl?.touched || form?.submitted))\n      \"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"isDisabled\"\n      (input)=\"onChange($event.target?.value)\"\n      (blur)=\"onTouch()\"\n    />\n  `,\n  providers: [{ provide: SOF_FOCUS_COMPONENT, useExisting: InputTextComponent }]\n})\nexport class InputTextComponent\n  implements ControlValueAccessor, OnDestroy, OnSofFocus {\n  /**\n   * The id of the input to connect to a label tag.\n   */\n  @Input() labelForId: string;\n\n  /**\n   * The placeholder of the input.\n   */\n  @Input() placeholder = '';\n\n  /**\n   *  Determines if the input is disabled.\n   */\n  @Input() isDisabled: boolean;\n  /**\n   * Determines whether the input is in a valid state.\n   */\n  @Input() invalid: boolean;\n\n  /**\n   * Determines the value of the control.\n   */\n  @Input() set value(value: string) {\n    this.writeValue(value);\n  }\n\n  /**\n   * EventEmitter that will emit the value when changed.\n   */\n  @Output() changeValue = new EventEmitter<string>();\n\n  /**\n   * EventEmitter that will emit when control is touched.\n   */\n  @Output() touch = new EventEmitter<any>();\n\n  @ViewChild('htmlInputElement') htmlInputElement: ElementRef;\n\n  internalValue: string = null;\n  propagateChange: any;\n  propagateTouch: any;\n\n  constructor(\n    @Optional() public form: FormComponent,\n    @Optional() @Host() public ngControl: NgControl\n  ) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  sofFocus(): void {\n    this.htmlInputElement.nativeElement.focus();\n  }\n\n  ngOnDestroy(): void {\n    if (this.ngControl?.valueAccessor) {\n      // Every time a control is re-created the previous writeValue reference(s) is not cleaned up.\n      // So, over time, a lot of these references can be built up. This memory leak is a bug in Angular's implementation of ControlValueAccessor.\n      // We hide that problem by assigning an empty function to writeValue every time we destroy the control.\n      // An detailed explanation of the problem can be found here: https://github.com/angular/angular/pull/29335\n      // The bug issue for it: https://github.com/angular/angular/issues/20007\n      this.ngControl.valueAccessor.writeValue = () => {};\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.propagateTouch = fn;\n  }\n\n  writeValue(value: string): void {\n    this.internalValue = value ?? null;\n  }\n\n  onChange(value: string): void {\n    if (!this.isDisabled) {\n      const newInternalValue = value ?? null;\n\n      // emit value\n      this.changeValue.emit(newInternalValue);\n\n      // propagate the change\n      if (this.propagateChange) {\n        this.internalValue = newInternalValue;\n        this.propagateChange(newInternalValue);\n      }\n    }\n  }\n\n  onTouch(): void {\n    this.touch.emit();\n\n    if (!this.isDisabled && this.propagateTouch) {\n      this.propagateTouch();\n    }\n  }\n\n  setDisabledState(value: boolean): void {\n    this.isDisabled = value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { InputTextComponent } from './input-text.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [InputTextComponent],\n  exports: [InputTextComponent]\n})\nexport class InputTextModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","Component","SOF_FOCUS_COMPONENT","FormComponent","Optional","NgControl","Host","Input","Output","ViewChild","NgModule","CommonModule"],"mappings":";;;;;;;MAmFE,4BACqB,IAAmB,EACX,SAAoB;UAD5B,SAAI,GAAJ,IAAI,CAAe;UACX,cAAS,GAAT,SAAS,CAAW;;;;UApCxC,gBAAW,GAAG,EAAE,CAAC;;;;UAqBhB,gBAAW,GAAG,IAAIA,iBAAY,EAAU,CAAC;;;;UAKzC,UAAK,GAAG,IAAIA,iBAAY,EAAO,CAAC;UAI1C,kBAAa,GAAW,IAAI,CAAC;UAQ3B,IAAI,SAAS,EAAE;cACb,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;WAChC;OACF;MA3BD,sBAAa,qCAAK;;;;eAAlB,UAAmB,KAAa;cAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;WACxB;;;SAAA;MA2BD,qCAAQ,GAAR;UACE,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;OAC7C;MAED,wCAAW,GAAX;;UACE,UAAI,IAAI,CAAC,SAAS,0CAAE,aAAa,EAAE;;;;;;cAMjC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,GAAG,eAAQ,CAAC;WACpD;OACF;MAED,6CAAgB,GAAhB,UAAiB,EAAO;UACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;OAC3B;MAED,8CAAiB,GAAjB,UAAkB,EAAO;UACvB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;OAC1B;MAED,uCAAU,GAAV,UAAW,KAAa;UACtB,IAAI,CAAC,aAAa,GAAG,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,IAAI,CAAC;OACpC;MAED,qCAAQ,GAAR,UAAS,KAAa;UACpB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;cACpB,IAAM,gBAAgB,GAAG,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,IAAI,CAAC;;cAGvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;cAGxC,IAAI,IAAI,CAAC,eAAe,EAAE;kBACxB,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC;kBACtC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;eACxC;WACF;OACF;MAED,oCAAO,GAAP;UACE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;UAElB,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,cAAc,EAAE;cAC3C,IAAI,CAAC,cAAc,EAAE,CAAC;WACvB;OACF;MAED,6CAAgB,GAAhB,UAAiB,KAAc;UAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;OACzB;;;;cA9HFC,cAAS,SAAC;kBACT,QAAQ,EAAE,gBAAgB;kBAC1B,QAAQ,EAAE,+bAgBT;kBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAEC,yBAAmB,EAAE,WAAW,EAAE,kBAAkB,EAAE,CAAC;eAC/E;;;cA1BQC,kBAAa,uBAwEjBC,aAAQ;cAzEkBC,eAAS,uBA0EnCD,aAAQ,YAAIE,SAAI;;;2BAzClBC,UAAK;4BAKLA,UAAK;2BAKLA,UAAK;wBAILA,UAAK;sBAKLA,UAAK;4BAOLC,WAAM;sBAKNA,WAAM;iCAENC,cAAS,SAAC,kBAAkB;;;;MCpE/B;;;;;cALCC,aAAQ,SAAC;kBACR,OAAO,EAAE,CAACC,mBAAY,CAAC;kBACvB,YAAY,EAAE,CAAC,kBAAkB,CAAC;kBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;eAC9B;;;ECRD;;;;;;;;;;;;;"}