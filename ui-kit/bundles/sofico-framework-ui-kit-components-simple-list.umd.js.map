{"version":3,"file":"sofico-framework-ui-kit-components-simple-list.umd.js","sources":["../../../../projects/sofico-framework/ui-kit/components/simple-list/simple-list.component.ts","../../../../projects/sofico-framework/ui-kit/components/simple-list/simple-list.module.ts","../../../../projects/sofico-framework/ui-kit/components/simple-list/classes/simple-list-config.class.ts","../../../../projects/sofico-framework/ui-kit/components/simple-list/services/simple-list-config-builder.service.ts","../../../../projects/sofico-framework/ui-kit/components/simple-list/sofico-framework-ui-kit-components-simple-list.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SortingOrderConfig } from '@sofico-framework/utils';\nimport { ReplaySubject } from 'rxjs';\nimport { SimpleListConfig } from './classes/simple-list-config.class';\n\n@Component({\n  selector: 'sof-simple-list',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container *ngIf=\"config$ | async as config\">\n      <ng-container *ngIf=\"entities$ | async as entities\">\n        <ng-container *ngIf=\"entities && entities.length > 0; else noResults\">\n          <sof-overview-list-item\n            *ngFor=\"\n              let entity of entities | sofSort: (sorting$ | async);\n              trackBy: trackByFn\n            \"\n            [entity]=\"entity\"\n            [tc]=\"tc\"\n            [dynamicRowComponent]=\"config?.dynamicRowComponent\"\n          >\n          </sof-overview-list-item>\n        </ng-container>\n      </ng-container>\n      <ng-template #noResults>\n        {{ tc + '.' + 'NO-RESULTS' | translate }}\n      </ng-template>\n    </ng-container>\n  `\n})\nexport class SimpleListComponent<T> {\n  /**\n   * The translation context.\n   */\n  @Input() tc: string;\n\n  /**\n   * The simple list config.\n   */\n  @Input() set config(config: SimpleListConfig<T>) {\n    if (config) {\n      this.config$.next(config);\n      this.sorting$.next(config.initialSorting);\n    }\n  }\n\n  /**\n   * The entities we want to render in this list.\n   */\n  @Input() set entities(entities: T[]) {\n    if (entities) {\n      this.entities$.next(entities);\n    }\n  }\n\n  // input streams\n  entities$ = new ReplaySubject<T[]>(1);\n  config$ = new ReplaySubject<SimpleListConfig<T>>(1);\n  sorting$: ReplaySubject<SortingOrderConfig<T>> = new ReplaySubject<\n    SortingOrderConfig<T>\n  >(1);\n\n  trackByFn = i => i;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LoadingModule } from '@sofico-framework/ui-kit/components/loading';\nimport { OverviewListItemModule } from '@sofico-framework/ui-kit/components/overview-list-item';\nimport { UtilsPipesModule } from '@sofico-framework/utils';\nimport { SimpleListComponent } from './simple-list.component';\n\n@NgModule({\n  declarations: [SimpleListComponent],\n  exports: [SimpleListComponent],\n  imports: [\n    CommonModule,\n    OverviewListItemModule,\n    LoadingModule,\n    TranslateModule,\n    UtilsPipesModule\n  ]\n})\nexport class SimpleListModule {}\n","import { Type } from '@angular/core';\nimport { ListItemComponent } from '@sofico-framework/ui-kit/types';\nimport { SortingOrderConfig } from '@sofico-framework/utils';\n\n/**\n * Configuration/builder to build an simplelist config\n * This object contains configuration regarding initial sorting of an object\n */\nexport class SimpleListConfig<T> {\n  initialSorting: SortingOrderConfig<T> = {\n    prop: null\n  };\n  dynamicRowComponent: Type<ListItemComponent<T>> = null;\n\n  setSorting(\n    selector: (entity: T) => any,\n    order: 'asc' | 'desc'\n  ): SimpleListConfig<T> {\n    this.initialSorting = {\n      prop: selector,\n      order\n    } as SortingOrderConfig<T>;\n    return this;\n  }\n\n  setDynamicRowComponent(\n    component: Type<ListItemComponent<T>>\n  ): SimpleListConfig<T> {\n    this.dynamicRowComponent = component;\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SimpleListConfig } from '../classes/simple-list-config.class';\n\n/**\n * We use this builder to create an simpleListConfig\n * ```typescript\n *\n * builder.createConfig().withFunctionalProp(...)\n *\n * ```\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimpleListConfigBuilder<T> {\n  createConfig(): SimpleListConfig<T> {\n    return new SimpleListConfig<T>();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ReplaySubject","Component","ChangeDetectionStrategy","Input","NgModule","CommonModule","OverviewListItemModule","LoadingModule","TranslateModule","UtilsPipesModule","Injectable"],"mappings":";;;;;;;MAKA;;UAmDE,cAAS,GAAG,IAAIA,kBAAa,CAAM,CAAC,CAAC,CAAC;UACtC,YAAO,GAAG,IAAIA,kBAAa,CAAsB,CAAC,CAAC,CAAC;UACpD,aAAQ,GAAyC,IAAIA,kBAAa,CAEhE,CAAC,CAAC,CAAC;UAEL,cAAS,GAAG,UAAA,CAAC,IAAI,OAAA,CAAC,GAAA,CAAC;OACpB;MAxBC,sBAAa,uCAAM;;;;eAAnB,UAAoB,MAA2B;cAC7C,IAAI,MAAM,EAAE;kBACV,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;kBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;eAC3C;WACF;;;SAAA;MAKD,sBAAa,yCAAQ;;;;eAArB,UAAsB,QAAa;cACjC,IAAI,QAAQ,EAAE;kBACZ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;eAC/B;WACF;;;SAAA;;;;cAhDFC,YAAS,SAAC;kBACT,QAAQ,EAAE,iBAAiB;kBAC3B,eAAe,EAAEC,0BAAuB,CAAC,MAAM;kBAC/C,QAAQ,EAAE,4tBAoBT;eACF;;;mBAKEC,QAAK;uBAKLA,QAAK;yBAULA,QAAK;;;;MC9BR;;;;;cAXCC,WAAQ,SAAC;kBACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;kBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;kBAC9B,OAAO,EAAE;sBACPC,mBAAY;sBACZC,uCAAsB;sBACtBC,qBAAa;sBACbC,oBAAe;sBACfC,sBAAgB;mBACjB;eACF;;;ECdD;;;;;MAIA;UACE,mBAAc,GAA0B;cACtC,IAAI,EAAE,IAAI;WACX,CAAC;UACF,wBAAmB,GAA+B,IAAI,CAAC;OAmBxD;MAjBC,qCAAU,GAAV,UACE,QAA4B,EAC5B,KAAqB;UAErB,IAAI,CAAC,cAAc,GAAG;cACpB,IAAI,EAAE,QAAQ;cACd,KAAK,OAAA;WACmB,CAAC;UAC3B,OAAO,IAAI,CAAC;OACb;MAED,iDAAsB,GAAtB,UACE,SAAqC;UAErC,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;UACrC,OAAO,IAAI,CAAC;OACb;6BACF;GAAA;;EC5BD;;;;;;;;;MAWA;;MACE,8CAAY,GAAZ;UACE,OAAO,IAAI,gBAAgB,EAAK,CAAC;OAClC;;;;;cANFC,aAAU,SAAC;kBACV,UAAU,EAAE,MAAM;eACnB;;;ECbD;;;;;;;;;;;;;;;"}