{"version":3,"file":"sofico-framework-ui-kit-components-editable-chip.umd.js","sources":["../../../../projects/sofico-framework/ui-kit/components/editable-chip/editable-chip.component.ts","../../../../projects/sofico-framework/ui-kit/components/editable-chip/editable-chip.module.ts","../../../../projects/sofico-framework/ui-kit/components/editable-chip/sofico-framework-ui-kit-components-editable-chip.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\n\n@Component({\n  selector: 'sof-editable-chip',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div (click)=\"toggleEdit()\">\n      <div\n        class=\"badge badge-pill d-block\"\n        [class.badge-pill-valid]=\"!wrongFormat\"\n        [class.badge-edit]=\"editMode\"\n        [class.badge-pill-invalid]=\"wrongFormat\"\n      >\n        <div class=\"badge-label\" *ngIf=\"!editMode; else edit\">\n          <span class=\"label-text\">{{ internalLabel }}</span>\n          <sof-svg-icon\n            class=\"ml-1\"\n            icon=\"icon-cross\"\n            size=\"8\"\n            (click)=\"removeChip.emit(internalLabel)\"\n          ></sof-svg-icon>\n        </div>\n        <ng-template #edit>\n          <div\n            #chipEdit\n            class=\"chip-edit\"\n            contenteditable=\"true\"\n            spellcheck=\"false\"\n            (keydown.enter)=\"onSubmit($event)\"\n            (keydown.escape)=\"onCancel()\"\n            (blur)=\"onCancel()\"\n          >\n            {{ internalLabel }}\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./editable-chip.component.scss']\n})\nexport class EditableChipComponent implements OnInit {\n  @Input() set label(label: string) {\n    this.internalLabel = label;\n\n    if (this.internalValidationRegex) {\n      this.wrongFormat = !this.internalLabel.match(\n        this.internalValidationRegex\n      );\n    }\n  }\n  @Input() set validationRegex(regex: RegExp) {\n    this.internalValidationRegex = regex;\n\n    if (this.internalLabel) {\n      this.wrongFormat = !this.internalLabel.match(\n        this.internalValidationRegex\n      );\n    }\n  }\n\n  @Output() editChip = new EventEmitter<string>();\n  @Output() removeChip = new EventEmitter<string>();\n  @Output() invalidChip = new EventEmitter<boolean>();\n\n  internalLabel: string;\n  internalValidationRegex: RegExp;\n  wrongFormat = false;\n\n  @ViewChild('chipEdit') set chipEdit(element: ElementRef<HTMLDivElement>) {\n    if (element) {\n      this.chipEditElement = element;\n      element.nativeElement.focus();\n    }\n  }\n\n  chipEditElement: ElementRef;\n  editMode = false;\n\n  ngOnInit(): void {}\n\n  toggleEdit(): void {\n    this.editMode = true;\n  }\n\n  onSubmit(event: KeyboardEvent): void {\n    const chipValue = this.chipEditElement.nativeElement?.innerText;\n    const matchesRegex = !!chipValue.match(this.internalValidationRegex);\n\n    if (!!chipValue && matchesRegex) {\n      this.editChip.emit(chipValue);\n      this.editMode = false;\n      this.invalidChip.emit(false);\n    } else {\n      this.invalidChip.emit(true);\n    }\n\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  onCancel(): void {\n    this.chipEditElement.nativeElement.innerText = this.label;\n    this.editMode = false;\n    this.invalidChip.emit(false);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SvgIconModule } from '@sofico-framework/ui-kit/components/svg-icon';\nimport { EditableChipComponent } from './editable-chip.component';\n\n@NgModule({\n  declarations: [EditableChipComponent],\n  imports: [CommonModule, SvgIconModule],\n  exports: [EditableChipComponent]\n})\nexport class EditableChipModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","Component","ChangeDetectionStrategy","Input","Output","ViewChild","NgModule","CommonModule","SvgIconModule"],"mappings":";;;;;;;MAWA;UA0DY,aAAQ,GAAG,IAAIA,iBAAY,EAAU,CAAC;UACtC,eAAU,GAAG,IAAIA,iBAAY,EAAU,CAAC;UACxC,gBAAW,GAAG,IAAIA,iBAAY,EAAW,CAAC;UAIpD,gBAAW,GAAG,KAAK,CAAC;UAUpB,aAAQ,GAAG,KAAK,CAAC;OA+BlB;MAlEC,sBAAa,wCAAK;eAAlB,UAAmB,KAAa;cAC9B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;cAE3B,IAAI,IAAI,CAAC,uBAAuB,EAAE;kBAChC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAC1C,IAAI,CAAC,uBAAuB,CAC7B,CAAC;eACH;WACF;;;SAAA;MACD,sBAAa,kDAAe;eAA5B,UAA6B,KAAa;cACxC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;cAErC,IAAI,IAAI,CAAC,aAAa,EAAE;kBACtB,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAC1C,IAAI,CAAC,uBAAuB,CAC7B,CAAC;eACH;WACF;;;SAAA;MAUD,sBAA2B,2CAAQ;eAAnC,UAAoC,OAAmC;cACrE,IAAI,OAAO,EAAE;kBACX,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;kBAC/B,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;eAC/B;WACF;;;SAAA;MAKD,wCAAQ,GAAR,eAAmB;MAEnB,0CAAU,GAAV;UACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;OACtB;MAED,wCAAQ,GAAR,UAAS,KAAoB;;UAC3B,IAAM,SAAS,SAAG,IAAI,CAAC,eAAe,CAAC,aAAa,0CAAE,SAAS,CAAC;UAChE,IAAM,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;UAErE,IAAI,CAAC,CAAC,SAAS,IAAI,YAAY,EAAE;cAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;cACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;WAC9B;eAAM;cACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;WAC7B;UAED,IAAI,KAAK,EAAE;cACT,KAAK,CAAC,cAAc,EAAE,CAAC;cACvB,KAAK,CAAC,eAAe,EAAE,CAAC;WACzB;OACF;MAED,wCAAQ,GAAR;UACE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;UAC1D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;UACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OAC9B;;;;cAxGFC,cAAS,SAAC;kBACT,QAAQ,EAAE,mBAAmB;kBAC7B,eAAe,EAAEC,4BAAuB,CAAC,MAAM;kBAC/C,QAAQ,EAAE,m/BAgCT;;eAEF;;;sBAEEC,UAAK;gCASLA,UAAK;yBAULC,WAAM;2BACNA,WAAM;4BACNA,WAAM;yBAMNC,cAAS,SAAC,UAAU;;;;MCnEvB;;;;;cALCC,aAAQ,SAAC;kBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;kBACrC,OAAO,EAAE,CAACC,mBAAY,EAAEC,qBAAa,CAAC;kBACtC,OAAO,EAAE,CAAC,qBAAqB,CAAC;eACjC;;;ECTD;;;;;;;;;;;;;"}