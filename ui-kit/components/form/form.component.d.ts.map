{"version":3,"file":"form.component.d.ts","sources":["form.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nexport declare class FormComponent implements OnInit, OnDestroy {\n    /**\n     * The translation context.\n     */\n    tc: string;\n    /**\n     * Contains the form that the wrapped form controls use.\n     */\n    formGroup: FormGroup;\n    /**\n     * EventEmitter that will emit when the form is submitted.\n     */\n    formSubmit: EventEmitter<any>;\n    /**\n     * EventEmitter that will emit when the form is dirty. This means that\n     * the user has changed the form's value.\n     */\n    formDirty: EventEmitter<boolean>;\n    submitted: boolean;\n    actualErrorMap: {\n        [key: string]: string;\n    };\n    private formDirty$;\n    /**\n     * Contains a map of error translation keys that match the validators identifier.\n     * The validators that are supported by default are:\n     * - required\n     * - email\n     * - maxLength\n     * - inRange\n     * - phoneNumber\n     * - isInteger\n     */\n    set errorMap(map: {\n        [key: string]: string;\n    });\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    onSubmit(): void;\n}\n"]}