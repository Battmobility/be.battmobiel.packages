{"version":3,"file":"input-radio.component.d.ts","sources":["input-radio.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { FormComponent } from '@sofico-framework/ui-kit/components/form';\nimport { OnSofFocus } from '@sofico-framework/ui-kit/directives/focus';\nexport declare class InputRadioComponent implements ControlValueAccessor, OnSofFocus {\n    form: FormComponent;\n    ngControl: NgControl;\n    /**\n     * Determines the value of the control.\n     */\n    value: any;\n    /**\n     * Determines the name of the control.\n     */\n    name: string;\n    /**\n     * Determines whether the control is checked or not.\n     */\n    checked: boolean;\n    /**\n     *  Determines if the input is disabled.\n     */\n    isDisabled: boolean;\n    /**\n     * Determines whether the input is in a valid state.\n     */\n    invalid: boolean;\n    /**\n     * EventEmitter that will emit the value when changed.\n     */\n    changeValue: EventEmitter<any>;\n    inputElement: ElementRef;\n    labelForId: string;\n    changeFn: any;\n    touchFn: any;\n    constructor(form: FormComponent, ngControl: NgControl);\n    sofFocus(): void;\n    onChange(e: any): void;\n    writeValue(obj: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState(isDisabled: boolean): void;\n}\n"]}