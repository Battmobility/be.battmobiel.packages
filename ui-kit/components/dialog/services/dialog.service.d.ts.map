{"version":3,"file":"dialog.service.d.ts","sources":["dialog.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Overlay } from '@angular/cdk/overlay';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DialogConfigService } from './dialog-config.service';\nexport declare class DialogService {\n    private injector;\n    private overlay;\n    private dialogConfigService;\n    constructor(injector: Injector, overlay: Overlay, dialogConfigService: DialogConfigService);\n    handleInteractiveFlow<T>(initial$: Observable<T>, postApproval$: Observable<T>, tc: string): Observable<T>;\n    openInteractiveWarning(tc: string, error: HttpErrorResponse): {\n        confirm$: Observable<any>;\n        decline$: Observable<any>;\n        destroy: () => any;\n    };\n    openConfirmModal(tc: string, headerLabel: string, bodyLabel: string, cancelLabel: string, confirmLabel: string, primaryAction?: 'confirm' | 'cancel', labelParams?: {\n        [key: string]: string;\n    }, disableActing?: boolean): {\n        confirm$: Observable<any>;\n        decline$: Observable<any>;\n        destroy: () => any;\n    };\n    openAcknowledgeModal(tc: string, headerLabel: string, bodyLabel: string, acknowledgeLabel: string, disableHeaderLabelTranslation?: boolean, disableBodyLabelTranslation?: boolean): {\n        acknowledge$: Observable<any>;\n        destroy: () => any;\n    };\n}\n"]}