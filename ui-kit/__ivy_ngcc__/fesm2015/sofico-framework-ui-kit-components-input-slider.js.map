{"version":3,"file":"sofico-framework-ui-kit-components-input-slider.js","sources":["../../../../projects/sofico-framework/ui-kit/components/input-slider/input-slider.component.ts","../../../../projects/sofico-framework/ui-kit/components/input-slider/pipes/label-format-fn.pipe.ts","../../../../projects/sofico-framework/ui-kit/components/input-slider/input-slider.module.ts","../../../../projects/sofico-framework/ui-kit/components/input-slider/sofico-framework-ui-kit-components-input-slider.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, NgControl } from '@angular/forms';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\nimport { isNullOrUndefined, isNumber } from '@sofico-framework/utils';\nimport { NzMarks } from 'ng-zorro-antd/slider';\nimport { takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-input-slider',\n  styleUrls: ['./input-slider.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <nz-slider\n      #inputElement\n      [ngModel]=\"internalValue\"\n      [nzRange]=\"localRange\"\n      [nzMin]=\"localMinValue\"\n      [nzMax]=\"localMaxValue\"\n      [nzMarks]=\"nzMarks\"\n      [nzDisabled]=\"isDisabled\"\n      [nzReverse]=\"localReversed\"\n      nzTooltipVisible=\"never\"\n      (ngModelChange)=\"onChange($event, true)\"\n      (nzOnAfterChange)=\"onTouch($event)\"\n    ></nz-slider>\n    <div class=\"marks\">\n      <div>\n        <ng-container *ngIf=\"marks === 'both' || marks === 'min'\">\n          {{ localMinValue | sofLabelFormatFn: localLabelFormatFn }}\n        </ng-container>\n      </div>\n      <div>\n        <ng-container *ngIf=\"marks === 'both' || marks === 'max'\">\n          {{ localMaxValue | sofLabelFormatFn: localLabelFormatFn }}\n        </ng-container>\n      </div>\n    </div>\n    <div\n      class=\"d-flex mt-2\"\n      [class.justify-content-between]=\"localRange\"\n      [class.justify-content-end]=\"!localReversed\"\n    >\n      <sof-input-number\n        *ngIf=\"localRange\"\n        class=\"slider-input\"\n        [formControl]=\"localValueForm.controls.minValue\"\n        [maxFraction]=\"maxFraction\"\n        [isDisabled]=\"isDisabled\"\n        (touch)=\"onLoseFocus()\"\n      ></sof-input-number>\n      <sof-input-number\n        class=\"slider-input\"\n        [formControl]=\"localValueForm.controls.maxValue\"\n        [maxFraction]=\"maxFraction\"\n        [isDisabled]=\"isDisabled\"\n        (touch)=\"onLoseFocus()\"\n      ></sof-input-number>\n    </div>\n  `,\n  providers: [\n    { provide: SOF_FOCUS_COMPONENT, useExisting: InputSliderComponent }\n  ]\n})\nexport class InputSliderComponent\n  implements ControlValueAccessor, OnDestroy, OnSofFocus, OnInit {\n  nzMarks: NzMarks;\n\n  propagateChange: any;\n  propagateTouch: any;\n  localMinValue: number;\n  localMaxValue: number;\n  localReversed = false;\n  localRange = false;\n\n  // This is the value of the slider that gets used in the nzSlider. This value\n  // is also set to any as the template can't cope with number|[number, number]\n  internalValue: any;\n\n  // In case of reversing the slider, we'll need to manipulate the real internal\n  // value to keep the min value on the left. That manipulated value is stored\n  // here. This value is also the value that gets used in the FormControl.\n  calculatedValue: any;\n\n  /**\n   *  Determines if the input is disabled.\n   */\n  @Input() isDisabled: boolean;\n\n  /**\n   *  Determines if the input will allow two boundary values to be picked.\n   */\n  @Input() set range(isRange: boolean) {\n    this.localRange = isRange;\n    this.updateLocalValueForm();\n  }\n\n  /**\n   * Determines if the selected part of the slider is to the left\n   * or to the right of the selected value\n   * false => |=====O-----|   [default]\n   * true =>  |-----O=====|\n   */\n  @Input() set reversed(isReversed: boolean) {\n    this.localReversed = isReversed;\n    this.calculateValue(this.calculatedValue);\n  }\n\n  /**\n   *  Visibility of marks\n   */\n  @Input() marks: 'neither' | 'min' | 'max' | 'both' = 'both';\n\n  /**\n   * The maximum amount of decimals allowed in the input fields\n   */\n  @Input() maxFraction = 0;\n\n  /**\n   * Determines the value of the control.\n   */\n  @Input() set value(value: number | [number, number]) {\n    this.writeValue(value);\n  }\n\n  /**\n   * Determines the min value of the slider.\n   */\n  @Input() set minValue(value: number) {\n    this.localMinValue = value;\n    this.calculateValue(this.calculatedValue);\n    this.nzMarks = this.calculateMarks(this.localMinValue, this.localMaxValue);\n  }\n\n  /**\n   * Determines the max value of the slider.\n   */\n  @Input() set maxValue(value: number) {\n    this.localMaxValue = value;\n    this.calculateValue(this.calculatedValue);\n    this.nzMarks = this.calculateMarks(this.localMinValue, this.localMaxValue);\n  }\n\n  /**\n   * Determines the display format of the values.\n   */\n  @Input() set labelFormatFn(fn: (value: number) => string) {\n    this.localLabelFormatFn = fn;\n    this.nzMarks = this.calculateMarks(this.localMinValue, this.localMaxValue);\n  }\n\n  /**\n   * EventEmitter that will emit the value when changed.\n   */\n  @Output() changeValue = new EventEmitter<number | [number, number]>();\n\n  /**\n   * EventEmitter that will emit the value after release.\n   */\n  @Output() valueAfterRelease = new EventEmitter<number | [number, number]>();\n\n  @ViewChild('inputElement', { read: ElementRef }) inputElement: ElementRef;\n\n  localValueForm = this.fb.group({\n    minValue: [],\n    maxValue: []\n  });\n\n  localLabelFormatFn: (value: number) => string = (value: number) => `${value}`;\n\n  constructor(\n    @Optional() @Host() public ngControl: NgControl,\n    private changeDetectorRef: ChangeDetectorRef,\n    private fb: FormBuilder\n  ) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    // This logic interprets the values in the localValueForm and uses some\n    // logic to get the correct values sent to the onChange method\n    this.localValueForm.valueChanges\n      .pipe(takeUntilDestroy(this))\n      .subscribe(values => {\n        let localValue;\n\n        if (this.localRange) {\n          localValue = [values.minValue, values.maxValue];\n        } else {\n          localValue = values.maxValue;\n        }\n\n        if (this.localRange) {\n          if (\n            !(\n              isNullOrUndefined(localValue[0]) ||\n              isNullOrUndefined(localValue[1])\n            ) &&\n            localValue[0] > localValue[1]\n          ) {\n            localValue.reverse();\n          }\n          // If the value is null we will take the localMinValue or\n          // localMaxValue instead. Same goes for if the value exceeds the\n          // minValue or maxValue.\n          if (\n            isNullOrUndefined(localValue[0]) ||\n            localValue[0] < this.localMinValue\n          ) {\n            localValue[0] = this.localMinValue;\n          } else if (\n            isNullOrUndefined(localValue[1]) ||\n            localValue[1] > this.localMaxValue\n          ) {\n            localValue[1] = this.localMaxValue;\n          }\n\n          // If the value didn't change, don't trigger the onChange\n          if (\n            localValue[0] === this.internalValue[0] &&\n            localValue[1] === this.internalValue[1]\n          ) {\n            return;\n          }\n        } else {\n          if (isNullOrUndefined(localValue)) {\n            localValue = this.localReversed\n              ? this.localMinValue\n              : this.localMaxValue;\n          } else if (localValue < this.localMinValue) {\n            localValue = this.localMinValue;\n          } else if (localValue > this.localMaxValue) {\n            localValue = this.localMaxValue;\n          }\n\n          if (this.localReversed) {\n            localValue = this.calculateReversedValue(localValue);\n          }\n\n          // If the value didn't change, don't trigger the onChange\n          if (localValue === this.internalValue) {\n            return;\n          }\n        }\n\n        this.onChange(localValue);\n      });\n  }\n\n  onLoseFocus(): void {\n    // Syncing the localValueForm with the actual values\n    this.updateLocalValueForm(true);\n  }\n\n  sofFocus(): void {\n    const handles = this.inputElement.nativeElement.getElementsByClassName(\n      'ant-slider-handle'\n    );\n    const handle = handles[handles.length - 1];\n    handle.focus();\n    this.changeDetectorRef.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    if (this.ngControl?.valueAccessor) {\n      // Every time a control is re-created the previous writeValue reference(s) is not cleaned up.\n      // So, over time, a lot of these references can be built up. This memory leak is a bug in Angular's implementation of ControlValueAccessor.\n      // We hide that problem by assigning an empty function to writeValue every time we destroy the control.\n      // An detailed explanation of the problem can be found here: https://github.com/angular/angular/pull/29335\n      // The bug issue for it: https://github.com/angular/angular/issues/20007\n      this.ngControl.valueAccessor.writeValue = () => {};\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.propagateTouch = fn;\n  }\n\n  writeValue(value: number | [number, number]): void {\n    this.internalValue = value ?? null;\n    this.calculatedValue = this.internalValue;\n    this.calculateValue(this.calculatedValue);\n    this.updateLocalValueForm();\n  }\n\n  onChange(value: number | [number, number], isSlider: boolean = false): void {\n    if (!this.isDisabled) {\n      const newInternalValue = value ?? null;\n\n      if (this.localReversed && !isNullOrUndefined(newInternalValue)) {\n        this.calculatedValue = this.calculateReversedValue(\n          newInternalValue as number\n        );\n      } else {\n        this.calculatedValue = newInternalValue;\n      }\n\n      if (isSlider) {\n        this.updateLocalValueForm();\n      }\n\n      // emit value\n      this.changeValue.emit(this.calculatedValue);\n\n      // propagate the change\n      if (this.propagateChange) {\n        this.internalValue = newInternalValue;\n        this.propagateChange(this.calculatedValue);\n      }\n    }\n  }\n\n  onTouch(value: number | [number, number]): void {\n    this.valueAfterRelease.emit(value);\n\n    if (!this.isDisabled && this.propagateTouch) {\n      this.propagateTouch();\n    }\n  }\n\n  setDisabledState(value: boolean): void {\n    this.isDisabled = value;\n  }\n\n  // If the slider needs to be reversed, this will check if all variables needed\n  // for the calculation are available. If that is the case, the internal value\n  // will be changed to it's correct value.\n  private calculateValue(value: number | [number, number]): void {\n    if (!!value) {\n      // it doesn't make sense to reverse a slider if you have a range\n      // so this will only support a single value\n      if (typeof value === 'number') {\n        if (this.localReversed) {\n          if (!!this.localMaxValue && !!this.localMinValue) {\n            this.internalValue = this.calculateReversedValue(value);\n          }\n        }\n      }\n    }\n  }\n\n  private calculateReversedValue(value: number): number {\n    return this.localMaxValue + this.localMinValue - (value as number);\n  }\n\n  private calculateMarks(min: number, max: number): { [key: number]: string } {\n    const marks = {};\n\n    if (this.marks === 'neither') {\n      return marks;\n    }\n\n    if (isNumber(min) && (this.marks === 'both' || this.marks === 'min')) {\n      // Using nzMarks together with nzMin the mark values are only displayed\n      // when the mark matches with the nzMin value as a string.\n      // By applying an empty string as mark. They will never match and the mark value is not shown.\n      // This is intended as we display the values our self.\n      marks[min] = '';\n    }\n\n    if (isNumber(max) && (this.marks === 'both' || this.marks === 'max')) {\n      // Using nzMarks together with nzMax the mark values are only displayed\n      // when the mark matches with the nzMax value as a string.\n      // By applying an empty string as mark. They will never match and the mark value is not shown.\n      // This is intended as we display the values our self.\n      marks[max] = '';\n    }\n\n    return marks;\n  }\n\n  private updateLocalValueForm(emitEvent: boolean = false): void {\n    if (this.localRange) {\n      this.localValueForm.reset(\n        {\n          minValue: this.calculatedValue?.[0],\n          maxValue: this.calculatedValue?.[1]\n        },\n        { emitEvent }\n      );\n    } else {\n      this.localValueForm.reset(\n        {\n          maxValue: this.calculatedValue\n        },\n        { emitEvent }\n      );\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'sofLabelFormatFn' })\nexport class LabelFormatFnPipe implements PipeTransform {\n  transform(value: number, fn: (value: number) => string): any {\n    return fn(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InputCurrencyModule } from '@sofico-framework/ui-kit/components/input-currency';\nimport { InputNumberModule } from '@sofico-framework/ui-kit/components/input-number';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { InputSliderComponent } from './input-slider.component';\nimport { LabelFormatFnPipe } from './pipes/label-format-fn.pipe';\n\n@NgModule({\n  imports: [\n    NzSliderModule,\n    ReactiveFormsModule,\n    FormsModule,\n    CommonModule,\n    InputNumberModule,\n    InputCurrencyModule\n  ],\n  declarations: [InputSliderComponent, LabelFormatFnPipe],\n  exports: [InputSliderComponent]\n})\nexport class InputSliderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}