{"version":3,"file":"sofico-framework-ui-kit-components-form.js","sources":["../../../../projects/sofico-framework/ui-kit/components/form/form.component.ts","../../../../projects/sofico-framework/ui-kit/components/form/form.module.ts","../../../../projects/sofico-framework/ui-kit/components/form/sofico-framework-ui-kit-components-form.ts"],"names":[],"mappings":";;;;;;;;;;;;;IAuBa,aAAa,SAAb,aAAa;AAAG;AAAoB;AAC9C;AAIE;AACM,QAMC,eAAU,GAAG,IAAI,YAAY,EAAO,CAAC;AACjD;AACM;AACM;AAEA;AAAY,QAAZ,cAAS,GAAG,IAAI,YAAY,EAAW,CAAC;AACpD,QAAE,cAAS,GAAG,KAAK,CAAC;AACpB,QAAE,mBAAc,GAA8B;AAC9C,YAAI,QAAQ,EAAE,qBAAqB;AACnC,YAAI,KAAK,EAAE,kBAAkB;AAC7B,YAAI,SAAS,EAAE,uBAAuB;AACtC,YAAI,OAAO,EAAE,yBAAyB;AACtC,YAAI,WAAW,EAAE,yBAAyB;AAC1C,YAAI,SAAS,EAAE,2BAA2B;AAC1C,SAAG,CAAC;AACJ,QAAU,eAAU,GAAG,IAAI,OAAO,EAAW,CAAC;AAC9C,KAwCC;AACD;AAAQ;AAAsF;AAAyD;AAAkB;AAAe;AAAmB;AAAiB;AAAqB;AAAmB;AAAQ,IA9B1Q,IAAa,QAAQ,CAAC,GAA8B;AACtD,QAAI,IAAI,CAAC,cAAc,mCACd,IAAI,CAAC,cAAc,GACnB,GAAG,CACP,CAAC;AACN,KAAG;AACH,IACE,QAAQ;AAAK,QACX,IAAI,CAAC,UAAU;AACnB,aAAO,IAAI,CAAC,oBAAoB,EAAE,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC3D,aAAO,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACtD,QACI,IAAI,CAAC,SAAS,CAAC,YAAY;AAC/B,aAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACpD,aAAO,SAAS,CAAC;AACjB,YAAQ,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AACrD,gBAAU,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACjC,aAAS;AACT,YACQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACnD,SAAO,CAAC,CAAC;AACT,KAAG;AACH,IACE,WAAW,MAAW;AACxB,IACE,QAAQ;AAAK,QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC1B,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC/C,KAAG;AACH,EAAC;yCA7EA,SAAS,SAAC,kBACT,QAAQ,EAAE;EAAU,kBAEpB,QAAQ,EAAE,0GAIT,4CACF;;;;;;;;wIACI;AAAC;AAAiC,iBAIpC,KAAK;AAAK,wBAIV,KAAK;AAAK,yBAIV,MAAM;AAAK,wBAKX,MAAM;AAAK,uBAsBX,KAAK;AAAI;AAvCC,aAAa;AAAgB,IAVzC,YAAY,EAAE;AACf,GASa,aAAa,CAoEzB;;;;;;;;;;;;;;;;;;;;;;oBACD;AAAC;AAAC,MCjFW,UAAU;AAAG;sCALzB,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC;SAAY,EAAE,mBAAmB,EAAE,eAAe,CAAC;CAC7D,YAAY,EAAE,CAAC,aAAa,CAAC,kBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC,cACzB;;;;;;;;;0BACI;AAAC;ACXN;AACA;AACA;AACA;AACA;AACQ","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, startWith } from 'rxjs/operators';\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-form',\n  styleUrls: ['./form.component.scss'],\n  template: `\n    <form [formGroup]=\"formGroup\" (submit)=\"onSubmit()\">\n      <ng-content></ng-content>\n    </form>\n  `\n})\nexport class FormComponent implements OnInit, OnDestroy {\n  /**\n   * The translation context.\n   */\n  @Input() tc: string;\n  /**\n   * Contains the form that the wrapped form controls use.\n   */\n  @Input() formGroup: FormGroup;\n  /**\n   * EventEmitter that will emit when the form is submitted.\n   */\n  @Output() formSubmit = new EventEmitter<any>();\n  /**\n   * EventEmitter that will emit when the form is dirty. This means that\n   * the user has changed the form's value.\n   */\n  @Output() formDirty = new EventEmitter<boolean>();\n  submitted = false;\n  actualErrorMap: { [key: string]: string } = {\n    required: 'VALIDATION_REQUIRED',\n    email: 'VALIDATION_EMAIL',\n    maxLength: 'VALIDATION_MAX-LENGTH',\n    inRange: 'VALIDATION_NOT-IN-RANGE',\n    phoneNumber: 'VALIDATION_PHONE-NUMBER',\n    isInteger: 'VALIDATION_NOT-IS-INTEGER'\n  };\n  private formDirty$ = new Subject<boolean>();\n\n  /**\n   * Contains a map of error translation keys that match the validators identifier.\n   * The validators that are supported by default are:\n   * - required\n   * - email\n   * - maxLength\n   * - inRange\n   * - phoneNumber\n   * - isInteger\n   */\n  @Input() set errorMap(map: { [key: string]: string }) {\n    this.actualErrorMap = {\n      ...this.actualErrorMap,\n      ...map\n    };\n  }\n\n  ngOnInit(): void {\n    this.formDirty$\n      .pipe(distinctUntilChanged(), takeUntilDestroy(this))\n      .subscribe(dirty => this.formDirty.emit(dirty));\n\n    this.formGroup.valueChanges\n      .pipe(startWith(null), takeUntilDestroy(this))\n      .subscribe(() => {\n        if (this.submitted && !this.formGroup.dirty) {\n          this.submitted = false;\n        }\n\n        this.formDirty$.next(this.formGroup.dirty);\n      });\n  }\n\n  ngOnDestroy(): void {}\n\n  onSubmit(): void {\n    this.submitted = true;\n    this.formSubmit.emit(this.formGroup.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormComponent } from './form.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, TranslateModule],\n  declarations: [FormComponent],\n  exports: [FormComponent]\n})\nexport class FormModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}