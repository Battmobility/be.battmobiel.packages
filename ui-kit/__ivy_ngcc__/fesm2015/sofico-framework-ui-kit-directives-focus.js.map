{"version":3,"file":"sofico-framework-ui-kit-directives-focus.js","sources":["../../../../projects/sofico-framework/ui-kit/directives/focus/focus.token.ts","../../../../projects/sofico-framework/ui-kit/directives/focus/focus.directive.ts","../../../../projects/sofico-framework/ui-kit/directives/focus/focus.module.ts","../../../../projects/sofico-framework/ui-kit/directives/focus/sofico-framework-ui-kit-directives-focus.ts"],"names":[],"mappings":";;;;;;;;MAGa,mBAAmB,GAAG,IAAI,cAAc,CACnD,qBAAqB;AACrB;AACF,ICca,cAAc,SAAd,cAAc;AAAG,IAM5B,YAGU,SAA4B,EAC5B,UAAsB;AAC/B,QAFS,cAAS,GAAT,SAAS,CAAmB;AAAC,QAC7B,eAAU,GAAV,UAAU,CAAY;AAClC,QAPU,UAAK,GAAG,IAAI,OAAO,EAAE,CAAC;AAChC,KAMM;AACN,IACE,WAAW,MAAW;AACxB,IACE,WAAW,MAAW;AACxB,IACE,eAAe;AAAK,QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;AACzC,QAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ;AAClE,YAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC9B,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,YAAY;AAAK,QACvB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxB,oBAAoB,EAAE,EACtB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CACtB,CAAC;AACN,KAAG;AACH,IACU,QAAQ,CAAC,QAAiB;AAAI,QACpC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACvC,YAAM,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AACxB,YAAM,UAAU,CAAC;AACjB,gBAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC5B,oBAAU,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AACpC,iBAAS;AAAC,qBAAK;AACf,oBAAU,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAChD,iBAAS;AACT,aAAO,EAAE,CAAC,CAAC,CAAC;AACZ,SAAK;AACL,KAAG;AACH,EAAC;0CA/CA,SAAS,SAAC,kBACT,QAAQ,EAAE,YAAY,cACvB;uLACI;AAAC;AAAwC,4CAOzC,QAAQ,YACR,MAAM,SAAC,mBAAmB;AACxB,YA1BL,UAAU;AACX;AAAG;AAGE,uBAcH,KAAK;AAAI;AACW;AAAa,IAAjC,OAAO,CAAC,UAAU,CAAC;AAAC,iDAA+B;AAFzC,cAAc;AAAgB,IAJ1C,YAAY,EAAE;AACf,GAGa,cAAc,CA4C1B;;;;;;;;;;;;;oBACD;AAAC;AAAC,MCxDW,WAAW;AAAG;uCAL1B,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC;OAAY,CAAC,kBACvB,YAAY,EAAE,CAAC,cAAc,CAAC;OAC9B,OAAO,EAAE,CAAC,cAAc,CAAC,cAC1B;;;;;;;;;0BACI;AAAC;ACTN;AACA;AACA;AACA;AACA;AAC+B","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { OnSofFocus } from './focus.interface';\n\nexport const SOF_FOCUS_COMPONENT = new InjectionToken<OnSofFocus>(\n  'SOF_FOCUS_COMPONENT'\n);\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Changes, takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport { Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, startWith, takeUntil } from 'rxjs/operators';\nimport { OnSofFocus } from './focus.interface';\nimport { SOF_FOCUS_COMPONENT } from './focus.token';\n\n@UntilDestroy()\n@Directive({\n  selector: '[sofFocus]'\n})\nexport class FocusDirective implements AfterViewInit, OnChanges, OnDestroy {\n  @Input() sofFocus;\n  @Changes('sofFocus') sofFocus$: Observable<boolean>;\n  private combined$: Observable<boolean>;\n  private done$ = new Subject();\n\n  constructor(\n    @Optional()\n    @Inject(SOF_FOCUS_COMPONENT)\n    private component: OnSofFocus | null,\n    private elementRef: ElementRef\n  ) {}\n\n  ngOnChanges(): void {}\n\n  ngOnDestroy(): void {}\n\n  ngAfterViewInit(): void {\n    this.combined$ = this.getCombined$();\n    this.combined$.pipe(takeUntilDestroy(this)).subscribe(sofFocus => {\n      this.setFocus(sofFocus);\n    });\n  }\n\n  private getCombined$(): Observable<boolean> {\n    return this.sofFocus$.pipe(\n      startWith(this.sofFocus),\n      distinctUntilChanged(),\n      takeUntil(this.done$)\n    );\n  }\n\n  private setFocus(sofFocus: boolean): void {\n    if (['', true].includes(sofFocus)) {\n      this.done$.next();\n      setTimeout(() => {\n        if (this.component) {\n          this.component.sofFocus();\n        } else {\n          this.elementRef.nativeElement.focus();\n        }\n      }, 0);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FocusDirective } from './focus.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FocusDirective],\n  exports: [FocusDirective]\n})\nexport class FocusModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}