{"version":3,"file":"sofico-framework-ui-kit-components-top-bar-nav.js","sources":["../../../../projects/sofico-framework/ui-kit/components/top-bar-nav/top-bar-nav.component.ts","../../../../projects/sofico-framework/ui-kit/components/top-bar-nav/top-bar-nav.module.ts","../../../../projects/sofico-framework/ui-kit/components/top-bar-nav/sofico-framework-ui-kit-components-top-bar-nav.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport { hotSafe, WindowRefService } from '@sofico-framework/utils';\nimport { takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { filter, map, mapTo } from 'rxjs/operators';\nimport { NavItem } from './types/nav-item.type';\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-top-bar-nav',\n  styleUrls: ['./top-bar-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nav class=\"navbar navbar-expand sof-navbar-light\">\n      <div class=\"container\">\n        <ul class=\"navbar-nav w-100\">\n          <li\n            class=\"nav-item dropdown\"\n            *ngFor=\"\n              let menuItem of menuItems;\n              trackBy: trackByFn;\n              let last = last\n            \"\n            routerLinkActive=\"active\"\n            [class.active-menu-item]=\"\n              menuItem?.children && (toggle$ | async) === menuItem\n            \"\n          >\n            <a\n              class=\"d-flex justify-content-center sof-nav-link nav-link\"\n              [routerLink]=\"menuItem.routerLink\"\n              (click)=\"toggle$.next(null)\"\n              *ngIf=\"!menuItem?.children\"\n            >\n              <ng-container\n                *ngTemplateOutlet=\"innerText; context: { $implicit: menuItem }\"\n              ></ng-container>\n            </a>\n            <button\n              class=\"d-flex justify-content-center sof-nav-link nav-link clickable\"\n              (click)=\"toggleMenuItem(menuItem)\"\n              *ngIf=\"menuItem?.children\"\n            >\n              <ng-container\n                *ngTemplateOutlet=\"innerText; context: { $implicit: menuItem }\"\n              ></ng-container>\n            </button>\n            <div\n              class=\"dropdown-menu\"\n              [class.dropdown-menu-right]=\"last\"\n              [class.open-dropdown]=\"(toggle$ | async) === menuItem\"\n            >\n              <ng-container\n                *ngFor=\"\n                  let subMenuItem of menuItem?.children;\n                  trackBy: trackByFn\n                \"\n              >\n                <a\n                  routerLinkActive=\"active\"\n                  class=\"dropdown-item\"\n                  [routerLink]=\"subMenuItem.routerLink\"\n                  (click)=\"toggle$.next(null)\"\n                >\n                  <ng-container\n                    *ngTemplateOutlet=\"\n                      innerText;\n                      context: { $implicit: subMenuItem }\n                    \"\n                  ></ng-container>\n                </a>\n              </ng-container>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </nav>\n\n    <ng-template #innerText let-item>\n      <sof-svg-icon\n        *ngIf=\"item.icon\"\n        [ngClass]=\"item.iconClasses\"\n        [icon]=\"item.icon\"\n      ></sof-svg-icon>\n      <span>\n        {{\n          item?.label\n            ? (tc + '.' + item.label | translate: item.params)\n            : item.translation\n        }}\n      </span>\n    </ng-template>\n  `\n})\nexport class TopBarNavComponent implements OnInit, OnDestroy, AfterViewInit {\n  /**\n   * The translation context\n   */\n  @Input() tc: string;\n  /**\n   * MenuItems - The menu only support one level down (children). NavItem with children itself will to trigger navigate.\n   */\n  @Input() menuItems: NavItem[];\n\n  showMobile = false;\n\n  // Presentation\n  toggle$ = new BehaviorSubject<NavItem>(null);\n\n  // Intermediate\n  private clickedOutside$: Observable<undefined>;\n\n  trackByFn = i => i;\n\n  constructor(\n    private elRef: ElementRef,\n    private windowRefService: WindowRefService\n  ) {}\n\n  ngOnInit(): void {\n    // Intermediate\n    this.clickedOutside$ = this.getClickedOutside$();\n  }\n\n  ngAfterViewInit(): void {\n    // windowRefService is only available after view init\n    this.clickedOutside$\n      .pipe(takeUntilDestroy(this))\n      .subscribe(() => this.toggle$.next(null));\n  }\n\n  ngOnDestroy(): void {}\n\n  toggleMobileMenu(): void {\n    this.showMobile = !this.showMobile;\n  }\n\n  toggleMenuItem(menuItem: NavItem): void {\n    if (this.toggle$.getValue() !== menuItem) {\n      this.toggle$.next(menuItem);\n    } else {\n      this.toggle$.next(null);\n    }\n  }\n\n  /**\n   * Emits undefined if click on window was not this component\n   */\n  private getClickedOutside$(): Observable<undefined> {\n    return merge(\n      fromEvent(this.windowRefService.nativeWindow, 'click'),\n      fromEvent(this.windowRefService.nativeWindow, 'touchstart')\n    ).pipe(\n      map((x: any) => {\n        let currentElem = x.target;\n        let found = false;\n        while (!found && currentElem) {\n          found = currentElem === this.elRef.nativeElement;\n          currentElem = currentElem.parentElement;\n        }\n        return found;\n      }),\n      filter(x => !x),\n      mapTo(undefined),\n      hotSafe()\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SvgIconModule } from '@sofico-framework/ui-kit/components/svg-icon';\nimport { UtilsPipesModule } from '@sofico-framework/utils';\nimport { TopBarNavComponent } from './top-bar-nav.component';\n\n@NgModule({\n  imports: [\n    SvgIconModule,\n    CommonModule,\n    RouterModule,\n    TranslateModule,\n    UtilsPipesModule,\n    NgbDropdownModule\n  ],\n  declarations: [TopBarNavComponent],\n  exports: [TopBarNavComponent]\n})\nexport class TopBarNavModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}