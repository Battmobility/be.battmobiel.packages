{"version":3,"file":"sofico-framework-ui-kit-components-input-radio.js","sources":["../../../../projects/sofico-framework/ui-kit/components/input-radio/input-radio.component.ts","../../../../projects/sofico-framework/ui-kit/components/input-radio/input-radio.module.ts","../../../../projects/sofico-framework/ui-kit/components/input-radio/sofico-framework-ui-kit-components-input-radio.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { FormComponent } from '@sofico-framework/ui-kit/components/form';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\n\nlet uniqueRadioCounter = 0;\n\n@Component({\n  selector: 'sof-input-radio',\n  template: `\n    <div class=\"custom-control custom-radio\">\n      <input\n        #inputElement\n        type=\"radio\"\n        [attr.id]=\"labelForId\"\n        [value]=\"value\"\n        [disabled]=\"isDisabled\"\n        [attr.name]=\"name\"\n        [checked]=\"value === ngControl?.value || checked\"\n        (change)=\"onChange(value)\"\n        [class.is-invalid]=\"\n          invalid ||\n          (ngControl?.invalid && (ngControl?.touched || form?.submitted))\n        \"\n        class=\"custom-control-input\"\n      />\n      <label class=\"custom-control-label\" [attr.for]=\"labelForId\">\n        <ng-content></ng-content>\n      </label>\n    </div>\n  `,\n  styleUrls: ['./input-radio.component.scss'],\n  providers: [\n    { provide: SOF_FOCUS_COMPONENT, useExisting: InputRadioComponent }\n  ]\n})\nexport class InputRadioComponent implements ControlValueAccessor, OnSofFocus {\n  /**\n   * Determines the value of the control.\n   */\n  @Input() value: any;\n\n  /**\n   * Determines the name of the control.\n   */\n  @Input() name: string;\n\n  /**\n   * Determines whether the control is checked or not.\n   */\n  @Input() checked: boolean;\n\n  /**\n   *  Determines if the input is disabled.\n   */\n  @Input() isDisabled: boolean;\n\n  /**\n   * Determines whether the input is in a valid state.\n   */\n  @Input() invalid: boolean;\n\n  /**\n   * EventEmitter that will emit the value when changed.\n   */\n  @Output() changeValue = new EventEmitter<any>();\n\n  @ViewChild('inputElement') inputElement: ElementRef;\n\n  labelForId = 'sof-input-radio-' + uniqueRadioCounter; // generate unique id\n\n  changeFn;\n  touchFn;\n\n  constructor(\n    @Optional() public form: FormComponent,\n    @Optional() public ngControl: NgControl\n  ) {\n    ++uniqueRadioCounter;\n    if (ngControl) {\n      ngControl.valueAccessor = this as any;\n    }\n  }\n\n  sofFocus(): void {\n    this.inputElement.nativeElement.focus();\n  }\n\n  onChange(e: any): void {\n    if (this.changeFn) {\n      this.changeFn(e);\n    }\n    this.changeValue.emit(e);\n  }\n\n  writeValue(obj: any): void {}\n\n  registerOnChange(fn: any): void {\n    this.changeFn = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.touchFn = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { InputRadioComponent } from './input-radio.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule],\n  declarations: [InputRadioComponent],\n  exports: [InputRadioComponent]\n})\nexport class InputRadioModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;AAgBA,IAAI,kBAAkB,GAAG,CAAC,CAAC;MA+Bd,mBAAmB;IAsC9B,YACqB,IAAmB,EACnB,SAAoB;QADpB,SAAI,GAAJ,IAAI,CAAe;QACnB,cAAS,GAAT,SAAS,CAAW;;;;QAX/B,gBAAW,GAAG,IAAI,YAAY,EAAO,CAAC;QAIhD,eAAU,GAAG,kBAAkB,GAAG,kBAAkB,CAAC;QASnD,EAAE,kBAAkB,CAAC;QACrB,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,aAAa,GAAG,IAAW,CAAC;SACvC;KACF;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACzC;IAED,QAAQ,CAAC,CAAM;QACb,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClB;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAC1B;IAED,UAAU,CAAC,GAAQ,KAAU;IAE7B,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IAED,iBAAiB,CAAC,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACnB;IAED,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;YApGF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;GAqBT;gBAED,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,mBAAmB,EAAE;iBACnE;;aACF;;;YApCQ,aAAa,uBA4EjB,QAAQ;YA7EkB,SAAS,uBA8EnC,QAAQ;;;oBApCV,KAAK;mBAKL,KAAK;sBAKL,KAAK;yBAKL,KAAK;sBAKL,KAAK;0BAKL,MAAM;2BAEN,SAAS,SAAC,cAAc;;;MCpEd,gBAAgB;;;YAL5B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,CAAC;gBAC5C,YAAY,EAAE,CAAC,mBAAmB,CAAC;gBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;aAC/B;;;ACTD;;;;;;"}