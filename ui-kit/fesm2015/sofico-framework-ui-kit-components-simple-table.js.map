{"version":3,"file":"sofico-framework-ui-kit-components-simple-table.js","sources":["../../../../projects/sofico-framework/ui-kit/components/simple-table/simple-table.component.ts","../../../../projects/sofico-framework/ui-kit/components/simple-table/simple-table.module.ts","../../../../projects/sofico-framework/ui-kit/components/simple-table/classes/simple-table-config.class.ts","../../../../projects/sofico-framework/ui-kit/components/simple-table/services/simple-table-config-builder.service.ts","../../../../projects/sofico-framework/ui-kit/components/simple-table/sofico-framework-ui-kit-components-simple-table.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit\n} from '@angular/core';\nimport { SortingOrderConfig, sortList } from '@sofico-framework/utils';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n  ReplaySubject\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SimpleTableConfig } from './classes/simple-table-config.class';\n\n@Component({\n  selector: 'sof-simple-table',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container *ngIf=\"config$ | async as config\">\n      <ng-container *ngIf=\"sortedEntities$ | async as sortedEntities\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-borderless table-striped\">\n            <thead>\n              <tr>\n                <th\n                  *ngFor=\"let prop of config.functionalProps; let i = index\"\n                  (click)=\"onChangeSorting(prop.id, i)\"\n                >\n                  <div class=\"d-flex\">\n                    <div>{{ tc + '.' + prop.header | translate }}</div>\n                    <sof-svg-icon\n                      class=\"ml-1\"\n                      [class.visibility-hidden]=\"activeSortPropId !== prop.id\"\n                      [icon]=\"\n                        (sortingSub$ | async)?.order === 'asc'\n                          ? 'icon-sort-amount-asc'\n                          : 'icon-sort-amount-desc'\n                      \"\n                      size=\"12\"\n                    ></sof-svg-icon>\n                  </div>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <sof-simple-table-item\n                *ngFor=\"\n                  let entity of sortedEntities | sofSort: (sortingSub$ | async);\n                  trackBy: trackByFn\n                \"\n                [entity]=\"entity\"\n                [tc]=\"tc\"\n                [dynamicRowComponent]=\"config?.dynamicRowComponent\"\n              >\n              </sof-simple-table-item>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"no-results\" *ngIf=\"sortedEntities?.length === 0\">\n          {{ tc + '.' + 'SEARCH-NO-RESULTS' | translate }}\n        </div>\n      </ng-container>\n    </ng-container>\n  `,\n  styleUrls: ['./simple-table.component.scss']\n})\nexport class SimpleTableComponent<T> implements OnInit {\n  /**\n   * The translation context.\n   */\n  @Input() tc: string;\n\n  /**\n   * The simple table config.\n   */\n  @Input() set config(config: SimpleTableConfig<T>) {\n    if (config) {\n      this.config$.next(config);\n      this.sortingSub$.next(config.initialSorting);\n      this.selectors = config?.functionalProps\n        ?.filter(prop => prop.sortable)\n        ?.map(prop => prop?.selector);\n      this.plainSorts = config?.functionalProps\n        ?.filter(prop => prop.sortable)\n        ?.map(prop => prop?.plainSort);\n\n      if (config.initialSorting) {\n        this.activeSortPropId = config.initialSortingFuncPropRef.id;\n      }\n    }\n  }\n\n  /**\n   * The entities we want to render in this table.\n   */\n  @Input() set entities(entities: T[]) {\n    if (entities) {\n      this.entities$.next(entities);\n    }\n  }\n\n  selectors: ((entity: T) => any)[];\n  plainSorts: boolean[];\n\n  activeSortPropId: number;\n\n  // source streams\n  entities$ = new ReplaySubject<T[]>(1);\n  config$ = new ReplaySubject<SimpleTableConfig<T>>(1);\n\n  // intermediate streams\n  sortingSub$ = new BehaviorSubject<SortingOrderConfig<T>>(null);\n\n  // presentation streams\n  sortedEntities$: Observable<T[]>;\n\n  trackByFn = i => i;\n\n  ngOnInit(): void {\n    // presentation streams\n    this.sortedEntities$ = this.getSortedEntities$();\n  }\n\n  onChangeSorting(id: number, index: number): void {\n    this.sortingSub$.next({\n      prop: this.selectors[index],\n      plainSort: this.plainSorts[index],\n      order:\n        id === this.activeSortPropId\n          ? this.sortingSub$.getValue().order === 'asc'\n            ? 'desc'\n            : 'asc'\n          : 'asc'\n    });\n\n    this.activeSortPropId = id;\n  }\n\n  private getSortedEntities$(): Observable<T[]> {\n    return combineLatest([this.entities$, this.sortingSub$]).pipe(\n      map(([entities, sorting]) => sortList(entities, sorting))\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LoadingModule } from '@sofico-framework/ui-kit/components/loading';\nimport { SimpleTableItemModule } from '@sofico-framework/ui-kit/components/simple-table-item';\nimport { SvgIconModule } from '@sofico-framework/ui-kit/components/svg-icon';\nimport { UtilsPipesModule } from '@sofico-framework/utils';\nimport { SimpleTableComponent } from './simple-table.component';\n\n@NgModule({\n  declarations: [SimpleTableComponent],\n  exports: [SimpleTableComponent],\n  imports: [\n    CommonModule,\n    SimpleTableItemModule,\n    LoadingModule,\n    TranslateModule,\n    UtilsPipesModule,\n    SvgIconModule\n  ]\n})\nexport class SimpleTableModule {}\n","import { Type } from '@angular/core';\nimport { TableItemComponent } from '@sofico-framework/ui-kit/components/table-list-item';\nimport { SortingOrderConfig } from '@sofico-framework/utils';\n\n/**\n * Configuration/builder to build an table config\n * This object contains configuration regarding initial sorting of an object\n */\nexport class SimpleTableConfig<T> {\n  functionalProps: {\n    id: number;\n    header: string;\n    selector: (entity: T) => any;\n    searchable: boolean;\n    sortable: boolean;\n    plainSort: boolean;\n  }[] = [];\n  initialSorting: SortingOrderConfig<T> = {\n    prop: null\n  };\n  dynamicRowComponent: Type<TableItemComponent<T>> = null;\n  initialSortingFuncPropRef = null;\n  private functionalPropCount = 0;\n\n  setDynamicRowComponent(\n    component: Type<TableItemComponent<T>>\n  ): SimpleTableConfig<T> {\n    this.dynamicRowComponent = component;\n    return this;\n  }\n\n  withNaturalSorting(): SimpleTableConfig<T> {\n    const propToUpdate = this.functionalProps[this.functionalProps.length - 1];\n\n    propToUpdate.sortable = true;\n    propToUpdate.plainSort = false;\n    if (this.initialSortingFuncPropRef) {\n      this.initialSortingFuncPropRef.plainSort = propToUpdate.plainSort;\n    }\n    return this;\n  }\n\n  withPlainSorting(label: string): SimpleTableConfig<T> {\n    const propToUpdate = this.functionalProps[this.functionalProps.length - 1];\n    propToUpdate.sortable = true;\n    propToUpdate.plainSort = true;\n    if (this.initialSortingFuncPropRef) {\n      this.initialSortingFuncPropRef.plainSort = propToUpdate.plainSort;\n    }\n    return this;\n  }\n\n  asInitialSorting(order: 'asc' | 'desc'): SimpleTableConfig<T> {\n    const propToUpdate = this.functionalProps[this.functionalProps.length - 1];\n    this.initialSorting = {\n      prop: propToUpdate.selector,\n      order,\n      plainSort: propToUpdate.plainSort\n    } as SortingOrderConfig<T>;\n    this.initialSortingFuncPropRef = propToUpdate;\n    return this;\n  }\n\n  addFunctionalProp(selector: (entity: T) => any): SimpleTableConfig<T> {\n    this.functionalProps.push({\n      id: this.functionalPropCount,\n      header: '',\n      selector,\n      searchable: false,\n      sortable: false,\n      plainSort: false\n    });\n    this.functionalPropCount++;\n    return this;\n  }\n\n  setHeader(header: string): SimpleTableConfig<T> {\n    const propToUpdate = this.functionalProps[this.functionalProps.length - 1];\n    propToUpdate.header = header;\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SimpleTableConfig } from '../classes/simple-table-config.class';\n\n/**\n * We use this builder to create an tableConfig\n * ```typescript\n *\n * builder.createConfig().withFunctionalProp(...)\n *\n * ```\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimpleTableConfigBuilder<T> {\n  createConfig(): SimpleTableConfig<T> {\n    return new SimpleTableConfig<T>();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}