{"version":3,"file":"sofico-framework-ui-kit-directives-focus.js","sources":["../../../../projects/sofico-framework/ui-kit/directives/focus/focus.token.ts","../../../../projects/sofico-framework/ui-kit/directives/focus/focus.directive.ts","../../../../projects/sofico-framework/ui-kit/directives/focus/focus.module.ts","../../../../projects/sofico-framework/ui-kit/directives/focus/sofico-framework-ui-kit-directives-focus.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { OnSofFocus } from './focus.interface';\n\nexport const SOF_FOCUS_COMPONENT = new InjectionToken<OnSofFocus>(\n  'SOF_FOCUS_COMPONENT'\n);\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Changes, takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport { Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, startWith, takeUntil } from 'rxjs/operators';\nimport { OnSofFocus } from './focus.interface';\nimport { SOF_FOCUS_COMPONENT } from './focus.token';\n\n@UntilDestroy()\n@Directive({\n  selector: '[sofFocus]'\n})\nexport class FocusDirective implements AfterViewInit, OnChanges, OnDestroy {\n  @Input() sofFocus;\n  @Changes('sofFocus') sofFocus$: Observable<boolean>;\n  private combined$: Observable<boolean>;\n  private done$ = new Subject();\n\n  constructor(\n    @Optional()\n    @Inject(SOF_FOCUS_COMPONENT)\n    private component: OnSofFocus | null,\n    private elementRef: ElementRef\n  ) {}\n\n  ngOnChanges(): void {}\n\n  ngOnDestroy(): void {}\n\n  ngAfterViewInit(): void {\n    this.combined$ = this.getCombined$();\n    this.combined$.pipe(takeUntilDestroy(this)).subscribe(sofFocus => {\n      this.setFocus(sofFocus);\n    });\n  }\n\n  private getCombined$(): Observable<boolean> {\n    return this.sofFocus$.pipe(\n      startWith(this.sofFocus),\n      distinctUntilChanged(),\n      takeUntil(this.done$)\n    );\n  }\n\n  private setFocus(sofFocus: boolean): void {\n    if (['', true].includes(sofFocus)) {\n      this.done$.next();\n      setTimeout(() => {\n        if (this.component) {\n          this.component.sofFocus();\n        } else {\n          this.elementRef.nativeElement.focus();\n        }\n      }, 0);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FocusDirective } from './focus.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FocusDirective],\n  exports: [FocusDirective]\n})\nexport class FocusModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;MAGa,mBAAmB,GAAG,IAAI,cAAc,CACnD,qBAAqB;;ICgBV,cAAc,SAAd,cAAc;IAMzB,YAGU,SAA4B,EAC5B,UAAsB;QADtB,cAAS,GAAT,SAAS,CAAmB;QAC5B,eAAU,GAAV,UAAU,CAAY;QANxB,UAAK,GAAG,IAAI,OAAO,EAAE,CAAC;KAO1B;IAEJ,WAAW,MAAW;IAEtB,WAAW,MAAW;IAEtB,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ;YAC5D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SACzB,CAAC,CAAC;KACJ;IAEO,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxB,oBAAoB,EAAE,EACtB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CACtB,CAAC;KACH;IAEO,QAAQ,CAAC,QAAiB;QAChC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACjC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,UAAU,CAAC;gBACT,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;iBAC3B;qBAAM;oBACL,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;iBACvC;aACF,EAAE,CAAC,CAAC,CAAC;SACP;KACF;EACF;;YA/CA,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;aACvB;;;4CAQI,QAAQ,YACR,MAAM,SAAC,mBAAmB;YAzB7B,UAAU;;;uBAkBT,KAAK;;AACe;IAApB,OAAO,CAAC,UAAU,CAAC;iDAAgC;AAFzC,cAAc;IAJ1B,YAAY,EAAE;GAIF,cAAc,CA4C1B;;MCvDY,WAAW;;;YALvB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,cAAc,CAAC;gBAC9B,OAAO,EAAE,CAAC,cAAc,CAAC;aAC1B;;;ACRD;;;;;;"}