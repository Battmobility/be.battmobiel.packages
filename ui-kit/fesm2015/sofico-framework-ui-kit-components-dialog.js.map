{"version":3,"file":"sofico-framework-ui-kit-components-dialog.js","sources":["../../../../projects/sofico-framework/ui-kit/components/dialog/services/dialog-config.service.ts","../../../../projects/sofico-framework/ui-kit/components/dialog/dialog.component.ts","../../../../projects/sofico-framework/ui-kit/components/dialog/acknowledge-dialog.component.ts","../../../../projects/sofico-framework/ui-kit/components/dialog/confirm-dialog.component.ts","../../../../projects/sofico-framework/ui-kit/components/dialog/dialog-inner.component.ts","../../../../projects/sofico-framework/ui-kit/components/dialog/interactive-warning-dialog.component.ts","../../../../projects/sofico-framework/ui-kit/components/dialog/services/dialog.service.ts","../../../../projects/sofico-framework/ui-kit/components/dialog/dialog.module.ts","../../../../projects/sofico-framework/ui-kit/components/dialog/sofico-framework-ui-kit-components-dialog.ts"],"sourcesContent":["import { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogConfigService {\n  positionStrategy = this.overlay\n    .position()\n    .global()\n    .centerHorizontally()\n    .centerVertically();\n  overlayConfig: OverlayConfig = {\n    maxHeight: 'auto',\n    height: 'auto',\n    width: '600px',\n    hasBackdrop: true,\n    scrollStrategy: this.overlay.scrollStrategies.block(),\n    positionStrategy: this.positionStrategy\n  };\n\n  constructor(private overlay: Overlay) {}\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { DialogConfigService } from './services/dialog-config.service';\n\n/**\n * This component is the inline template way of working with dialogs. This means it can be\n * consumed by the `sof-dialog` selector.\n * It has a placeholder for the body called `sof-dialog-body` and a placeholder\n * for the footer called `sof-dialog-footer`\n */\n@Component({\n  selector: 'sof-dialog',\n  template: `\n    <ng-template cdkPortal>\n      <sof-dialog-inner\n        [icon]=\"icon\"\n        [sizeHeaderIcon]=\"sizeHeaderIcon\"\n        (destroy)=\"destroy.emit()\"\n        [headerLabel]=\"headerLabel\"\n        [hideDestroy]=\"hideDestroy\"\n      >\n        <ng-content sof-dialog-body select=\"[sof-dialog-body]\"></ng-content>\n        <ng-content sof-dialog-footer select=\"[sof-dialog-footer]\"></ng-content>\n      </sof-dialog-inner>\n    </ng-template>\n  `,\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(CdkPortal) portal;\n  /**\n   * The label that is shown in the header.\n   * For consistency reasons we only want plain text in here rather than html\n   */\n  @Input() headerLabel: string;\n\n  /**\n   * The size of the dialog.\n   * Can be sm - md - lg - xl.\n   * sm by default\n   */\n  @Input() size: 'sm' | 'md' | 'lg' | 'xl' = 'sm';\n\n  /**\n   * The size of the dialog header icon.\n   * 16 by default\n   */\n  @Input() sizeHeaderIcon:\n    | '8'\n    | '12'\n    | '16'\n    | '20'\n    | '24'\n    | '28'\n    | '32'\n    | '48' = '16';\n\n  /**\n   * The icon in the header of the dialog.\n   */\n  @Input() icon: string;\n\n  /**\n   * Hide the cross in the right top corner that emits on the destroy output\n   * False by default\n   */\n  @Input() hideDestroy: boolean;\n\n  /**\n   * Output that is triggered when the close icon is clicked\n   */\n  @Output() destroy = new EventEmitter();\n\n  overlayRef: OverlayRef;\n\n  constructor(\n    private overlay: Overlay,\n    private dialogConfigService: DialogConfigService\n  ) {}\n\n  ngOnInit(): void {\n    switch (this.size) {\n      case 'sm':\n        this.dialogConfigService.overlayConfig.width = '600px';\n        break;\n      case 'md':\n        this.dialogConfigService.overlayConfig.width = '800px';\n        break;\n      case 'lg':\n        this.dialogConfigService.overlayConfig.width = '1000px';\n        break;\n      case 'xl':\n        this.dialogConfigService.overlayConfig.width = '1200px';\n        break;\n      default:\n        this.dialogConfigService.overlayConfig.width = '600px';\n    }\n\n    this.overlayRef = this.overlay.create(\n      this.dialogConfigService.overlayConfig\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.overlayRef.attach(this.portal);\n  }\n\n  ngOnDestroy(): void {\n    this.overlayRef.detach();\n    this.overlayRef.dispose();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  Acting,\n  ActingErrorMessage,\n  ActingErrorMessages\n} from '@sofico-framework/utils';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'sof-acknowledge-dialog',\n  template: `\n    <sof-dialog-inner\n      (destroy)=\"acknowledge.emit()\"\n      [headerLabel]=\"\n        disableHeaderLabelTranslation\n          ? headerLabel\n          : (tc + '.' + headerLabel | translate)\n      \"\n    >\n      <div sof-dialog-body>\n        <div *ngFor=\"let error of actingErrorMessages$ | async\" class=\"mb-3\">\n          <sof-alert type=\"danger\">\n            {{\n              error?.translation\n                ? error?.translation\n                : (tc + '.' + error?.message | translate: error?.messageParams)\n            }}\n          </sof-alert>\n        </div>\n        {{\n          disableBodyLabelTranslation\n            ? bodyLabel\n            : (tc + '.' + bodyLabel | translate)\n        }}\n      </div>\n      <div sof-dialog-footer class=\"button-wrapper\">\n        <button\n          sofButton\n          sofFocus\n          class=\"btn btn-primary btn-min-width order-1\"\n          [loading]=\"acting$ | async\"\n          [disabled]=\"acting$ | async\"\n          (click)=\"acknowledge.emit()\"\n        >\n          {{ tc + '.' + acknowledgeLabel | translate }}\n        </button>\n      </div>\n    </sof-dialog-inner>\n  `,\n  styleUrls: ['./acknowledge-dialog.component.scss']\n})\nexport class AcknowledgeDialogComponent {\n  @Input() headerLabel: string;\n  @Input() acknowledgeLabel: string;\n  @Input() tc: string;\n  @Input() bodyLabel: string;\n  @Input() disableHeaderLabelTranslation: boolean;\n  @Input() disableBodyLabelTranslation: boolean;\n\n  @Output() acknowledge = new EventEmitter();\n\n  @Acting() acting$: Observable<boolean>;\n  @ActingErrorMessages() actingErrorMessages$: Observable<ActingErrorMessage[]>;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  Acting,\n  ActingErrorMessage,\n  ActingErrorMessages\n} from '@sofico-framework/utils';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'sof-confirm-dialog',\n  template: `\n    <sof-dialog-inner\n      (destroy)=\"decline.emit()\"\n      [headerLabel]=\"tc + '.' + headerLabel | translate: labelParams\"\n    >\n      <div sof-dialog-body>\n        <div *ngFor=\"let error of actingErrorMessages$ | async\" class=\"mb-3\">\n          <sof-alert type=\"danger\">\n            {{\n              error?.translation\n                ? error?.translation\n                : (tc + '.' + error?.message | translate: error?.messageParams)\n            }}\n          </sof-alert>\n        </div>\n        {{ tc + '.' + bodyLabel | translate: labelParams }}\n      </div>\n      <div sof-dialog-footer class=\"button-wrapper\">\n        <ng-container *ngIf=\"primaryAction === 'confirm'; else otherAction\">\n          <button\n            sofButton\n            sofFocus\n            class=\"btn btn-primary btn-min-width order-1\"\n            (click)=\"confirm.emit()\"\n            [loading]=\"!disableActing && (acting$ | async)\"\n            [disabled]=\"!disableActing && (acting$ | async)\"\n          >\n            {{ tc + '.' + confirmLabel | translate }}\n          </button>\n          <button\n            sofButton\n            class=\"btn btn-outline-primary btn-min-width mr-2 order-0\"\n            (click)=\"decline.emit()\"\n            [disabled]=\"!disableActing && (acting$ | async)\"\n          >\n            {{ tc + '.' + cancelLabel | translate }}\n          </button>\n        </ng-container>\n        <ng-template #otherAction>\n          <button\n            sofButton\n            sofFocus\n            class=\"btn btn-primary btn-min-width order-1\"\n            (click)=\"decline.emit()\"\n            [disabled]=\"acting$ | async\"\n          >\n            {{ tc + '.' + cancelLabel | translate }}\n          </button>\n          <button\n            sofButton\n            class=\"btn btn-outline-primary btn-min-width mr-2 order-0\"\n            (click)=\"confirm.emit()\"\n            [loading]=\"!disableActing && (acting$ | async)\"\n            [disabled]=\"!disableActing && (acting$ | async)\"\n          >\n            {{ tc + '.' + confirmLabel | translate }}\n          </button>\n        </ng-template>\n      </div>\n    </sof-dialog-inner>\n  `,\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent {\n  @Input() headerLabel: string;\n  @Input() cancelLabel: string;\n  @Input() confirmLabel: string;\n  @Input() disableActing: boolean;\n  @Input() tc: string;\n  @Input() bodyLabel: string;\n  @Input() primaryAction: 'confirm' | 'cancel';\n  @Input() labelParams: { [key: string]: string };\n\n  @Output() decline = new EventEmitter();\n  @Output() confirm = new EventEmitter();\n\n  @Acting() acting$: Observable<boolean>;\n  @ActingErrorMessages() actingErrorMessages$: Observable<ActingErrorMessage[]>;\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { DocumentRefService } from '@sofico-framework/utils';\nimport { takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-dialog-inner',\n  template: `\n    <div class=\"sof-dialog-inner-wrapper\" cdkTrapFocus cdkTrapFocusAutoCapture>\n      <div\n        class=\"sof-dialog-inner-wrapper-header\"\n        *ngIf=\"headerLabel || !hideDestroy\"\n      >\n        <div class=\"d-flex flex-row\">\n          <sof-svg-icon\n            [icon]=\"icon\"\n            [size]=\"sizeHeaderIcon\"\n            *ngIf=\"icon\"\n            class=\"d-flex mr-3 my-auto\"\n          ></sof-svg-icon>\n          <h1>{{ headerLabel }}</h1>\n        </div>\n        <button class=\"btn btn-plain\" (click)=\"destroy.emit()\" #closeButton>\n          <sof-svg-icon *ngIf=\"!hideDestroy\" icon=\"icon-cross\"></sof-svg-icon>\n        </button>\n      </div>\n      <div\n        class=\"sof-dialog-inner-wrapper-body\"\n        [class.padding-top]=\"!(headerLabel || !hideDestroy)\"\n        [class.padding-bottom]=\"footer?.childNodes?.length === 0\"\n      >\n        <ng-content select=\"[sof-dialog-body]\"></ng-content>\n      </div>\n      <div\n        [class.sof-dialog-inner-wrapper-footer]=\"footer?.childNodes?.length > 0\"\n        #footer\n      >\n        <ng-content select=\"[sof-dialog-footer]\"></ng-content>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./dialog-inner.component.scss']\n})\n/*\n * For more info on the cdkTrapFocus cdkTrapFocusAutoCapture used: https://material.angular.io/cdk/a11y/overview\n * It traps the tab-able focus of the dialog to only whats in the dialog,\n * and makes sure that upon opening it the focus is set within the dialog.\n */\nexport class DialogInnerComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() headerLabel: string;\n  @Input() hideDestroy: boolean;\n  @Input() icon: string;\n  @Input() sizeHeaderIcon:\n    | '8'\n    | '12'\n    | '16'\n    | '20'\n    | '24'\n    | '28'\n    | '32'\n    | '48' = '16';\n\n  @Output() destroy = new EventEmitter();\n  @ViewChild('closeButton') closeButtonRef: ElementRef;\n\n  constructor(private documentRefService: DocumentRefService) {}\n\n  ngOnInit(): void {\n    fromEvent(this.documentRefService.nativeDocument, 'keydown')\n      .pipe(\n        filter((event: KeyboardEvent) => event.key === 'Escape'),\n        takeUntilDestroy(this)\n      )\n      .subscribe(() => {\n        if (!this.hideDestroy) {\n          this.destroy.emit();\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // We don't want the close button focused when opening a dialog.\n    // So we remove the focus from the close button after it was been focused by the cdkTrapFocusAutoCapture directive.\n    // In order to guarantee the order in which these are executed the setTimeout is added.\n    setTimeout(() => this.closeButtonRef?.nativeElement?.blur(), 0);\n  }\n\n  ngOnDestroy(): void {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  Acting,\n  ActingErrorMessage,\n  ActingErrorMessages\n} from '@sofico-framework/utils';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'sof-interactive-warning-dialog',\n  template: `\n    <sof-dialog-inner\n      (destroy)=\"decline.emit()\"\n      [headerLabel]=\"tc + '.INTERACTIVE-WARNING-HEADER' | translate\"\n    >\n      <div sof-dialog-body>\n        <div class=\"mb-3\" *ngFor=\"let error of actingErrorMessages$ | async\">\n          <sof-alert type=\"danger\">\n            {{\n              error?.translation\n                ? error?.translation\n                : (tc + '.' + error?.message | translate: error?.messageParams)\n            }}\n          </sof-alert>\n        </div>\n        {{ tc + '.INTERACTIVE-WARNING-BODY' | translate }}\n        <ul>\n          <li *ngFor=\"let error of errors\">{{ error }}</li>\n        </ul>\n      </div>\n      <div\n        sof-dialog-footer\n        class=\"d-flex justify-content-end align-items-center\"\n      >\n        <button\n          sofButton\n          sofFocus\n          class=\"btn btn-primary btn-min-width order-1\"\n          (click)=\"confirm.emit()\"\n          [loading]=\"acting$ | async\"\n          [disabled]=\"acting$ | async\"\n        >\n          {{ tc + '.CONTINUE' | translate }}\n        </button>\n        <button\n          sofButton\n          class=\"btn btn-outline-primary btn-min-width mr-2 order-0\"\n          (click)=\"decline.emit()\"\n          [disabled]=\"acting$ | async\"\n        >\n          {{ tc + '.CANCEL' | translate }}\n        </button>\n      </div>\n    </sof-dialog-inner>\n  `,\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class InteractiveWarningDialogComponent {\n  @Input() errors: string[];\n  @Input() tc: string;\n  @Input() bodyLabel: string;\n  @Output() decline = new EventEmitter();\n  @Output() confirm = new EventEmitter();\n\n  @Acting() acting$: Observable<boolean>;\n  @ActingErrorMessages() actingErrorMessages$: Observable<ActingErrorMessage[]>;\n}\n","import { Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { merge, Observable, of } from 'rxjs';\nimport { catchError, filter, finalize, share, switchMap } from 'rxjs/operators';\nimport { AcknowledgeDialogComponent } from '../acknowledge-dialog.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog.component';\nimport { InteractiveWarningDialogComponent } from '../interactive-warning-dialog.component';\nimport { DialogConfigService } from './dialog-config.service';\n\n// providedIn: root, can't be used as the entryComponents registered inside the dialogService might be inside a lazy loaded module\n// this has consequence that the DialogService will never be able to find a ConfirmDialogComponent as they live in a different injector,\n// the solution is to provide the service inside the DialogService\n\n// NOTE: When you make use of DialogService don't forget to import DialogModule in your *.module.ts file\n@Injectable()\nexport class DialogService {\n  constructor(\n    private injector: Injector,\n    private overlay: Overlay,\n    private dialogConfigService: DialogConfigService\n  ) {}\n\n  handleInteractiveFlow<T>(\n    initial$: Observable<T>,\n    postApproval$: Observable<T>,\n    tc: string\n  ): Observable<T> {\n    const initialRequest$ = initial$.pipe(\n      catchError(error => of(error)),\n      share()\n    );\n    const intialResponse$ = initialRequest$.pipe(\n      filter(v => !(v instanceof HttpErrorResponse))\n    );\n    const interactiveApprovalResponse$ = initialRequest$.pipe(\n      filter(\n        error =>\n          error instanceof HttpErrorResponse &&\n          error?.error?.isInteractiveWarning\n      ),\n      switchMap(error => {\n        const modal = this.openInteractiveWarning(tc, error);\n        return modal.confirm$.pipe(\n          switchMap(() => postApproval$),\n          finalize(() => modal.destroy())\n        );\n      })\n    );\n\n    return merge(intialResponse$, interactiveApprovalResponse$);\n  }\n\n  openInteractiveWarning(\n    tc: string,\n    error: HttpErrorResponse\n  ): {\n    confirm$: Observable<any>;\n    decline$: Observable<any>;\n    destroy: () => any;\n  } {\n    const containerPortal = new ComponentPortal(\n      InteractiveWarningDialogComponent,\n      null,\n      this.injector\n    );\n    const overlayRef = this.overlay.create(\n      this.dialogConfigService.overlayConfig\n    );\n    const componentRef = overlayRef.attach(containerPortal);\n    componentRef.instance.tc = tc;\n    componentRef.instance.errors = error?.error?.message\n      ? [error?.error?.message?.translation]\n      : error?.error?.messages.map(v => v?.translation);\n    componentRef.instance.decline.subscribe(() => {\n      overlayRef.detach();\n      overlayRef.dispose();\n    });\n    return {\n      confirm$: componentRef.instance.confirm.asObservable(),\n      decline$: componentRef.instance.decline.asObservable(),\n      destroy: () => {\n        overlayRef.detach();\n        overlayRef.dispose();\n      }\n    };\n  }\n\n  openConfirmModal(\n    tc: string,\n    headerLabel: string,\n    bodyLabel: string,\n    cancelLabel: string,\n    confirmLabel: string,\n    primaryAction: 'confirm' | 'cancel' = 'confirm',\n    labelParams: { [key: string]: string } = {},\n    disableActing = false\n  ): {\n    confirm$: Observable<any>;\n    decline$: Observable<any>;\n    destroy: () => any;\n  } {\n    const containerPortal = new ComponentPortal(\n      ConfirmDialogComponent,\n      null,\n      this.injector\n    );\n    const overlayRef = this.overlay.create(\n      this.dialogConfigService.overlayConfig\n    );\n    const componentRef = overlayRef.attach(containerPortal);\n    componentRef.instance.tc = tc;\n    componentRef.instance.headerLabel = headerLabel;\n    componentRef.instance.bodyLabel = bodyLabel;\n    componentRef.instance.cancelLabel = cancelLabel;\n    componentRef.instance.confirmLabel = confirmLabel;\n    componentRef.instance.primaryAction = primaryAction;\n    componentRef.instance.labelParams = labelParams;\n    componentRef.instance.disableActing = disableActing;\n\n    componentRef.instance.decline.subscribe(() => {\n      overlayRef.detach();\n      overlayRef.dispose();\n    });\n    return {\n      confirm$: componentRef.instance.confirm.asObservable(),\n      decline$: componentRef.instance.decline.asObservable(),\n      destroy: () => {\n        overlayRef.detach();\n        overlayRef.dispose();\n      }\n    };\n  }\n\n  openAcknowledgeModal(\n    tc: string,\n    headerLabel: string,\n    bodyLabel: string,\n    acknowledgeLabel: string,\n    disableHeaderLabelTranslation = false,\n    disableBodyLabelTranslation = false\n  ): {\n    acknowledge$: Observable<any>;\n    destroy: () => any;\n  } {\n    const containerPortal = new ComponentPortal(\n      AcknowledgeDialogComponent,\n      null,\n      this.injector\n    );\n    const overlayRef = this.overlay.create(\n      this.dialogConfigService.overlayConfig\n    );\n    const componentRef = overlayRef.attach(containerPortal);\n    componentRef.instance.tc = tc;\n    componentRef.instance.headerLabel = headerLabel;\n    componentRef.instance.bodyLabel = bodyLabel;\n    componentRef.instance.disableHeaderLabelTranslation = disableHeaderLabelTranslation;\n    componentRef.instance.disableBodyLabelTranslation = disableBodyLabelTranslation;\n    componentRef.instance.acknowledgeLabel = acknowledgeLabel;\n\n    componentRef.instance.acknowledge.subscribe(() => {\n      overlayRef.detach();\n      overlayRef.dispose();\n    });\n    return {\n      acknowledge$: componentRef.instance.acknowledge.asObservable(),\n      destroy: () => {\n        overlayRef.detach();\n        overlayRef.dispose();\n      }\n    };\n  }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AlertModule } from '@sofico-framework/ui-kit/components/alert';\nimport { ButtonModule } from '@sofico-framework/ui-kit/components/button';\nimport { SvgIconModule } from '@sofico-framework/ui-kit/components/svg-icon';\nimport { FocusModule } from '@sofico-framework/ui-kit/directives/focus';\nimport { AcknowledgeDialogComponent } from './acknowledge-dialog.component';\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\nimport { DialogInnerComponent } from './dialog-inner.component';\nimport { DialogComponent } from './dialog.component';\nimport { InteractiveWarningDialogComponent } from './interactive-warning-dialog.component';\nimport { DialogService } from './services/dialog.service';\n\n@NgModule({\n  declarations: [\n    DialogComponent,\n    DialogInnerComponent,\n    ConfirmDialogComponent,\n    AcknowledgeDialogComponent,\n    InteractiveWarningDialogComponent\n  ],\n  exports: [\n    DialogComponent,\n    DialogInnerComponent,\n    ConfirmDialogComponent,\n    AcknowledgeDialogComponent,\n    InteractiveWarningDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    PortalModule,\n    OverlayModule,\n    SvgIconModule,\n    TranslateModule,\n    ButtonModule,\n    AlertModule,\n    A11yModule,\n    FocusModule\n  ],\n  providers: [DialogService]\n})\nexport class DialogModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}