{"version":3,"file":"sofico-framework-ui-kit-components-input-file.js","sources":["../../../../projects/sofico-framework/ui-kit/components/input-file/input-file.component.ts","../../../../projects/sofico-framework/ui-kit/components/input-file/input-file.module.ts","../../../../projects/sofico-framework/ui-kit/components/input-file/sofico-framework-ui-kit-components-input-file.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { FormComponent } from '@sofico-framework/ui-kit/components/form';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\nimport { takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport { EMPTY, fromEvent, merge, Observable, timer } from 'rxjs';\nimport {\n  debounce,\n  distinctUntilChanged,\n  filter,\n  map,\n  mapTo,\n  tap\n} from 'rxjs/operators';\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-input-file',\n  template: `\n    <div #dropArea class=\"input-group\" [class.highlight]=\"highlight$ | async\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        [value]=\"\n          internalValue?.length === 1\n            ? internalValue[0]?.name\n            : internalValue?.length > 1\n            ? (tc + '.FILES-SELECTED-COUNT'\n              | translate: { count: internalValue?.length })\n            : this.multiple\n            ? (tc + '.NO-FILES-SELECTED' | translate)\n            : (tc + '.NO-FILE-SELECTED' | translate)\n        \"\n        [attr.id]=\"labelForId\"\n        [readOnly]=\"true\"\n        [class.is-invalid]=\"\n          invalid ||\n          (ngControl?.invalid && (ngControl?.touched || form?.submitted))\n        \"\n        [placeholder]=\"placeholder\"\n        (blur)=\"onTouch()\"\n        (click)=\"lockOutOnTouch(); fileInput.click()\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          #btnElement\n          type=\"button\"\n          class=\"btn btn-action\"\n          [disabled]=\"isDisabled\"\n          [class.is-invalid]=\"\n            invalid ||\n            (ngControl?.invalid && (ngControl?.touched || form?.submitted))\n          \"\n          (blur)=\"onTouch()\"\n          (click)=\"lockOutOnTouch(); fileInput.click()\"\n        >\n          <sof-svg-icon icon=\"icon-folder\"></sof-svg-icon>\n        </button>\n      </div>\n    </div>\n    <input\n      #fileInput\n      type=\"file\"\n      class=\"d-none\"\n      [attr.multiple]=\"multiple\"\n      [attr.accept]=\"acceptedMimeTypes\"\n      [disabled]=\"isDisabled\"\n      (input)=\"onChange($event.target?.files)\"\n    />\n  `,\n  styleUrls: ['./input-file.component.scss'],\n  providers: [{ provide: SOF_FOCUS_COMPONENT, useExisting: InputFileComponent }]\n})\nexport class InputFileComponent\n  implements\n    ControlValueAccessor,\n    OnInit,\n    AfterViewInit,\n    OnDestroy,\n    OnSofFocus {\n  /**\n   * Translation context\n   */\n  @Input() tc: string;\n\n  /**\n   * The id of the input to connect to a label tag.\n   */\n  @Input() labelForId: string;\n\n  /**\n   * The placeholder of the input.\n   */\n  @Input() placeholder = '';\n\n  /**\n   *  Determines if the input is disabled.\n   */\n  @Input() isDisabled: boolean;\n\n  /**\n   * Determines whether the input is in a valid state.\n   */\n  @Input() invalid: boolean;\n\n  /**\n   * Allow the dropping file(s).\n   */\n  @Input() droppable: boolean;\n\n  /**\n   * Allow the selection of more than one file.\n   */\n  @Input() multiple: boolean;\n\n  /**\n   * Allowed file types.\n   */\n  @Input() acceptedMimeTypes: string[] = [\n    'application/pdf',\n    'image/jpeg',\n    'image/x-png'\n  ];\n\n  /**\n   * Determines the value of the control.\n   */\n  @Input() set value(value: FileList) {\n    this.writeValue(value);\n  }\n\n  /**\n   * EventEmitter that will emit the value when changed.\n   */\n  @Output() changeValue = new EventEmitter<FileList>();\n\n  /**\n   * EventEmitter that will emit when control is touched.\n   */\n  @Output() touch = new EventEmitter<any>();\n\n  @ViewChild('dropArea', { static: true })\n  dropArea: ElementRef;\n  @ViewChild('btnElement') btnElement: ElementRef;\n\n  internalValue: FileList = null;\n  propagateChange: any;\n  propagateTouch: any;\n  dropAreaDropEvent$: Observable<DragEvent>;\n  dropAreaDragEnterEvent$: Observable<DragEvent>;\n  dropAreaDragOverEvent$: Observable<DragEvent>;\n  dropAreaDragLeaveEvent$: Observable<DragEvent>;\n  highlight$: Observable<boolean>;\n  droppedFiles$: Observable<FileList>;\n  private flagPositiveClick: boolean;\n\n  constructor(\n    @Optional() public form: FormComponent,\n    @Optional() @Host() public ngControl: NgControl\n  ) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  sofFocus(): void {\n    this.btnElement.nativeElement.focus();\n  }\n\n  ngOnInit(): void {\n    this.dropAreaDropEvent$ = this.getDropEvent$(\n      this.dropArea.nativeElement,\n      'drop'\n    );\n    this.dropAreaDragEnterEvent$ = this.getDropEvent$(\n      this.dropArea.nativeElement,\n      'dragenter'\n    );\n    this.dropAreaDragOverEvent$ = this.getDropEvent$(\n      this.dropArea.nativeElement,\n      'dragover'\n    );\n    this.dropAreaDragLeaveEvent$ = this.getDropEvent$(\n      this.dropArea.nativeElement,\n      'dragleave'\n    );\n\n    this.highlight$ = this.getHighlight$();\n\n    this.droppedFiles$ = this.getDroppedFiles$();\n  }\n\n  ngAfterViewInit(): void {\n    this.droppedFiles$.pipe(takeUntilDestroy(this)).subscribe(fileList => {\n      this.onChange(fileList);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.ngControl?.valueAccessor) {\n      // Every time a control is re-created the previous writeValue reference(s) is not cleaned up.\n      // So, over time, a lot of these references can be built up. This memory leak is a bug in Angular's implementation of ControlValueAccessor.\n      // We hide that problem by assigning an empty function to writeValue every time we destroy the control.\n      // An detailed explanation of the problem can be found here: https://github.com/angular/angular/pull/29335\n      // The bug issue for it: https://github.com/angular/angular/issues/20007\n      this.ngControl.valueAccessor.writeValue = () => {};\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.propagateTouch = fn;\n  }\n\n  writeValue(value: FileList): void {\n    this.internalValue = value ?? null;\n  }\n\n  onChange(value: FileList): void {\n    if (!this.isDisabled && value) {\n      const newInternalValue = value ?? null;\n\n      // emit value\n      this.changeValue.emit(newInternalValue);\n\n      // propagate the change\n      if (this.propagateChange) {\n        this.internalValue = newInternalValue;\n        this.propagateChange(newInternalValue);\n      }\n    }\n  }\n\n  onTouch(): void {\n    if (this.flagPositiveClick) {\n      this.flagPositiveClick = false;\n    } else {\n      this.touch.emit();\n\n      if (!this.isDisabled && this.propagateTouch) {\n        this.propagateTouch();\n      }\n    }\n  }\n\n  setDisabledState(value: boolean): void {\n    this.isDisabled = value;\n  }\n\n  lockOutOnTouch(): void {\n    this.flagPositiveClick = true;\n  }\n\n  private getDroppedFiles$(): Observable<FileList> {\n    return this.dropAreaDropEvent$.pipe(\n      map((e: DragEvent) => e.dataTransfer.files),\n      filter(files => (this.multiple ? files.length > 0 : files.length === 1)),\n      filter(files =>\n        Array.from(files).every(file =>\n          this.acceptedMimeTypes.includes(file.type)\n        )\n      )\n    );\n  }\n\n  private getHighlight$(): Observable<boolean> {\n    return merge(\n      merge(this.dropAreaDragEnterEvent$, this.dropAreaDragOverEvent$).pipe(\n        mapTo(true)\n      ),\n      merge(this.dropAreaDropEvent$, this.dropAreaDragLeaveEvent$).pipe(\n        mapTo(false)\n      )\n    ).pipe(\n      // This delays un-highlighting the drop zone,\n      // first added as a fix to eliminate flickering by dragLeave Events\n      distinctUntilChanged(),\n      debounce(startDevice => (startDevice ? EMPTY : timer(100))),\n      distinctUntilChanged()\n    );\n  }\n\n  private getDropEvent$(\n    elementRef: any,\n    eventName:\n      | 'drag'\n      | 'dragend'\n      | 'dragenter'\n      | 'dragexit'\n      | 'dragleave'\n      | 'dragover'\n      | 'dragstart'\n      | 'drop'\n  ): Observable<DragEvent> {\n    return fromEvent(elementRef, eventName).pipe(\n      tap((e: Event) => {\n        e.preventDefault();\n        e.stopPropagation();\n      })\n    ) as Observable<DragEvent>;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SvgIconModule } from '@sofico-framework/ui-kit/components/svg-icon';\nimport { InputFileComponent } from './input-file.component';\n\n@NgModule({\n  imports: [CommonModule, SvgIconModule, TranslateModule],\n  declarations: [InputFileComponent],\n  exports: [InputFileComponent]\n})\nexport class InputFileModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}