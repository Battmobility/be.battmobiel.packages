{"version":3,"file":"sofico-framework-ui-kit-components-editable-chip.js","sources":["../../../../projects/sofico-framework/ui-kit/components/editable-chip/editable-chip.component.ts","../../../../projects/sofico-framework/ui-kit/components/editable-chip/editable-chip.module.ts","../../../../projects/sofico-framework/ui-kit/components/editable-chip/sofico-framework-ui-kit-components-editable-chip.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\n\n@Component({\n  selector: 'sof-editable-chip',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div (click)=\"toggleEdit()\">\n      <div\n        class=\"badge badge-pill d-block\"\n        [class.badge-pill-valid]=\"!wrongFormat\"\n        [class.badge-edit]=\"editMode\"\n        [class.badge-pill-invalid]=\"wrongFormat\"\n      >\n        <div class=\"badge-label\" *ngIf=\"!editMode; else edit\">\n          <span class=\"label-text\">{{ internalLabel }}</span>\n          <sof-svg-icon\n            class=\"ml-1\"\n            icon=\"icon-cross\"\n            size=\"8\"\n            (click)=\"removeChip.emit(internalLabel)\"\n          ></sof-svg-icon>\n        </div>\n        <ng-template #edit>\n          <div\n            #chipEdit\n            class=\"chip-edit\"\n            contenteditable=\"true\"\n            spellcheck=\"false\"\n            (keydown.enter)=\"onSubmit($event)\"\n            (keydown.escape)=\"onCancel()\"\n            (blur)=\"onCancel()\"\n          >\n            {{ internalLabel }}\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./editable-chip.component.scss']\n})\nexport class EditableChipComponent implements OnInit {\n  @Input() set label(label: string) {\n    this.internalLabel = label;\n\n    if (this.internalValidationRegex) {\n      this.wrongFormat = !this.internalLabel.match(\n        this.internalValidationRegex\n      );\n    }\n  }\n  @Input() set validationRegex(regex: RegExp) {\n    this.internalValidationRegex = regex;\n\n    if (this.internalLabel) {\n      this.wrongFormat = !this.internalLabel.match(\n        this.internalValidationRegex\n      );\n    }\n  }\n\n  @Output() editChip = new EventEmitter<string>();\n  @Output() removeChip = new EventEmitter<string>();\n  @Output() invalidChip = new EventEmitter<boolean>();\n\n  internalLabel: string;\n  internalValidationRegex: RegExp;\n  wrongFormat = false;\n\n  @ViewChild('chipEdit') set chipEdit(element: ElementRef<HTMLDivElement>) {\n    if (element) {\n      this.chipEditElement = element;\n      element.nativeElement.focus();\n    }\n  }\n\n  chipEditElement: ElementRef;\n  editMode = false;\n\n  ngOnInit(): void {}\n\n  toggleEdit(): void {\n    this.editMode = true;\n  }\n\n  onSubmit(event: KeyboardEvent): void {\n    const chipValue = this.chipEditElement.nativeElement?.innerText;\n    const matchesRegex = !!chipValue.match(this.internalValidationRegex);\n\n    if (!!chipValue && matchesRegex) {\n      this.editChip.emit(chipValue);\n      this.editMode = false;\n      this.invalidChip.emit(false);\n    } else {\n      this.invalidChip.emit(true);\n    }\n\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  onCancel(): void {\n    this.chipEditElement.nativeElement.innerText = this.label;\n    this.editMode = false;\n    this.invalidChip.emit(false);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SvgIconModule } from '@sofico-framework/ui-kit/components/svg-icon';\nimport { EditableChipComponent } from './editable-chip.component';\n\n@NgModule({\n  declarations: [EditableChipComponent],\n  imports: [CommonModule, SvgIconModule],\n  exports: [EditableChipComponent]\n})\nexport class EditableChipModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;MAiDa,qBAAqB;IAtClC;QA0DY,aAAQ,GAAG,IAAI,YAAY,EAAU,CAAC;QACtC,eAAU,GAAG,IAAI,YAAY,EAAU,CAAC;QACxC,gBAAW,GAAG,IAAI,YAAY,EAAW,CAAC;QAIpD,gBAAW,GAAG,KAAK,CAAC;QAUpB,aAAQ,GAAG,KAAK,CAAC;KA+BlB;IAlEC,IAAa,KAAK,CAAC,KAAa;QAC9B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAChC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAC1C,IAAI,CAAC,uBAAuB,CAC7B,CAAC;SACH;KACF;IACD,IAAa,eAAe,CAAC,KAAa;QACxC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QAErC,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAC1C,IAAI,CAAC,uBAAuB,CAC7B,CAAC;SACH;KACF;IAUD,IAA2B,QAAQ,CAAC,OAAmC;QACrE,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;YAC/B,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC/B;KACF;IAKD,QAAQ,MAAW;IAEnB,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;IAED,QAAQ,CAAC,KAAoB;;QAC3B,MAAM,SAAS,SAAG,IAAI,CAAC,eAAe,CAAC,aAAa,0CAAE,SAAS,CAAC;QAChE,MAAM,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAErE,IAAI,CAAC,CAAC,SAAS,IAAI,YAAY,EAAE;YAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B;QAED,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;;;YAxGF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCT;;aAEF;;;oBAEE,KAAK;8BASL,KAAK;uBAUL,MAAM;yBACN,MAAM;0BACN,MAAM;uBAMN,SAAS,SAAC,UAAU;;;MCnEV,kBAAkB;;;YAL9B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;gBACrC,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;gBACtC,OAAO,EAAE,CAAC,qBAAqB,CAAC;aACjC;;;ACTD;;;;;;"}