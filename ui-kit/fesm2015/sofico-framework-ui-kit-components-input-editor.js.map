{"version":3,"file":"sofico-framework-ui-kit-components-input-editor.js","sources":["../../../../projects/sofico-framework/ui-kit/components/input-editor/input-editor.component.ts","../../../../projects/sofico-framework/ui-kit/components/input-editor/input-editor.module.ts","../../../../projects/sofico-framework/ui-kit/components/input-editor/sofico-framework-ui-kit-components-input-editor.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { FormComponent } from '@sofico-framework/ui-kit/components/form';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\nimport { isNullOrUndefined } from '@sofico-framework/utils';\nimport { takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport Quill from 'quill';\nimport { ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, mergeMap, take } from 'rxjs/operators';\nimport { Converter } from 'showdown';\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-input-editor',\n  styleUrls: ['./input-editor.component.scss'],\n  template: `\n    <div\n      class=\"editor-wrapper\"\n      [class.is-invalid]=\"\n        invalid ||\n        (ngControl?.invalid && (ngControl?.touched || form?.submitted))\n      \"\n    >\n      <div #editorContainer [style.height]=\"height\"></div>\n    </div>\n  `,\n  providers: [\n    { provide: SOF_FOCUS_COMPONENT, useExisting: InputEditorComponent }\n  ]\n})\nexport class InputEditorComponent\n  implements\n    OnInit,\n    AfterViewInit,\n    OnDestroy,\n    ControlValueAccessor,\n    OnSofFocus {\n  private quillAvailableSub$ = new ReplaySubject<boolean>(1);\n  private writeValueSub$ = new ReplaySubject<string>(1);\n\n  private quill: Quill;\n  // Determine when a change must be sent to the consumer.\n  // See onChange() for more information.\n  private skipChange = false;\n\n  /**\n   * Determines the value of the control.\n   */\n  @Input() set value(value: string) {\n    // Known issue: when setting the value manually the cursor of the editor starts at the front again.\n    this.writeValue(value);\n  }\n\n  /**\n   *  Determines if the input is disabled.\n   */\n  @Input() isDisabled: boolean;\n\n  /**\n   * Determines whether the input is in a valid state.\n   */\n  @Input() invalid: boolean;\n\n  /**\n   * Determines the height of the control.\n   */\n  @Input() height = '150px';\n\n  /**\n   * Determines if the in- and output of this formcontrol should be markdown\n   */\n  @Input() markdown = false;\n\n  /**\n   * EventEmitter that will emit the value when changed.\n   */\n  @Output() changeValue = new EventEmitter<any>();\n\n  @ViewChild('editorContainer', { read: ElementRef, static: true })\n  editorContainerViewChild: ElementRef;\n\n  propagateChange: any;\n  propagateTouch: any;\n\n  private markdownConverter = new Converter();\n\n  constructor(\n    @Optional() public form: FormComponent,\n    @Optional() @Host() public ngControl: NgControl\n  ) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  sofFocus(): void {\n    this.editorContainerViewChild.nativeElement\n      .getElementsByClassName('ql-editor')[0]\n      .focus();\n  }\n\n  ngOnDestroy(): void {\n    if (this.ngControl?.valueAccessor) {\n      // Every time a control is re-created the previous writeValue reference(s) is not cleaned up.\n      // So, over time, a lot of these references can be built up. This memory leak is a bug in Angular's implementation of ControlValueAccessor.\n      // We hide that problem by assigning an empty function to writeValue every time we destroy the control.\n      // An detailed explanation of the problem can be found here: https://github.com/angular/angular/pull/29335\n      // The bug issue for it: https://github.com/angular/angular/issues/20007\n      this.ngControl.valueAccessor.writeValue = () => {};\n    }\n  }\n\n  ngOnInit(): void {\n    // Only allow writing of values when quill is defined.\n    // As it's created in ngAfterViewInit it could be that we write the value to early.\n    this.quillAvailableSub$\n      .pipe(\n        take(1),\n        mergeMap(() => this.writeValueSub$.pipe(distinctUntilChanged())),\n        takeUntilDestroy(this)\n      )\n      .subscribe(value => {\n        // We don't want to skip a value when there isn't an initial value set\n        // through writevalue. If we don't do this, the first change in the\n        // editor will be ignored.\n        if (!isNullOrUndefined(value) && value.trim() !== '') {\n          this.skipChange = true;\n        }\n        if (this.markdown) {\n          this.quill.root.innerHTML =\n            this.markdownConverter\n              .makeHtml(value)\n              ?.replace(/\\n/g, '')\n              .replace(/<!-- -->/g, '') ?? '';\n        } else {\n          this.quill.root.innerHTML = value ?? '';\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    let toolbar;\n    if (this.markdown) {\n      toolbar = [\n        [{ header: [1, 2, 3, false] }],\n        ['bold', 'italic'],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        ['link'],\n        ['clean']\n      ];\n    } else {\n      toolbar = [\n        [{ header: [1, 2, 3, false] }],\n        ['bold', 'italic', 'underline', 'strike'],\n        [{ color: [] }, { background: [] }, { align: [] }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        ['link'],\n        ['clean']\n      ];\n    }\n    this.quill = new Quill(this.editorContainerViewChild.nativeElement, {\n      modules: {\n        toolbar\n      },\n      theme: 'snow',\n      readOnly: this.isDisabled // Same as disable or enable.\n    });\n\n    // Required for applications with Ivy enabled, and depending on uikit\n    // https://stackoverflow.com/a/66712723\n    const quillImportAttributorsClassBackground =\n      'attributors/class/background';\n    const quillImportAttributorsClassColor = 'attributors/class/color';\n    const BackgroundClass = Quill.import(quillImportAttributorsClassBackground);\n    const ColorClass = Quill.import(quillImportAttributorsClassColor);\n    Quill.register(BackgroundClass, true);\n    Quill.register(ColorClass, true);\n\n    this.quill.on('text-change', () => {\n      // When writeValue() is called the text-change is triggered.\n      // We don't want to inform the consumer about a change they made them self.\n      if (!this.skipChange) {\n        // Quill editor always has a \"\\n\" when there is no value.\n        // Multiple line breaks can be active, even though there isn't any text.\n        // Therefore replace them all.\n        const text = this.quill.getText()?.replace(/\\n/g, '') ?? '';\n\n        /**\n         * Quill would sometimes create an empty span element with the class\n         * 'ql-cursor'. This is an quill specific thing that it uses internally.\n         * This span has no use to be saved. It also gave problems when\n         * converting to markdown. This piece of code removes these spans.\n         * Found this solution on: https://github.com/quilljs/quill/issues/903\n         */\n        const tempCont = document.createElement('div');\n        const tempEditor = new Quill(tempCont);\n        tempEditor.setContents(this.quill.getContents());\n        const newHtml: string = tempEditor.root.innerHTML;\n\n        this.onChange(text !== '' ? newHtml : '');\n      } else {\n        this.skipChange = false;\n      }\n    });\n\n    // Quill doesn't have a blur event,\n    // so we listen on the internal html tag where the user enters his value.\n    // It's not possible to listen on \"selection-change\" as it triggers not only after the user leaves the control.\n    // https://github.com/quilljs/quill/issues/1680\n    this.quill.root.addEventListener('blur', () => {\n      this.onTouch();\n    });\n\n    this.quillAvailableSub$.next(true);\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.propagateTouch = fn;\n  }\n\n  writeValue(value: string): void {\n    this.writeValueSub$.next(value);\n  }\n\n  onChange(value: string): void {\n    if (!this.isDisabled) {\n      let newInternalValue;\n      if (this.markdown && !isNullOrUndefined(value)) {\n        /**\n         * When translating to markdown the <br> tags don't get translated so\n         * they need to be removed.\n         */\n        newInternalValue = this.markdownConverter\n          .makeMarkdown(value)\n          .replace(/<br>\\n\\n/g, '');\n      } else {\n        newInternalValue = value ?? null;\n      }\n\n      // emit value\n      this.changeValue.emit(newInternalValue);\n\n      // propagate the change\n      if (this.propagateChange) {\n        this.propagateChange(newInternalValue);\n      }\n    }\n  }\n\n  onTouch(): void {\n    if (!this.isDisabled && this.propagateTouch) {\n      this.propagateTouch();\n    }\n  }\n\n  setDisabledState(value: boolean): void {\n    // Quill is set after view init, it's possible it doesnt exist yet.\n    if (this.quill) {\n      this.quill.enable(!value);\n    }\n\n    this.isDisabled = value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { InputEditorComponent } from './input-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [InputEditorComponent],\n  exports: [InputEditorComponent]\n})\nexport class InputEditorModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}