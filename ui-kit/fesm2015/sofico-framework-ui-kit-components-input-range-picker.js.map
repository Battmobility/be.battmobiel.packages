{"version":3,"file":"sofico-framework-ui-kit-components-input-range-picker.js","sources":["../../../../projects/sofico-framework/ui-kit/components/input-range-picker/input-range-picker.component.ts","../../../../projects/sofico-framework/ui-kit/components/input-range-picker/input-range-picker.module.ts","../../../../projects/sofico-framework/ui-kit/components/input-range-picker/sofico-framework-ui-kit-components-input-range-picker.ts"],"sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormComponent } from '@sofico-framework/ui-kit/components/form';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\nimport { DateFormatEnum } from '@sofico-framework/utils';\n\nimport * as _moment from 'moment';\nimport {\n  NzDatePickerSizeType,\n  PresetRanges as PresetRangesNGZorro\n} from 'ng-zorro-antd/date-picker';\nimport { takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PresetRanges } from './types/preset-ranges.type';\n\nconst moment = _moment;\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-input-range-picker',\n  styleUrls: ['./input-range-picker.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <nz-range-picker\n      #inputElement\n      [nzInputReadOnly]=\"inputReadOnly\"\n      [@.disabled]=\"true\"\n      [formControl]=\"internalFormControl\"\n      [nzFormat]=\"dateFormat\"\n      [nzRanges]=\"nzRanges$ | async\"\n      [nzPlaceHolder]=\"placeHolder\"\n      [nzSeparator]=\"separator\"\n      [nzSize]=\"size\"\n      [nzDisabled]=\"isDisabled\"\n      [class.is-invalid]=\"\n        invalid ||\n        (ngControl?.invalid && (ngControl?.touched || form?.submitted))\n      \"\n      (nzOnOpenChange)=\"onTouch($event)\"\n    ></nz-range-picker>\n  `,\n  providers: [\n    { provide: SOF_FOCUS_COMPONENT, useExisting: InputRangePickerComponent }\n  ]\n})\nexport class InputRangePickerComponent\n  implements OnInit, OnDestroy, ControlValueAccessor, OnSofFocus {\n  private tc = '@COMMON';\n\n  // Size of Select input\n  @Input() size: NzDatePickerSizeType = 'large';\n\n  // DateFormat for enum\n  @Input() dateFormat: DateFormatEnum = DateFormatEnum.BIG_ENDIAN_DASH;\n\n  // Do you want to use the default\n  // preset ranges for quick selection\n  @Input() set defaultRange(value: boolean) {\n    if (value) {\n      this.nzRanges$ = this.changePresetRangesToPresetRangesFromNgZorro(\n        this.defaultRanges\n      );\n    }\n  }\n\n  // Custom ranges for quick selection\n  @Input() set customRanges(value: PresetRanges[]) {\n    this.nzRanges$ = this.changePresetRangesToPresetRangesFromNgZorro(value);\n  }\n\n  // Placeholder of date input\n  @Input() placeHolder: string[];\n\n  // Separator\n  @Input() separator = 'â†’';\n\n  /**\n   * The id of the input to connect to a label tag.\n   * currently not supported\n   */\n  @Input() labelForId: string;\n\n  /**\n   *  Determines if the input is disabled.\n   */\n  @Input() isDisabled: boolean;\n\n  /**\n   * Determines whether the input is in a valid state.\n   */\n  @Input() invalid = false;\n\n  /**\n   * EventEmitter that will emit the value when changed.\n   */\n  @Output() changeValue = new EventEmitter<string[]>();\n\n  /**\n   * EventEmitter that will emit when control is touched.\n   */\n  @Output() touch = new EventEmitter<any>();\n\n  @ViewChild('inputElement', { read: ElementRef }) inputElement: ElementRef;\n\n  // Sets the readonly attribute of the input tag (avoids virtual\n  // keyboard on touch devices)\n  // TODO seek a better solution for touch devices\n  inputReadOnly = false;\n\n  internalFormControl = new FormControl(null);\n  propagateChange: any;\n  propagateTouch: any;\n\n  defaultRanges: PresetRanges[] = [\n    {\n      label: 'THIS_WEEK',\n      startDate: moment().startOf('week').toDate(),\n      endDate: moment().endOf('week').toDate()\n    },\n    {\n      label: 'THIS_MONTH',\n      startDate: moment().startOf('month').toDate(),\n      endDate: moment().endOf('month').toDate()\n    },\n    {\n      label: 'THIS_QUARTER',\n      startDate: moment().startOf('quarter').toDate(),\n      endDate: moment().endOf('quarter').toDate()\n    },\n    {\n      label: 'THIS_YEAR',\n      startDate: moment().startOf('year').toDate(),\n      endDate: moment().endOf('year').toDate()\n    }\n  ];\n\n  nzRanges$: Observable<PresetRangesNGZorro>;\n\n  constructor(\n    @Optional() public form: FormComponent,\n    @Optional() @Host() public ngControl: NgControl,\n    private translateService: TranslateService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  sofFocus(): void {\n    this.inputElement.nativeElement.getElementsByTagName('input')[0].focus();\n    this.changeDetectorRef.detectChanges();\n  }\n\n  ngOnInit(): void {\n    this.internalFormControl.valueChanges\n      .pipe(takeUntilDestroy(this))\n      .subscribe(value => {\n        if (!this.isDisabled) {\n          const formatDateArray =\n            value.length !== 0\n              ? [\n                  moment(value[0]).format(\n                    DateFormatEnum.BIG_ENDIAN_DASH.toUpperCase()\n                  ),\n                  moment(value[1]).format(\n                    DateFormatEnum.BIG_ENDIAN_DASH.toUpperCase()\n                  )\n                ]\n              : null;\n          this.changeValue.emit(formatDateArray);\n\n          if (this.propagateChange) {\n            this.propagateChange(formatDateArray);\n          }\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.ngControl?.valueAccessor) {\n      // Every time a control is re-created the previous writeValue reference(s) is not cleaned up.\n      // So, over time, a lot of these references can be built up. This memory leak is a bug in Angular's implementation of ControlValueAccessor.\n      // We hide that problem by assigning an empty function to writeValue every time we destroy the control.\n      // An detailed explanation of the problem can be found here: https://github.com/angular/angular/pull/29335\n      // The bug issue for it: https://github.com/angular/angular/issues/20007\n      this.ngControl.valueAccessor.writeValue = () => {};\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.propagateTouch = fn;\n  }\n\n  writeValue(value: any): void {\n    this.internalFormControl.setValue(value ?? null, { emitEvent: false });\n  }\n\n  onTouch($event: boolean): void {\n    if (!$event) {\n      this.touch.emit();\n      if (!this.isDisabled && this.propagateTouch) {\n        this.propagateTouch();\n      }\n    }\n  }\n\n  private changePresetRangesToPresetRangesFromNgZorro(\n    ranges: PresetRanges[]\n  ): Observable<PresetRangesNGZorro> {\n    const keysForTranslation = ranges.map(x => this.tc + '.' + x.label);\n    return this.translateService.stream(keysForTranslation).pipe(\n      map(obj =>\n        Object.keys(obj).map(key => {\n          const range = ranges.find(r => this.tc + '.' + r.label === key);\n          return {\n            [obj[key]]: [range.startDate, range.endDate]\n          };\n        })\n      ),\n      map(arrayOfRanges => Object.assign({}, ...arrayOfRanges))\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { InputRangePickerComponent } from './input-range-picker.component';\n\n@NgModule({\n  imports: [CommonModule, NzDatePickerModule, FormsModule, ReactiveFormsModule],\n  declarations: [InputRangePickerComponent],\n  exports: [InputRangePickerComponent]\n})\nexport class InputRangePickerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}