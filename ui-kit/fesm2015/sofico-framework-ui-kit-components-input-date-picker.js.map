{"version":3,"file":"sofico-framework-ui-kit-components-input-date-picker.js","sources":["../../../../projects/sofico-framework/ui-kit/components/input-date-picker/input-date-picker.component.ts","../../../../projects/sofico-framework/ui-kit/components/input-date-picker/input-date-picker.module.ts","../../../../projects/sofico-framework/ui-kit/components/input-date-picker/sofico-framework-ui-kit-components-input-date-picker.ts"],"sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\nimport { FormComponent } from '@sofico-framework/ui-kit/components/form';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\nimport { DateFormatEnum } from '@sofico-framework/utils';\n\nimport * as _moment from 'moment';\nimport { Moment } from 'moment';\nimport { NzDatePickerSizeType } from 'ng-zorro-antd/date-picker';\nimport { Changes, takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nconst moment = _moment;\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-input-date-picker',\n  styleUrls: ['./input-date-picker.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <nz-date-picker\n      #inputElement\n      [nzInputReadOnly]=\"inputReadOnly\"\n      [@.disabled]=\"true\"\n      [formControl]=\"internalFormControl\"\n      [nzFormat]=\"dateFormat\"\n      [nzPlaceHolder]=\"placeHolder\"\n      [nzSeparator]=\"separator\"\n      [nzSize]=\"size\"\n      [nzDisabled]=\"isDisabled\"\n      [nzShowToday]=\"showToday\"\n      [nzDisabledDate]=\"disabledDate$ | async\"\n      [class.is-invalid]=\"\n        invalid ||\n        (ngControl?.invalid && (ngControl?.touched || form?.submitted))\n      \"\n      (nzOnOpenChange)=\"onTouch($event)\"\n    ></nz-date-picker>\n  `,\n  providers: [\n    { provide: SOF_FOCUS_COMPONENT, useExisting: InputDatePickerComponent }\n  ]\n})\nexport class InputDatePickerComponent\n  implements OnInit, OnDestroy, OnChanges, ControlValueAccessor, OnSofFocus {\n  // Size of Select input\n  @Input() size: NzDatePickerSizeType = 'large';\n\n  // DateFormat for enum\n  @Input() dateFormat: DateFormatEnum = DateFormatEnum.BIG_ENDIAN_DASH;\n\n  // Placeholder of date input\n  @Input() placeHolder: string;\n\n  // Separator\n  @Input() separator = 'â†’';\n\n  // Show the today button\n  @Input() showToday = false;\n\n  /**\n   * The id of the input to connect to a label tag.\n   * currently not supported\n   */\n  @Input() labelForId: string;\n\n  /**\n   *  Determines if the input is disabled.\n   */\n  @Input() isDisabled: boolean;\n\n  /**\n   * Determines whether the input is in a valid state.\n   */\n  @Input() invalid = false;\n\n  /**\n   * Determines the min date of the control.\n   */\n  @Input() minDate: Date;\n\n  /**\n   * Determines the max date of the control.\n   */\n  @Input() maxDate: Date;\n\n  /**\n   * EventEmitter that will emit the value when changed.\n   */\n  @Output() changeValue = new EventEmitter<Date>();\n\n  /**\n   * EventEmitter that will emit when control is touched.\n   */\n  @Output() touch = new EventEmitter<Date>();\n\n  @Changes('minDate') minDate$: Observable<Date>;\n  @Changes('maxDate') maxDate$: Observable<Date>;\n\n  @ViewChild('inputElement', { read: ElementRef }) inputElement: ElementRef;\n\n  // Sets the readonly attribute of the input tag (avoids virtual\n  // keyboard on touch devices)\n  // TODO seek a better solution for touch devices\n  inputReadOnly = false;\n\n  internalFormControl = new FormControl(null);\n  propagateChange: any;\n  propagateTouch: any;\n  disabledDate$: Observable<(current: Date) => boolean>;\n\n  constructor(\n    @Optional() public form: FormComponent,\n    @Optional() @Host() public ngControl: NgControl,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  sofFocus(): void {\n    this.inputElement.nativeElement.getElementsByTagName('input')[0].focus();\n    this.changeDetectorRef.detectChanges();\n  }\n\n  ngOnInit(): void {\n    this.internalFormControl.valueChanges\n      .pipe(takeUntilDestroy(this))\n      .subscribe(value => {\n        if (!this.isDisabled) {\n          this.changeValue.emit(value);\n\n          if (this.propagateChange) {\n            this.propagateChange(value);\n          }\n        }\n      });\n\n    this.disabledDate$ = combineLatest([\n      this.minDate$.pipe(startWith(null)),\n      this.maxDate$.pipe(startWith(null))\n    ]).pipe(\n      map(([minDate, maxDate]) => this.getNgZorroDisabledDate(minDate, maxDate))\n    );\n  }\n\n  ngOnDestroy(): void {\n    if (this.ngControl?.valueAccessor) {\n      // Every time a control is re-created the previous writeValue reference(s) is not cleaned up.\n      // So, over time, a lot of these references can be built up. This memory leak is a bug in Angular's implementation of ControlValueAccessor.\n      // We hide that problem by assigning an empty function to writeValue every time we destroy the control.\n      // An detailed explanation of the problem can be found here: https://github.com/angular/angular/pull/29335\n      // The bug issue for it: https://github.com/angular/angular/issues/20007\n      this.ngControl.valueAccessor.writeValue = () => {};\n    }\n  }\n\n  ngOnChanges(): void {}\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.propagateTouch = fn;\n  }\n\n  writeValue(value: Date): void {\n    this.internalFormControl.setValue(value, {\n      emitEvent: false\n    });\n  }\n\n  onTouch($event: boolean): void {\n    if (!$event) {\n      this.touch.emit();\n      if (!this.isDisabled && this.propagateTouch) {\n        this.propagateTouch();\n      }\n    }\n  }\n\n  private getNgZorroDisabledDate(\n    minDate: Date,\n    maxDate: Date\n  ): (current: Date) => boolean {\n    if (!minDate && !maxDate) {\n      return () => false;\n    } else if (!minDate && maxDate) {\n      return (current: Date) => moment(current).isAfter(maxDate, 'day');\n    } else if (minDate && !maxDate) {\n      return (current: Date) => moment(current).isBefore(minDate, 'day');\n    } else {\n      return (current: Date) =>\n        !moment(current).isBetween(minDate, maxDate, 'day', '[]');\n    }\n  }\n\n  private formatMomentToDate(date: Moment): Date {\n    return date.toDate();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { InputDatePickerComponent } from './input-date-picker.component';\n\n@NgModule({\n  imports: [CommonModule, NzDatePickerModule, FormsModule, ReactiveFormsModule],\n  declarations: [InputDatePickerComponent],\n  exports: [InputDatePickerComponent]\n})\nexport class InputDatePickerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}