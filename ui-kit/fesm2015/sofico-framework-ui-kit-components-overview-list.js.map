{"version":3,"file":"sofico-framework-ui-kit-components-overview-list.js","sources":["../../../../projects/sofico-framework/ui-kit/components/overview-list/overview-list.component.ts","../../../../projects/sofico-framework/ui-kit/components/overview-list-item/overview-list-item.component.ts","../../../../projects/sofico-framework/ui-kit/components/overview-list-item/overview-list-item.module.ts","../../../../projects/sofico-framework/ui-kit/components/overview-list/overview-list.module.ts","../../../../projects/sofico-framework/ui-kit/components/overview-list/services/overview-list-config-builder.service.ts","../../../../projects/sofico-framework/ui-kit/components/overview-list/sofico-framework-ui-kit-components-overview-list.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OverviewListConfig } from '@sofico-framework/ui-kit/classes';\nimport { OverviewListSearchBarComponent } from '@sofico-framework/ui-kit/components/overview-list-search-bar';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\nimport {\n  GroupDefinition,\n  GroupDefinitionWithIdentifiers\n} from '@sofico-framework/ui-kit/types';\nimport { search, SortingOrderConfig, sortList } from '@sofico-framework/utils';\nimport { takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n  of,\n  ReplaySubject\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  skip,\n  switchMap\n} from 'rxjs/operators';\nimport { OverviewListItemComponent } from '../overview-list-item/overview-list-item.component';\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-overview-list',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container *ngIf=\"config$ | async as config\">\n      <div *ngIf=\"enableSearch || enableSorting\" class=\"row\">\n        <div\n          *ngIf=\"enableSearch\"\n          [ngClass]=\"enableSorting ? 'col-lg-8 col-md-6 col-sm-12' : 'col-12'\"\n        >\n          <sof-overview-list-search-bar\n            #searchBarComponent\n            [tc]=\"tc\"\n            (changeTerm)=\"onChangeTerm($event)\"\n          ></sof-overview-list-search-bar>\n        </div>\n        <div\n          *ngIf=\"enableSorting\"\n          [ngClass]=\"\n            enableSearch\n              ? 'col-lg-4 col-md-6 col-sm-12'\n              : 'col-lg-4 offset-lg-8  col-md-12 col-sm-12'\n          \"\n        >\n          <sof-overview-list-sort-dropdown\n            [tc]=\"tc\"\n            [sorting]=\"sortingSub$ | async\"\n            [overviewListConfig]=\"config\"\n            (changeSorting)=\"onChangeSorting($event)\"\n          ></sof-overview-list-sort-dropdown>\n        </div>\n      </div>\n      <div *ngIf=\"groupDefinitions\" class=\"row\">\n        <sof-overview-list-group-tabs\n          [tc]=\"tc\"\n          class=\"col-lg-12 col-md-12 col-sm-12 mb-3\"\n          [entities]=\"searchedEntities$ | async\"\n          [selectedGroup]=\"selectedGroupSub$ | async\"\n          [groupDefinitions]=\"groupDefinitions\"\n          [groupSelector]=\"groupSelector\"\n          (selectGroup)=\"onChangeGroup($event)\"\n        ></sof-overview-list-group-tabs>\n      </div>\n      <ng-container *ngIf=\"hasFilteredEntities$ | async; else noResults\">\n        <sof-in-view [preloadHeight]=\"500\" (inView)=\"onInView($event)\">\n          <sof-overview-list-item\n            #listComponent\n            *ngFor=\"let entity of filteredEntities$ | async; trackBy: trackByFn\"\n            [entity]=\"entity\"\n            [tc]=\"tc\"\n            [dynamicRowComponent]=\"config?.dynamicRowComponent\"\n          >\n          </sof-overview-list-item>\n        </sof-in-view>\n      </ng-container>\n      <ng-template #noResults>\n        <ng-container *ngIf=\"entities$ | async as entities\">\n          <ng-container *ngIf=\"entities?.length > 0; else noData\">\n            {{ tc + '.' + 'SEARCH-NO-RESULTS' | translate }}\n          </ng-container>\n          <ng-template #noData>\n            {{ tc + '.' + 'SEARCH-NO-DATA' | translate }}\n          </ng-template>\n        </ng-container>\n      </ng-template>\n    </ng-container>\n  `,\n  providers: [\n    { provide: SOF_FOCUS_COMPONENT, useExisting: OverviewListComponent }\n  ]\n})\nexport class OverviewListComponent<T> implements OnInit, OnDestroy, OnSofFocus {\n  /**\n   * The translation context.\n   */\n  @Input() tc: string;\n\n  /**\n   * The overview list config.\n   */\n  @Input() set config(config: OverviewListConfig<T>) {\n    if (config) {\n      this.config$.next(config);\n      this.sortingSub$.next(config.initialSorting);\n      this.searchableSelectors = config.functionalProps\n        .filter(prop => prop.searchable)\n        .map(prop => prop.selector);\n    }\n  }\n\n  /**\n   * The entities we want to render in this list.\n   */\n  @Input() set entities(entities: T[]) {\n    if (entities) {\n      this.entities$.next(entities);\n    }\n  }\n\n  /**\n   * We can pass group definitions to divide the entities into different groups.\n   */\n  @Input() groupDefinitions: GroupDefinition[];\n\n  /**\n   * The amount of items shown in the list.\n   */\n  @Input() thresholdNumberOfItems = 15;\n\n  /**\n   * The selector to determine which entity belongs in which group.\n   */\n  @Input() groupSelector: (T) => string | number;\n\n  /**\n   * Whether the search bar is visible.\n   */\n  @Input() enableSearch = true;\n\n  /**\n   * Whether the sorting dropdown is visible.\n   */\n  @Input() enableSorting = true;\n\n  /**\n   * Whether we define the last tab state through queryParam.\n   */\n  @Input() retainGroupSelection = true;\n\n  @Output() searchedEntities = new EventEmitter<T[]>();\n\n  @ViewChild('searchBarComponent')\n  searchBarComponent: OverviewListSearchBarComponent<T>;\n  @ViewChildren('listComponent') listComponents: QueryList<\n    OverviewListItemComponent<T>\n  >;\n\n  searchableSelectors: ((entity: T) => any)[];\n\n  // source streams\n  entities$ = new ReplaySubject<T[]>(1);\n  config$ = new ReplaySubject<OverviewListConfig<T>>(1);\n  sortingSub$ = new ReplaySubject<SortingOrderConfig<T>>(1);\n  termSub$ = new BehaviorSubject<string>('');\n  private numberOfItemsToDisplaySub$ = new BehaviorSubject<number>(\n    this.thresholdNumberOfItems\n  );\n\n  // intermediate streams\n  searchedEntities$: Observable<T[]>;\n  selectedGroupSub$ = new BehaviorSubject<GroupDefinition>(null);\n  private groupedEntities$: Observable<T[]>;\n  private sortedEntities$: Observable<T[]>;\n\n  // presentations streams\n  filteredEntities$: Observable<T[]>;\n  hasFilteredEntities$: Observable<boolean>;\n\n  trackByFn = i => i;\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {}\n\n  sofFocus(): void {\n    if (this.enableSearch) {\n      this.searchBarComponent.sofFocus();\n    } else {\n      this.listComponents.first?.sofFocus();\n    }\n  }\n\n  ngOnInit(): void {\n    // intermediate streams\n    this.searchedEntities$ = this.getSearchedEntities$();\n    this.groupedEntities$ = this.getGroupedEntities$();\n    this.sortedEntities$ = this.getSortedEntities$();\n\n    this.searchedEntities$\n      .pipe(takeUntilDestroy(this))\n      .subscribe(searchedEntities =>\n        this.searchedEntities.emit(searchedEntities)\n      );\n\n    // presentation streams\n    this.filteredEntities$ = this.sortedEntities$;\n    this.hasFilteredEntities$ = this.getHasFilteredEntities$();\n\n    if (this.groupDefinitions?.length > 0) {\n      const tab = this.activatedRoute.snapshot.queryParamMap.get('tab');\n      if (tab) {\n        this.selectedGroupSub$.next(\n          this.groupDefinitions.find(x => x.id === tab)\n        );\n      } else {\n        this.selectedGroupSub$.next(this.groupDefinitions[0]);\n      }\n    } else {\n      this.selectedGroupSub$.next(null);\n    }\n\n    this.setupQueryParamSubscription();\n  }\n\n  ngOnDestroy(): void {}\n\n  onChangeSorting(sorting: any): void {\n    this.sortingSub$.next(sorting);\n    this.numberOfItemsToDisplaySub$.next(this.thresholdNumberOfItems);\n  }\n\n  onChangeTerm(term: string): void {\n    this.termSub$.next(term);\n    this.numberOfItemsToDisplaySub$.next(this.thresholdNumberOfItems);\n  }\n\n  onChangeGroup(group: any): void {\n    this.selectedGroupSub$.next(group);\n    this.numberOfItemsToDisplaySub$.next(this.thresholdNumberOfItems);\n  }\n\n  onInView(value: boolean): void {\n    if (value) {\n      this.numberOfItemsToDisplaySub$.next(\n        this.numberOfItemsToDisplaySub$.getValue() + this.thresholdNumberOfItems\n      );\n    }\n  }\n\n  private getSearchedEntities$(): Observable<T[]> {\n    return this.entities$.pipe(\n      // we need switchMap and of because the search takes a term observable instead of a term\n      switchMap(results =>\n        this.enableSearch && this.searchableSelectors.length !== 0\n          ? of(results).pipe(search(this.termSub$, this.searchableSelectors))\n          : of(results)\n      ),\n      shareReplay({ refCount: true, bufferSize: 1 })\n    );\n  }\n\n  private getGroupedEntities$(): Observable<T[]> {\n    return combineLatest([this.searchedEntities$, this.selectedGroupSub$]).pipe(\n      map(([items, selectedGroup]) => {\n        if (!selectedGroup) {\n          return items;\n        }\n\n        // todo: Remove 'groupIdentifiers' in next major release.\n        return selectedGroup.hasOwnProperty('groupIdentifiers') ||\n          selectedGroup.hasOwnProperty('groupIdentifiersIncl') ||\n          selectedGroup.hasOwnProperty('groupIdentifiersExcl')\n          ? items?.filter(item => {\n              const selector = this.groupSelector(item);\n              const groupDefinition = selectedGroup as GroupDefinitionWithIdentifiers;\n              let groupIdentifiersIncluded: (string | number)[];\n              let groupIdentifiersExcluded: (string | number)[];\n\n              // todo: Remove 'groupIdentifiers' in next major release.\n              if (selectedGroup.hasOwnProperty('groupIdentifiers')) {\n                groupIdentifiersIncluded = groupDefinition.groupIdentifiers;\n              } else {\n                groupIdentifiersIncluded = groupDefinition.groupIdentifiersIncl;\n                groupIdentifiersExcluded = groupDefinition.groupIdentifiersExcl;\n              }\n\n              if (Array.isArray(selector)) {\n                const {\n                  groupIdentifiersInclStrategy,\n                  groupIdentifiersExclStrategy\n                } = groupDefinition;\n                const includesFn = (v: string | number) => selector.includes(v);\n\n                // If either incl. or excl. is undefined we want to ignore said filter and return true (see: ?? true).\n                // It's only needed for the incl. filters as for excl. !undefined = true.\n                return (\n                  ((groupIdentifiersInclStrategy === undefined ||\n                  groupIdentifiersInclStrategy === 'or'\n                    ? groupIdentifiersIncluded?.some(includesFn)\n                    : groupIdentifiersIncluded?.every(includesFn)) ??\n                    true) &&\n                  (groupIdentifiersExclStrategy === undefined ||\n                  groupIdentifiersExclStrategy === 'or'\n                    ? !groupIdentifiersExcluded?.some(includesFn)\n                    : !groupIdentifiersExcluded?.every(includesFn))\n                );\n              }\n\n              return (\n                groupIdentifiersIncluded?.includes(selector) &&\n                !groupIdentifiersExcluded?.includes(selector)\n              );\n            })\n          : items;\n      })\n    );\n  }\n\n  private getSortedEntities$(): Observable<T[]> {\n    return combineLatest([\n      this.groupedEntities$,\n      this.sortingSub$,\n      this.numberOfItemsToDisplaySub$\n    ]).pipe(\n      map(([entities, sorting, numberOfItemsToDisplay]) =>\n        sortList(entities, sorting).slice(0, numberOfItemsToDisplay)\n      )\n    );\n  }\n\n  private getHasFilteredEntities$(): Observable<boolean> {\n    return this.filteredEntities$.pipe(\n      map(entities => entities?.length > 0),\n      shareReplay({ refCount: true, bufferSize: 1 })\n    );\n  }\n\n  private setupQueryParamSubscription(): void {\n    this.selectedGroupSub$\n      .pipe(\n        skip(1),\n        map(selectedGroup => selectedGroup?.id),\n        filter(selectedGroupId => !!selectedGroupId),\n        distinctUntilChanged(),\n        takeUntilDestroy(this)\n      )\n      .subscribe(tab => {\n        if (this.retainGroupSelection) {\n          this.router.navigate([], {\n            relativeTo: this.activatedRoute,\n            queryParams: { tab },\n            queryParamsHandling: 'merge',\n            replaceUrl: true\n          });\n        }\n      });\n  }\n}\n","import { InteractivityChecker } from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Input,\n  OnInit,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\nimport { ListItemComponent } from '@sofico-framework/ui-kit/types';\n\n@Component({\n  selector: 'sof-overview-list-item',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ``,\n  styleUrls: ['./overview-list-item.component.scss'],\n  providers: [\n    { provide: SOF_FOCUS_COMPONENT, useExisting: OverviewListItemComponent }\n  ]\n})\nexport class OverviewListItemComponent<T> implements OnInit, OnSofFocus {\n  private componentRef: ComponentRef<ListItemComponent<T>>;\n  private localTc: string;\n  private localEntity: T;\n\n  /**\n   * The translation context.\n   */\n  @Input() set tc(tc: string) {\n    this.localTc = tc;\n\n    if (this.componentRef) {\n      (this.componentRef.instance as any).tc = this.localTc;\n    }\n  }\n\n  /**\n   * The entity we want to set.\n   */\n  @Input() set entity(entity: T) {\n    this.localEntity = entity;\n\n    if (this.componentRef) {\n      (this.componentRef.instance as any).entity = this.localEntity;\n    }\n  }\n\n  /**\n   * The component that must be dynamically injected into the template.\n   */\n  @Input() dynamicRowComponent: Type<ListItemComponent<T>>;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private interactivityChecker: InteractivityChecker\n  ) {}\n\n  ngOnInit(): void {\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      this.dynamicRowComponent\n    );\n    this.componentRef = this.viewContainerRef.createComponent(factory);\n    (this.componentRef.instance as any).tc = this.localTc;\n    (this.componentRef.instance as any).entity = this.localEntity;\n  }\n\n  sofFocus(): void {\n    if (\n      this.componentRef.instance &&\n      typeof ((this.componentRef.instance as any) as OnSofFocus).sofFocus ===\n        'function'\n    ) {\n      ((this.componentRef.instance as any) as OnSofFocus).sofFocus();\n    } else if (\n      this.interactivityChecker.isFocusable(\n        this.componentRef.location.nativeElement\n      )\n    ) {\n      this.componentRef.location.nativeElement.focus();\n    } else if (\n      this.interactivityChecker.isFocusable(\n        this.componentRef.location.nativeElement?.firstChild\n      )\n    ) {\n      this.componentRef.location.nativeElement.firstChild.focus();\n    } else {\n      throw Error(\n        'The dynamic row component nor its first child is focusable.'\n      );\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverviewListItemComponent } from './overview-list-item.component';\n\n@NgModule({\n  declarations: [OverviewListItemComponent],\n  exports: [OverviewListItemComponent],\n  imports: [CommonModule]\n})\nexport class OverviewListItemModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InViewModule } from '@sofico-framework/ui-kit/components/in-view';\nimport { LoadingModule } from '@sofico-framework/ui-kit/components/loading';\nimport { OverviewListGroupFilterModule } from '@sofico-framework/ui-kit/components/overview-list-group-filter';\nimport { OverviewListSearchBarModule } from '@sofico-framework/ui-kit/components/overview-list-search-bar';\nimport { OverviewListSortDropdownModule } from '@sofico-framework/ui-kit/components/overview-list-sort-dropdown';\nimport { OverviewListItemModule } from '../overview-list-item/overview-list-item.module';\nimport { OverviewListComponent } from './overview-list.component';\n\n@NgModule({\n  declarations: [OverviewListComponent],\n  exports: [OverviewListComponent],\n  imports: [\n    CommonModule,\n    OverviewListItemModule,\n    LoadingModule,\n    OverviewListSearchBarModule,\n    OverviewListGroupFilterModule,\n    TranslateModule,\n    OverviewListSortDropdownModule,\n    InViewModule\n  ]\n})\nexport class OverviewListModule {}\n","import { Injectable } from '@angular/core';\nimport { OverviewListConfig } from '@sofico-framework/ui-kit/classes';\n\n/**\n * We use this builder to create an overviewListConfig\n * ```typescript\n *\n * builder.createConfig().withFunctionalProp(...)\n *\n * ```\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OverviewListConfigBuilder<T> {\n  createConfig(): OverviewListConfig<T> {\n    return new OverviewListConfig<T>();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {OverviewListItemComponent as ɵb} from '../overview-list-item/overview-list-item.component';\nexport {OverviewListItemModule as ɵa} from '../overview-list-item/overview-list-item.module';"],"names":[],"mappings":"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"}