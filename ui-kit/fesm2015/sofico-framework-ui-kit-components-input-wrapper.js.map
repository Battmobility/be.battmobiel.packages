{"version":3,"file":"sofico-framework-ui-kit-components-input-wrapper.js","sources":["../../../../projects/sofico-framework/ui-kit/components/input-wrapper/input-wrapper.component.ts","../../../../projects/sofico-framework/ui-kit/components/input-wrapper/input-wrapper.module.ts","../../../../projects/sofico-framework/ui-kit/components/input-wrapper/sofico-framework-ui-kit-components-input-wrapper.ts"],"sourcesContent":["import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  Input,\n  OnDestroy,\n  Optional,\n  QueryList\n} from '@angular/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\nimport { FormComponent } from '@sofico-framework/ui-kit/components/form';\nimport { InputDirective } from '@sofico-framework/ui-kit/components/input';\nimport { isObject } from '@sofico-framework/utils';\nimport { takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport { Observable } from 'rxjs';\nimport {\n  debounceTime,\n  filter,\n  map,\n  startWith,\n  switchMap,\n  tap\n} from 'rxjs/operators';\nimport { FormErrorMessage } from './types/form-error-message.type';\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-input-wrapper',\n  template: `\n    <div class=\"form-group\">\n      <label\n        *ngIf=\"!(label | sofIsNullOrUndefined)\"\n        class=\"sb-form-control-wrapper-label\"\n      >\n        {{ label }}\n        <ng-container *ngIf=\"required$ | async\"> *</ng-container>\n      </label>\n\n      <div>\n        <ng-content></ng-content>\n      </div>\n      <small *ngIf=\"hint?.length > 0\" class=\"form-text text-muted\">\n        {{ hint }}\n      </small>\n      <ng-container *ngIf=\"errorMessages$ | async as errorMessages\">\n        <ul\n          *ngIf=\"\n            errorMessages?.length > 0 &&\n            ((control$ | async)?.touched || form?.submitted)\n          \"\n        >\n          <ng-container *ngFor=\"let message of errorMessages\">\n            <li class=\"invalid-feedback\" [style.display]=\"'block'\">\n              {{ tc + '.' + message.value | translate: message.params }}\n            </li>\n          </ng-container>\n        </ul>\n      </ng-container>\n    </div>\n  `,\n  styleUrls: ['./input-wrapper.component.scss']\n})\nexport class InputWrapperComponent implements AfterContentInit, OnDestroy {\n  /**\n   * The label will be displayed above the input field.\n   */\n  @Input() label: string;\n\n  /**\n   * The hint is used to add some extra information below the input field.\n   */\n  @Input() hint: string;\n\n  tc: string;\n  errorMessages$: Observable<FormErrorMessage[]>;\n  control$: Observable<AbstractControl>;\n  required$: Observable<boolean>;\n\n  @ContentChildren(InputDirective) children: QueryList<any>;\n\n  constructor(\n    @Optional()\n    public form: FormComponent\n  ) {}\n\n  ngOnDestroy(): void {}\n\n  ngAfterContentInit(): void {\n    this.tc = this.form?.tc;\n    // we need a trigger when the formgroup adds or removes controls\n    const trigger$ = this.form.formGroup.valueChanges.pipe(startWith(null));\n    this.control$ = trigger$.pipe(\n      switchMap(() =>\n        this.children.changes\n          .pipe(\n            startWith(this.children),\n            debounceTime(0) // children is not updated yet by angular\n          )\n          .pipe(\n            filter(children => children?.length > 0), // ignore if no children\n            // this is to allow radiobuttons\n            map(children => [\n              ...new Set<FormControl>(children.map(v => v.formControl))\n            ]),\n            tap(children => {\n              // throw error if length of distincted children is different then 1\n              if (children.length !== 1) {\n                throw new Error(\n                  'A sof-input-wrapper component can only contain one InputDirective (unless its a radiobutton)'\n                );\n              }\n            }),\n            map(children => children[0]) // only one distinct control supported\n          )\n      ),\n      takeUntilDestroy(this)\n    );\n    this.required$ = this.control$.pipe(\n      map(\n        control =>\n          control?.validator &&\n          control?.validator(new FormControl(''))?.required === true\n      )\n    );\n    this.errorMessages$ = this.control$.pipe(\n      switchMap(control => {\n        return control?.statusChanges.pipe(\n          startWith(control.status),\n          map(status =>\n            this.mapErrorObjToMessages(control.errors, this.form.actualErrorMap)\n          )\n        );\n      })\n    );\n  }\n\n  private mapErrorObjToMessages(\n    obj: { [key: string]: any },\n    errorMap: { [key: string]: string }\n  ): FormErrorMessage[] {\n    return (\n      errorMap &&\n      obj &&\n      Object.keys(obj).map(k => {\n        const params = obj[k];\n        return {\n          value: errorMap[k],\n          params: isObject(params) ? params : null\n        };\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UtilsPipesModule } from '@sofico-framework/utils';\nimport { InputWrapperComponent } from './input-wrapper.component';\n\n@NgModule({\n  imports: [CommonModule, UtilsPipesModule, TranslateModule],\n  declarations: [InputWrapperComponent],\n  exports: [InputWrapperComponent]\n})\nexport class InputWrapperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}