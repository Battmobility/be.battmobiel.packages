{"version":3,"file":"sofico-framework-ui-kit-components-overview-list-group-filter.js","sources":["../../../../projects/sofico-framework/ui-kit/components/overview-list-group-filter/overview-list-group-filter.component.ts","../../../../projects/sofico-framework/ui-kit/components/overview-list-group-filter/overview-list-group-filter.module.ts","../../../../projects/sofico-framework/ui-kit/components/overview-list-group-filter/sofico-framework-ui-kit-components-overview-list-group-filter.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Tab } from '@sofico-framework/ui-kit/components/tab';\nimport {\n  GroupDefinition,\n  GroupDefinitionWithIdentifiers\n} from '@sofico-framework/ui-kit/types';\nimport { hotSafe } from '@sofico-framework/utils';\nimport { Changes } from 'ngx-reactivetoolkit';\nimport { combineLatest, Observable, of, ReplaySubject } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'sof-overview-list-group-tabs',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./overview-list-group-filter.component.scss'],\n  template: `\n    <div class=\"group-tabs\">\n      <sof-tabs\n        [tc]=\"tc\"\n        [tabs]=\"tabs$ | async\"\n        [active]=\"activeTab$ | async\"\n        (clickedTab)=\"onClickedTab($event)\"\n      ></sof-tabs>\n    </div>\n    <div class=\"group-list\">\n      <sof-input-single-select\n        [tc]=\"tc\"\n        [formControl]=\"formControl\"\n        [options]=\"options$ | async\"\n        [selectorLabel]=\"labelFn\"\n        [selectorValue]=\"valueFn\"\n        [clearable]=\"false\"\n        (changeValue)=\"onChangeValueList($event)\"\n      ></sof-input-single-select>\n    </div>\n  `\n})\nexport class OverviewListGroupFilterComponent<T> implements OnInit, OnChanges {\n  formControl: FormControl = this.fb.control(null);\n  selectedGroup$ = new ReplaySubject<GroupDefinition>();\n\n  @Input() tc: string;\n  @Input() groupSelector: (T) => string | number;\n\n  @Input() set selectedGroup(value: GroupDefinition) {\n    this.selectedGroup$.next(value);\n    this.formControl.setValue(value?.id);\n  }\n\n  @Input() entities: T[];\n  @Input() groupDefinitions: GroupDefinition[] = [];\n  @Output() selectGroup = new EventEmitter<GroupDefinition>();\n\n  @Changes('entities') entities$: Observable<T[]>;\n  @Changes('groupDefinitions') groupDefinitions$: Observable<GroupDefinition[]>;\n\n  // presentation streams\n  tabs$: Observable<Tab[]>;\n  activeTab$: Observable<Tab>;\n  options$: Observable<any>;\n\n  labelFn = x => `${x.label} (${x.count})`;\n  valueFn = x => x.id;\n\n  constructor(\n    private translateService: TranslateService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    // presentation streams\n    this.tabs$ = this.getTabs$();\n    this.activeTab$ = this.getActiveTab$();\n    this.options$ = this.getOptions$();\n  }\n\n  ngOnChanges(): void {}\n\n  onChangeValueList(groupDefinitionId: string): void {\n    this.selectGroup.emit(\n      this.groupDefinitions.find(x => x.id === groupDefinitionId)\n    );\n  }\n\n  onClickedTab(tab: Tab): void {\n    this.selectGroup.emit(this.groupDefinitions.find(x => x.id === tab.id));\n    this.selectedGroup$.next(this.groupDefinitions.find(x => x.id === tab.id));\n  }\n\n  private getTabs$(): Observable<Tab[]> {\n    return combineLatest([\n      this.entities$.pipe(filter(v => !!v)),\n      this.groupDefinitions$.pipe(filter(v => !!v))\n    ]).pipe(\n      map(([entities, groupDefinitions]) => {\n        return groupDefinitions.map(groupDefinition => ({\n          label: groupDefinition.label,\n          translation: groupDefinition.translation,\n          icon: groupDefinition.icon,\n          id: groupDefinition.id,\n          count:\n            // todo: Remove 'groupIdentifiers' in next major release.\n            groupDefinition.hasOwnProperty('groupIdentifiers') ||\n            groupDefinition.hasOwnProperty('groupIdentifiersIncl') ||\n            groupDefinition.hasOwnProperty('groupIdentifiersExcl')\n              ? entities?.filter(item => {\n                  const selector = this.groupSelector(item);\n                  const groupDefinitionTmp = groupDefinition as GroupDefinitionWithIdentifiers;\n                  let groupIdentifiersIncluded: (string | number)[];\n                  let groupIdentifiersExcluded: (string | number)[];\n\n                  // todo: Remove 'groupIdentifiers' in next major release.\n                  if (groupDefinitionTmp.hasOwnProperty('groupIdentifiers')) {\n                    groupIdentifiersIncluded =\n                      groupDefinitionTmp.groupIdentifiers;\n                  } else {\n                    groupIdentifiersIncluded =\n                      groupDefinitionTmp.groupIdentifiersIncl;\n                    groupIdentifiersExcluded =\n                      groupDefinitionTmp.groupIdentifiersExcl;\n                  }\n\n                  if (Array.isArray(selector)) {\n                    const {\n                      groupIdentifiersInclStrategy,\n                      groupIdentifiersExclStrategy\n                    } = groupDefinitionTmp;\n                    const includesFn = (v: string | number) =>\n                      selector.includes(v);\n\n                    // If either incl. or excl. is undefined we want to ignore said filter and return true (see: ?? true).\n                    // It's only needed for the incl. filters as for excl. !undefined = true.\n                    return (\n                      ((groupIdentifiersInclStrategy === undefined ||\n                      groupIdentifiersInclStrategy === 'or'\n                        ? groupIdentifiersIncluded?.some(includesFn)\n                        : groupIdentifiersIncluded?.every(includesFn)) ??\n                        true) &&\n                      (groupIdentifiersExclStrategy === undefined ||\n                      groupIdentifiersExclStrategy === 'or'\n                        ? !groupIdentifiersExcluded?.some(includesFn)\n                        : !groupIdentifiersExcluded?.every(includesFn))\n                    );\n                  }\n\n                  return (\n                    groupIdentifiersIncluded?.includes(selector) &&\n                    !groupIdentifiersExcluded?.includes(selector)\n                  );\n                }).length\n              : entities.length\n        }));\n      }),\n      hotSafe()\n    );\n  }\n\n  private getActiveTab$(): Observable<Tab> {\n    return combineLatest([this.selectedGroup$, this.tabs$]).pipe(\n      map(\n        ([selectedGroup, tabs]) =>\n          tabs.find(x => x.id === selectedGroup?.id) || tabs[0]\n      )\n    );\n  }\n\n  private getOptions$(): Observable<any> {\n    return combineLatest([\n      this.entities$.pipe(filter(v => !!v)),\n      this.groupDefinitions$.pipe(filter(v => !!v))\n    ]).pipe(\n      switchMap(([entities, groupDefinitions]) => {\n        const keys = groupDefinitions.map(groupDefinition =>\n          groupDefinition.label\n            ? `${this.tc}.${groupDefinition.label}`\n            : undefined\n        );\n\n        return combineLatest(\n          keys.map((x, i) =>\n            x\n              ? this.translateService.stream(x)\n              : of(groupDefinitions[i]?.translation)\n          )\n        ).pipe(\n          map(translations =>\n            translations\n              // add translation\n              .map((translation, index) => ({\n                ...groupDefinitions[index],\n                label: translation\n              }))\n              // add count (not part of the group identifier type)\n              .map(groupDefinition => ({\n                ...groupDefinition,\n                count: groupDefinition.hasOwnProperty('groupIdentifiers')\n                  ? entities?.filter(item =>\n                      (groupDefinition as GroupDefinitionWithIdentifiers)?.groupIdentifiers?.includes(\n                        this.groupSelector(item)\n                      )\n                    ).length\n                  : entities.length\n              }))\n          )\n        );\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InputSingleSelectModule } from '@sofico-framework/ui-kit/components/input-single-select';\nimport { TabsModule } from '@sofico-framework/ui-kit/components/tabs';\nimport { OverviewListGroupFilterComponent } from './overview-list-group-filter.component';\n\n@NgModule({\n  declarations: [OverviewListGroupFilterComponent],\n  exports: [OverviewListGroupFilterComponent],\n  imports: [\n    CommonModule,\n    TranslateModule.forChild(),\n    InputSingleSelectModule,\n    ReactiveFormsModule,\n    TabsModule\n  ]\n})\nexport class OverviewListGroupFilterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}