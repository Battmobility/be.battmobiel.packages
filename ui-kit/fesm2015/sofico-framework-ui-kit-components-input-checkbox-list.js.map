{"version":3,"file":"sofico-framework-ui-kit-components-input-checkbox-list.js","sources":["../../../../projects/sofico-framework/ui-kit/components/input-checkbox-list/input-checkbox-list.component.ts","../../../../projects/sofico-framework/ui-kit/components/input-checkbox-list/input-checkbox-list.module.ts","../../../../projects/sofico-framework/ui-kit/components/input-checkbox-list/sofico-framework-ui-kit-components-input-checkbox-list.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputCheckboxComponent } from '@sofico-framework/ui-kit/components/input-checkbox';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\ninterface EnhancedOption {\n  id: string;\n  label: string;\n  selected?: boolean;\n}\n\n@Component({\n  selector: 'sof-input-checkbox-list',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./input-checkbox-list.component.scss'],\n  template: `\n    <sof-input-checkbox\n      #checkboxes\n      *ngFor=\"let option of enhancedOptions$ | async; trackBy: trackByFn\"\n      [label]=\"option.label\"\n      [selected]=\"option.selected\"\n      [isDisabled]=\"isDisabled\"\n      (changeValue)=\"onChange(option, option.selected)\"\n    ></sof-input-checkbox>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: InputCheckboxListComponent,\n      multi: true\n    },\n    { provide: SOF_FOCUS_COMPONENT, useExisting: InputCheckboxListComponent }\n  ]\n})\nexport class InputCheckboxListComponent\n  implements ControlValueAccessor, OnSofFocus {\n  /**\n   *  Determines if the input is disabled.\n   */\n  @Input() isDisabled: boolean;\n\n  private options$ = new BehaviorSubject([]);\n\n  /**\n   *  Sets the the available options (checkboxes).\n   */\n  @Input() set options(v: { label: string; id: string }[]) {\n    this.options$.next(v);\n  }\n\n  private values$ = new BehaviorSubject<string[]>([]);\n\n  /**\n   * Determines whether the input is in a valid state.\n   */\n  @Input() invalid: boolean;\n\n  /**\n   * Determines if the input is checked or not.\n   */\n  @Input() set value(value: string[]) {\n    this.writeValue(value);\n  }\n\n  /**\n   * EventEmitter that will emit the value when changed.\n   */\n  @Output() changeValue = new EventEmitter<string[]>();\n\n  @ViewChildren('checkboxes') checkboxes: QueryList<InputCheckboxComponent>;\n\n  enhancedOptions$: Observable<EnhancedOption[]> = combineLatest([\n    this.options$.pipe(filter(v => !!v)),\n    this.values$\n  ]).pipe(\n    map(([options, values]) => {\n      return options.map(option => {\n        return {\n          id: option.id,\n          label: option.label,\n          selected: values?.indexOf(option.id) > -1\n        };\n      });\n    })\n  );\n\n  propagateChange: any;\n  propagateTouch: any;\n\n  trackByFn = i => i;\n\n  sofFocus(): void {\n    this.checkboxes.first?.sofFocus();\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.propagateTouch = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  writeValue(list: string[]): void {\n    this.values$.next(list);\n  }\n\n  onChange(option: { label: string; id: string }, selected: boolean): void {\n    if (!this.isDisabled) {\n      const oldValues = this.values$.getValue() ?? [];\n      const newValues = selected\n        ? oldValues.filter(value => value !== option.id)\n        : [...oldValues, option.id];\n      this.values$.next(newValues);\n      if (this.propagateChange) {\n        this.propagateChange(newValues);\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { InputCheckboxModule } from '@sofico-framework/ui-kit/components/input-checkbox';\nimport { SvgIconModule } from '@sofico-framework/ui-kit/components/svg-icon';\nimport { InputCheckboxListComponent } from './input-checkbox-list.component';\n\n@NgModule({\n  imports: [CommonModule, InputCheckboxModule, SvgIconModule],\n  declarations: [InputCheckboxListComponent],\n  exports: [InputCheckboxListComponent]\n})\nexport class InputCheckboxListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}