{"version":3,"file":"sofico-framework-ui-kit-components-table-list.js","sources":["../../../../projects/sofico-framework/ui-kit/components/table-list/table-list.component.ts","../../../../projects/sofico-framework/ui-kit/components/table-list-item/table-list-item.component.ts","../../../../projects/sofico-framework/ui-kit/components/table-list-item/table-list-item.module.ts","../../../../projects/sofico-framework/ui-kit/components/table-list/table-list.module.ts","../../../../projects/sofico-framework/ui-kit/components/table-list/classes/table-list-config.class.ts","../../../../projects/sofico-framework/ui-kit/components/table-list/services/table-list-config-builder.service.ts","../../../../projects/sofico-framework/ui-kit/components/table-list/sofico-framework-ui-kit-components-table-list.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { TableListSearchBarComponent } from '@sofico-framework/ui-kit/components/table-list-search-bar';\nimport {\n  OnSofFocus,\n  SOF_FOCUS_COMPONENT\n} from '@sofico-framework/ui-kit/directives/focus';\nimport { search, SortingOrderConfig, sortList } from '@sofico-framework/utils';\nimport { takeUntilDestroy, UntilDestroy } from 'ngx-reactivetoolkit';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n  of,\n  ReplaySubject\n} from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { TableListConfig } from './classes/table-list-config.class';\n\n@UntilDestroy()\n@Component({\n  selector: 'sof-table-list',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container *ngIf=\"config$ | async as config\">\n      <div *ngIf=\"enableSearch\" class=\"w-100\">\n        <sof-table-list-search-bar\n          #searchBarComponent\n          [tc]=\"tc\"\n          (changeTerm)=\"onChangeTerm($event)\"\n        ></sof-table-list-search-bar>\n      </div>\n      <ng-container *ngIf=\"hasSearchedEntities | async; else noResults\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-borderless table-striped\">\n            <thead>\n              <tr>\n                <th\n                  *ngFor=\"let prop of config.functionalProps; let i = index\"\n                  (click)=\"onChangeSorting(prop.id, i)\"\n                >\n                  <div class=\"d-flex\">\n                    <div>{{ tc + '.' + prop.header | translate }}</div>\n                    <sof-svg-icon\n                      class=\"ml-1\"\n                      [class.visibility-hidden]=\"activeSortPropId !== prop.id\"\n                      [icon]=\"\n                        (sortingSub$ | async)?.order === 'asc'\n                          ? 'icon-sort-amount-asc'\n                          : 'icon-sort-amount-desc'\n                      \"\n                      size=\"12\"\n                    ></sof-svg-icon>\n                  </div>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <sof-table-list-item\n                *ngFor=\"\n                  let entity of searchedEntities$\n                    | async\n                    | sofSort: (sortingSub$ | async);\n                  trackBy: trackByFn\n                \"\n                [entity]=\"entity\"\n                [tc]=\"tc\"\n                [dynamicRowComponent]=\"config?.dynamicRowComponent\"\n              >\n              </sof-table-list-item>\n            </tbody>\n          </table>\n        </div>\n      </ng-container>\n      <ng-template #noResults>\n        <ng-container *ngIf=\"entities$ | async as entities\">\n          <ng-container *ngIf=\"entities?.length > 0; else noData\">\n            {{ tc + '.' + 'SEARCH-NO-RESULTS' | translate }}\n          </ng-container>\n          <ng-template #noData>\n            {{ tc + '.' + 'SEARCH-NO-DATA' | translate }}\n          </ng-template>\n        </ng-container>\n      </ng-template>\n    </ng-container>\n  `,\n  styleUrls: ['./table-list.component.scss'],\n  providers: [{ provide: SOF_FOCUS_COMPONENT, useExisting: TableListComponent }]\n})\nexport class TableListComponent<T> implements OnInit, OnDestroy, OnSofFocus {\n  entities$ = new ReplaySubject<T[]>(1);\n  config$ = new ReplaySubject<TableListConfig<T>>(1);\n  searchableSelectors: ((entity: T) => any)[];\n\n  /**\n   * The amount of items shown in the table.\n   */\n  @Input() thresholdNumberOfItems = 15;\n\n  /**\n   * The translation context.\n   */\n  @Input() tc: string;\n\n  /**\n   * The table list config.\n   */\n  @Input() set config(config: TableListConfig<T>) {\n    if (config) {\n      this.config$.next(config);\n      this.sortingSub$.next(config.initialSorting);\n      this.searchableSelectors = config.functionalProps\n        .filter(prop => prop.searchable)\n        .map(prop => prop.selector);\n      this.selectors = config?.functionalProps\n        ?.filter(prop => prop.sortable)\n        ?.map(prop => prop?.selector);\n      this.plainSorts = config?.functionalProps\n        ?.filter(prop => prop.sortable)\n        ?.map(prop => prop?.plainSort);\n\n      if (config.initialSorting) {\n        this.activeSortPropId = config.initialSortingFuncPropRef.id;\n      }\n    }\n  }\n\n  /**\n   * The entities we want to render in this table.\n   */\n  @Input() set entities(entities: T[]) {\n    if (entities) {\n      this.entities$.next(entities);\n    }\n  }\n\n  /**\n   * Whether the search bar is visible.\n   */\n  @Input() enableSearch = true;\n\n  /**\n   * Whether the sorting dropdown is visible.\n   */\n  @Input() enableSorting = true;\n\n  @Output() searchedEntities = new EventEmitter<T[]>();\n\n  @ViewChild('searchBarComponent')\n  searchBarComponent: TableListSearchBarComponent<T>;\n\n  // presentation streams\n  searchedEntities$: Observable<T[]>;\n  sortedEntities$: Observable<T[]>;\n  hasSearchedEntities: Observable<boolean>;\n\n  // source streams\n  termSub$ = new BehaviorSubject<string>('');\n  sortingSub$ = new BehaviorSubject<SortingOrderConfig<T>>(null);\n  private numberOfItemsToDisplaySub$ = new BehaviorSubject<number>(\n    this.thresholdNumberOfItems\n  );\n\n  selectors: ((entity: T) => any)[];\n  plainSorts: boolean[];\n\n  activeSortPropId: number;\n\n  trackByFn = i => i;\n\n  sofFocus(): void {\n    if (this.enableSearch) {\n      this.searchBarComponent.sofFocus();\n    }\n  }\n\n  ngOnInit(): void {\n    this.searchedEntities$ = this.getSearchedEntities$();\n    this.searchedEntities$\n      .pipe(takeUntilDestroy(this))\n      .subscribe(searchedEntities =>\n        this.searchedEntities.emit(searchedEntities)\n      );\n    this.sortedEntities$ = this.getSortedEntities$();\n\n    this.hasSearchedEntities = this.getHasEntities$();\n  }\n\n  ngOnDestroy(): void {}\n\n  onChangeSorting(id: number, index: number): void {\n    this.sortingSub$.next({\n      prop: this.selectors[index],\n      plainSort: this.plainSorts[index],\n      order:\n        id === this.activeSortPropId\n          ? this.sortingSub$.getValue().order === 'asc'\n            ? 'desc'\n            : 'asc'\n          : 'asc'\n    });\n\n    this.activeSortPropId = id;\n  }\n\n  onChangeTerm(term: string): void {\n    this.termSub$.next(term);\n    this.numberOfItemsToDisplaySub$.next(this.thresholdNumberOfItems);\n    this.getSearchedEntities$();\n  }\n\n  private getSearchedEntities$(): Observable<T[]> {\n    return this.entities$.pipe(\n      switchMap(results =>\n        this.enableSearch && this.searchableSelectors.length !== 0\n          ? of(results).pipe(search(this.termSub$, this.searchableSelectors))\n          : of(results)\n      ),\n      shareReplay({ refCount: true, bufferSize: 1 })\n    );\n  }\n\n  private getSortedEntities$(): Observable<T[]> {\n    return combineLatest([this.entities$, this.sortingSub$]).pipe(\n      map(([entities, sorting]) => sortList(entities, sorting))\n    );\n  }\n\n  private getHasEntities$(): Observable<boolean> {\n    return this.searchedEntities$.pipe(\n      map(entities => entities?.length > 0),\n      shareReplay({ refCount: true, bufferSize: 1 })\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Input,\n  OnInit,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { TableItemComponent } from './types/table-item-component.type';\n\n@Component({\n  selector: 'sof-table-list-item',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ``,\n  styleUrls: ['./table-list-item.component.scss']\n})\nexport class TableListItemComponent<T> implements OnInit {\n  private componentRef: ComponentRef<TableItemComponent<T>>;\n  private localTc: string;\n  private localEntity: T;\n\n  /**\n   * The translation context.\n   */\n  @Input() set tc(tc: string) {\n    this.localTc = tc;\n\n    if (this.componentRef) {\n      (this.componentRef.instance as any).tc = this.localTc;\n    }\n  }\n\n  /**\n   * The entity we want to set.\n   */\n  @Input() set entity(entity: T) {\n    this.localEntity = entity;\n\n    if (this.componentRef) {\n      (this.componentRef.instance as any).entity = this.localEntity;\n    }\n  }\n\n  /**\n   * The component that must be dynamically injected into the template.\n   */\n  @Input() dynamicRowComponent: Type<TableListItemComponent<T>>;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnInit(): void {\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      this.dynamicRowComponent\n    );\n    this.componentRef = this.viewContainerRef.createComponent(factory);\n    (this.componentRef.instance as any).tc = this.localTc;\n    (this.componentRef.instance as any).entity = this.localEntity;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TableListItemComponent } from './table-list-item.component';\n\n@NgModule({\n  declarations: [TableListItemComponent],\n  exports: [TableListItemComponent],\n  imports: [CommonModule]\n})\nexport class TableListItemModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LoadingModule } from '@sofico-framework/ui-kit/components/loading';\nimport { SvgIconModule } from '@sofico-framework/ui-kit/components/svg-icon';\nimport { TableListSearchBarModule } from '@sofico-framework/ui-kit/components/table-list-search-bar';\nimport { UtilsPipesModule } from '@sofico-framework/utils';\nimport { TableListItemModule } from '../table-list-item/table-list-item.module';\nimport { TableListComponent } from './table-list.component';\n\n@NgModule({\n  declarations: [TableListComponent],\n  imports: [\n    CommonModule,\n    TableListSearchBarModule,\n    LoadingModule,\n    TranslateModule,\n    UtilsPipesModule,\n    SvgIconModule,\n    TableListItemModule\n  ],\n  exports: [TableListComponent]\n})\nexport class TableListModule {}\n","/**\n * Configuration/builder to build an table config\n * This object contains configuration regarding initial sorting of an object\n */\nimport { Type } from '@angular/core';\nimport { TableItemComponent } from '@sofico-framework/ui-kit/components/table-list-item';\nimport { SortingOrderConfig } from '@sofico-framework/utils';\n\nexport class TableListConfig<T> {\n  /**\n   * FunctionalProps:\n   * id: Used as a unique identifier for sorting as we can't assume the translations in column headers are uniaue.\n   */\n  functionalProps: {\n    id: number;\n    header: string;\n    selector: (entity: T) => any;\n    searchable: boolean;\n    sortable: boolean;\n    plainSort: boolean;\n  }[] = [];\n  initialSorting: SortingOrderConfig<T> = {\n    prop: null\n  };\n  dynamicRowComponent: Type<TableItemComponent<T>> = null;\n  initialSortingFuncPropRef = null;\n  private functionalPropCount = 0;\n\n  setDynamicRowComponent(\n    component: Type<TableItemComponent<T>>\n  ): TableListConfig<T> {\n    this.dynamicRowComponent = component;\n    return this;\n  }\n\n  withNaturalSorting(): TableListConfig<T> {\n    const propToUpdate = this.functionalProps[this.functionalProps.length - 1];\n\n    propToUpdate.sortable = true;\n    propToUpdate.plainSort = false;\n    if (this.initialSortingFuncPropRef) {\n      this.initialSortingFuncPropRef.plainSort = propToUpdate.plainSort;\n    }\n    return this;\n  }\n\n  withPlainSorting(label: string): TableListConfig<T> {\n    const propToUpdate = this.functionalProps[this.functionalProps.length - 1];\n    propToUpdate.sortable = true;\n    propToUpdate.plainSort = true;\n    if (this.initialSortingFuncPropRef) {\n      this.initialSortingFuncPropRef.plainSort = propToUpdate.plainSort;\n    }\n    return this;\n  }\n\n  asInitialSorting(order: 'asc' | 'desc'): TableListConfig<T> {\n    const propToUpdate = this.functionalProps[this.functionalProps.length - 1];\n    this.initialSorting = {\n      prop: propToUpdate.selector,\n      order,\n      plainSort: propToUpdate.plainSort\n    } as SortingOrderConfig<T>;\n    this.initialSortingFuncPropRef = propToUpdate;\n    return this;\n  }\n\n  addFunctionalProp(selector: (entity: T) => any): TableListConfig<T> {\n    this.functionalProps.push({\n      id: this.functionalPropCount,\n      header: '',\n      selector,\n      searchable: false,\n      sortable: false,\n      plainSort: false\n    });\n    this.functionalPropCount++;\n    return this;\n  }\n\n  setHeader(header: string): TableListConfig<T> {\n    const propToUpdate = this.functionalProps[this.functionalProps.length - 1];\n    propToUpdate.header = header;\n    return this;\n  }\n\n  withSearch(): TableListConfig<T> {\n    const propToUpdate = this.functionalProps[this.functionalProps.length - 1];\n    propToUpdate.searchable = true;\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TableListConfig } from '../classes/table-list-config.class';\n\n/**\n * We use this builder to create an tableConfig\n * ```typescript\n *\n * builder.createConfig().withFunctionalProp(...)\n *\n * ```\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableListConfigBuilder<T> {\n  createConfig(): TableListConfig<T> {\n    return new TableListConfig<T>();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {TableListItemComponent as ɵb} from '../table-list-item/table-list-item.component';\nexport {TableListItemModule as ɵa} from '../table-list-item/table-list-item.module';"],"names":[],"mappings":"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"}