import { publishReplay, refCount } from 'rxjs/operators';
/**
 * Share source and replay specified number of emissions on subscription.
 *
 * This operator connects to a source observable and multicasts through
 * a `ReplaySubject` constructed with the specified arguments.
 * When there are no subscribers (refCount = 0) left the source stream will complete.
 *
 * ## Why use hotSafe?
 * You generally want to use `hotSafe` when you have
 * computations (ex. http calls, calculations, algorithms, ...)
 * that you do not wish to be executed amongst multiple subscribers.
 * It may also be valuable in situations where you know you will have late subscribers to
 * a stream that need access to previously emitted values.
 *
 * @param [bufferSize=Number.POSITIVE_INFINITY] Maximum element count of the replay buffer.
 */
export function hotSafe(bufferSize = 1) {
    return (source) => source.pipe(publishReplay(bufferSize), refCount());
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG90LXNhZmUub3BlcmF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zb2ZpY28tZnJhbWV3b3JrL3V0aWxzL3NyYy9saWIvb3BlcmF0b3JzL2hvdC1zYWZlLm9wZXJhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFekQ7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsTUFBTSxVQUFVLE9BQU8sQ0FDckIsYUFBcUIsQ0FBQztJQUV0QixPQUFPLENBQUMsTUFBcUIsRUFBRSxFQUFFLENBQy9CLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFJLFVBQVUsQ0FBQyxFQUFFLFFBQVEsRUFBSyxDQUFDLENBQUM7QUFDN0QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vbm9UeXBlT3BlcmF0b3JGdW5jdGlvbiwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgcHVibGlzaFJlcGxheSwgcmVmQ291bnQgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbi8qKlxuICogU2hhcmUgc291cmNlIGFuZCByZXBsYXkgc3BlY2lmaWVkIG51bWJlciBvZiBlbWlzc2lvbnMgb24gc3Vic2NyaXB0aW9uLlxuICpcbiAqIFRoaXMgb3BlcmF0b3IgY29ubmVjdHMgdG8gYSBzb3VyY2Ugb2JzZXJ2YWJsZSBhbmQgbXVsdGljYXN0cyB0aHJvdWdoXG4gKiBhIGBSZXBsYXlTdWJqZWN0YCBjb25zdHJ1Y3RlZCB3aXRoIHRoZSBzcGVjaWZpZWQgYXJndW1lbnRzLlxuICogV2hlbiB0aGVyZSBhcmUgbm8gc3Vic2NyaWJlcnMgKHJlZkNvdW50ID0gMCkgbGVmdCB0aGUgc291cmNlIHN0cmVhbSB3aWxsIGNvbXBsZXRlLlxuICpcbiAqICMjIFdoeSB1c2UgaG90U2FmZT9cbiAqIFlvdSBnZW5lcmFsbHkgd2FudCB0byB1c2UgYGhvdFNhZmVgIHdoZW4geW91IGhhdmVcbiAqIGNvbXB1dGF0aW9ucyAoZXguIGh0dHAgY2FsbHMsIGNhbGN1bGF0aW9ucywgYWxnb3JpdGhtcywgLi4uKVxuICogdGhhdCB5b3UgZG8gbm90IHdpc2ggdG8gYmUgZXhlY3V0ZWQgYW1vbmdzdCBtdWx0aXBsZSBzdWJzY3JpYmVycy5cbiAqIEl0IG1heSBhbHNvIGJlIHZhbHVhYmxlIGluIHNpdHVhdGlvbnMgd2hlcmUgeW91IGtub3cgeW91IHdpbGwgaGF2ZSBsYXRlIHN1YnNjcmliZXJzIHRvXG4gKiBhIHN0cmVhbSB0aGF0IG5lZWQgYWNjZXNzIHRvIHByZXZpb3VzbHkgZW1pdHRlZCB2YWx1ZXMuXG4gKlxuICogQHBhcmFtIFtidWZmZXJTaXplPU51bWJlci5QT1NJVElWRV9JTkZJTklUWV0gTWF4aW11bSBlbGVtZW50IGNvdW50IG9mIHRoZSByZXBsYXkgYnVmZmVyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaG90U2FmZTxUPihcbiAgYnVmZmVyU2l6ZTogbnVtYmVyID0gMVxuKTogTW9ub1R5cGVPcGVyYXRvckZ1bmN0aW9uPFQ+IHtcbiAgcmV0dXJuIChzb3VyY2U6IE9ic2VydmFibGU8VD4pID0+XG4gICAgc291cmNlLnBpcGUocHVibGlzaFJlcGxheTxUPihidWZmZXJTaXplKSwgcmVmQ291bnQ8VD4oKSk7XG59XG4iXX0=