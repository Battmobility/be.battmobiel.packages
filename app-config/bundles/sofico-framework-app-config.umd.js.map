{"version":3,"file":"sofico-framework-app-config.umd.js","sources":["../../../../projects/sofico-framework/app-config/src/lib/app-config.token.ts","../../../../projects/sofico-framework/app-config/src/lib/services/config.service.ts","../../../../projects/sofico-framework/app-config/src/lib/pipes/currency-config.pipe.ts","../../../../projects/sofico-framework/app-config/src/lib/pipes/date-config.pipe.ts","../../../../projects/sofico-framework/app-config/src/lib/pipes/time-config.pipe.ts","../../../../projects/sofico-framework/app-config/src/lib/pipes/date-time-config.pipe.ts","../../../../projects/sofico-framework/app-config/src/lib/app-config.module.ts","../../../../projects/sofico-framework/app-config/src/lib/app-config-utils.module.ts","../../../../projects/sofico-framework/app-config/src/public-api.ts","../../../../projects/sofico-framework/app-config/src/sofico-framework-app-config.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { AppConfig } from './types/app-config.type';\n\nexport const APP_CONFIG_TOKEN = new InjectionToken<AppConfig>(\n  'app-config-token'\n);\n","import { Inject, Injectable } from '@angular/core';\nimport { ObjectService, WindowRefService } from '@sofico-framework/utils';\nimport { APP_CONFIG_TOKEN } from '../app-config.token';\nimport { AppConfig } from '../types/app-config.type';\nimport { Config } from '../types/config.type';\nimport { ProvisioningConfig } from '../types/provisioning-config.type';\n\n@Injectable()\nexport class ConfigService {\n  public config: Config;\n\n  /**\n   * The config that is set on the nativeWindow\n   */\n  private provisioningConfig: ProvisioningConfig = this.windowRefService\n    .nativeWindow.config;\n\n  constructor(\n    @Inject(APP_CONFIG_TOKEN) private appConfig: AppConfig,\n    private windowRefService: WindowRefService,\n    private objectService: ObjectService\n  ) {\n    // provisioning config requirement\n    if (!this.provisioningConfig) {\n      throw Error('No provisioning configuration found!');\n    }\n\n    if (\n      !(\n        this.provisioningConfig.auth?.clientId ||\n        this.provisioningConfig.base?.clientId\n      )\n    ) {\n      throw Error('auth.clientId is required in configuration!');\n    }\n\n    const location = this.windowRefService.nativeWindow.location;\n    const defaultConfig: Config = {\n      api: {\n        baseUrl: `${location.protocol}//${location.host}/api`\n      },\n      auth: {\n        clientId: '',\n        allowedUrls: [`${location.protocol}//${location.host}`],\n        baseUrl: `${location.protocol}//${location.host}/auth/realms/`,\n        grant: 'implicit',\n        realm: 'master',\n        logoutRedirectUrls: []\n      },\n      debug: false,\n      app: appConfig\n    };\n\n    let baseConfig: Config;\n    if (this.provisioningConfig?.base) {\n      baseConfig = {\n        api: {\n          baseUrl: `https://${this.provisioningConfig.base.domain}/api`\n        },\n        auth: {\n          clientId: this.provisioningConfig.base.clientId,\n          allowedUrls: [`https://${this.provisioningConfig.base.domain}/api`],\n          baseUrl: `https://${this.provisioningConfig.base.domain}/auth/realms/`,\n          grant: 'implicit',\n          realm: 'master',\n          logoutRedirectUrls: []\n        },\n        app: appConfig\n      };\n    }\n\n    let config: Config = this.objectService.mergeDeep(\n      defaultConfig,\n      baseConfig,\n      this.provisioningConfig\n    );\n\n    // We ensure the API and AUTH baseUrl have a trailing slash\n    config = {\n      ...config,\n      api: {\n        ...config.api,\n        baseUrl: this.getValidUrl(config.api.baseUrl)\n      },\n      auth: {\n        ...config.auth,\n        baseUrl: this.getValidUrl(config.auth.baseUrl)\n      }\n    };\n    this.config = config;\n  }\n\n  private getValidUrl(url: string): string {\n    if (url?.substr(-1) !== '/') {\n      return `${url}/`;\n    }\n    return url;\n  }\n}\n","import { CurrencyPipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from '../services/config.service';\n\n@Pipe({ name: 'sofCurrencyConfig' })\nexport class CurrencyConfigPipe implements PipeTransform {\n  constructor(\n    private currencyPipe: CurrencyPipe,\n    private configService: ConfigService\n  ) {}\n\n  transform(value: any): string {\n    return this.currencyPipe.transform(\n      value,\n      this.configService.config.app.currencyCode\n    );\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from '../services/config.service';\n\n@Pipe({ name: 'sofDateConfig' })\nexport class DateConfigPipe implements PipeTransform {\n  constructor(\n    private datePipe: DatePipe,\n    private configService: ConfigService\n  ) {}\n\n  transform(value: any): string {\n    return this.datePipe.transform(\n      value,\n      this.configService.config.app.dateFormat\n    );\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from '../services/config.service';\n\n@Pipe({ name: 'sofTimeConfig' })\nexport class TimeConfigPipe implements PipeTransform {\n  constructor(\n    private configService: ConfigService,\n    private datePipe: DatePipe\n  ) {}\n\n  transform(value: string): string {\n    const dateTimeString = `1970-01-01 ${value}`;\n    return this.datePipe.transform(\n      dateTimeString,\n      this.configService.config.app.timeFormat\n    );\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from '../services/config.service';\n\n@Pipe({ name: 'sofDateTimeConfig' })\nexport class DateTimeConfigPipe implements PipeTransform {\n  constructor(\n    private configService: ConfigService,\n    private datePipe: DatePipe\n  ) {}\n\n  transform(value: any): string {\n    return this.datePipe.transform(\n      value,\n      this.configService.config.app.dateFormat +\n        ' ' +\n        this.configService.config.app.timeFormat\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf\n} from '@angular/core';\n\nimport { WindowRefService } from '@sofico-framework/utils';\nimport { APP_CONFIG_TOKEN } from './app-config.token';\nimport { ConfigService } from './services/config.service';\nimport { AppConfig } from './types/app-config.type';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [ConfigService]\n})\nexport class AppConfigModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule: AppConfigModule,\n    @Optional() @Inject(APP_CONFIG_TOKEN) private appConfig: AppConfig,\n    @Optional() windowRefService: WindowRefService\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'AppConfigModule is already loaded. Import in your base AppModule only.'\n      );\n    }\n    if (!appConfig) {\n      throw Error(\n        `${AppConfigModule.name} should be imported using forRoot static method!`\n      );\n    }\n    if (!windowRefService) {\n      throw new Error(\n        'You need to import the UtilServicesModule in your AppModule!'\n      );\n    }\n  }\n\n  static forRoot(config: AppConfig): ModuleWithProviders<AppConfigModule> {\n    return {\n      ngModule: AppConfigModule,\n      providers: [\n        {\n          provide: APP_CONFIG_TOKEN,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CurrencyConfigPipe } from './pipes/currency-config.pipe';\nimport { DateConfigPipe } from './pipes/date-config.pipe';\nimport { DateTimeConfigPipe } from './pipes/date-time-config.pipe';\nimport { TimeConfigPipe } from './pipes/time-config.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    CurrencyConfigPipe,\n    DateConfigPipe,\n    TimeConfigPipe,\n    DateTimeConfigPipe\n  ],\n  exports: [\n    CurrencyConfigPipe,\n    DateConfigPipe,\n    TimeConfigPipe,\n    DateTimeConfigPipe\n  ]\n})\nexport class AppConfigUtilsModule {}\n","/*\n * Public API Surface of app-config\n */\n\n// pipes\nexport * from './lib/pipes/currency-config.pipe';\nexport * from './lib/pipes/date-config.pipe';\nexport * from './lib/pipes/time-config.pipe';\nexport * from './lib/pipes/date-time-config.pipe';\n\n// services\nexport * from './lib/services/config.service';\n\n// types\nexport * from './lib/types/app-config.type';\nexport * from './lib/types/config.type';\nexport * from './lib/types/auth-config.type';\nexport * from './lib/types/base-config.type';\n\n// modules\nexport * from './lib/app-config.module';\nexport * from './lib/app-config-utils.module';\n\n// token\nexport * from './lib/app-config.token';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","Injectable","Inject","WindowRefService","ObjectService","Pipe","CurrencyPipe","DatePipe","NgModule","CommonModule","Optional","SkipSelf"],"mappings":"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"}